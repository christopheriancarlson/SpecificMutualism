(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    357082,       7120]
NotebookOptionsPosition[    350650,       7020]
NotebookOutlinePosition[    351042,       7036]
CellTagsIndexPosition[    350999,       7033]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Here, I consider the result of mutant invasion in a cycling population with \
the purpose of generating a pairwise invasibility plot. This occurs when \
average specialist payoff exceeds average generalist payoff. First I\
\[CloseCurlyQuote]ll consider the outcome of  an invading alpha mutant along \
a cycle\[CloseCurlyQuote]s period. Below is our system of equations denoting \
the frequency of each strategist. \
\>", "Text",
 CellChangeTimes->{{3.832678973595665*^9, 
  3.832678984677737*^9}},ExpressionUUID->"3e5a4f7b-6ab0-4889-8ba7-\
e113de837522"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"x", " ", "\[Rule]", " ", 
    RowBox[{"the", " ", "proportion", " ", "of", " ", "a", " ", 
     RowBox[{"host", "'"}], "s", " ", "resource", " ", "that", " ", "is", " ",
      "shared"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\[Alpha]", " ", "\[Rule]", " ", 
    RowBox[{"the", " ", "matched", " ", "exchange", " ", "rate"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"\[Alpha]", "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "c"}], ")"}]}]}], ")"}], "^", "c"}], " ", 
     "\[Rule]", " ", 
     RowBox[{"the", " ", "mismatched", " ", "exchange", " ", "rate"}]}], ",", 
    " ", 
    RowBox[{"f", 
     RowBox[{"(", "\[Alpha]", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\[Alpha]g", " ", "\[Rule]", " ", 
    RowBox[{"the", " ", "generalist", " ", "exchange", " ", "rate"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"payoffs", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "\[Minus]", "x"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"\[Alpha]", "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "c"}], ")"}]}]}], ")"}], "^", "c"}], 
         "\[Minus]", "x"}], ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]g", "\[Minus]", "x"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "\[Minus]", "\[Alpha]"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "\[Minus]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"\[Alpha]", "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "c"}], ")"}]}]}], ")"}], "^", "c"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "\[Minus]", "\[Alpha]g"}], ")"}]}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Payoffs", " ", "for", " ", "hosts", " ", 
    RowBox[{"(", 
     RowBox[{"1", " ", "through", " ", "3"}], ")"}], "and", " ", "symbionts", 
    " ", 
    RowBox[{"(", 
     RowBox[{"4", " ", "through", " ", "6"}], ")"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.8200733256350183`*^9, {3.8200733628427477`*^9, 3.82007337995478*^9}, {
   3.820073569657474*^9, 3.8200736480791483`*^9}, {3.8200737949187517`*^9, 
   3.820073831755643*^9}, {3.820074070570157*^9, 3.820074248049464*^9}, 
   3.820074278672884*^9, {3.820075729413348*^9, 3.820075760985618*^9}, {
   3.8200761244975777`*^9, 3.820076195902012*^9}, {3.820076240204764*^9, 
   3.820076293478219*^9}, {3.8200777030420723`*^9, 3.820077727485458*^9}, {
   3.820077780583953*^9, 3.820077792665119*^9}},
 CellLabel->
  "In[517]:=",ExpressionUUID->"5362dee0-5f0a-4060-acde-cd5edcc5ab5b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pi1", ",", 
     RowBox[{"pi1", "'"}], ",", "pig", ",", "\[Psi]1", ",", 
     RowBox[{"\[Psi]1", "'"}], ",", "\[Psi]g1"}], "}"}], "=", "payoffs"}], 
  ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Resident", " ", "host", " ", 
       RowBox[{"payoffs", ":", " ", "pi1"}]}], " ", "=", " ", "match"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"pi1", "'"}], " ", "=", " ", "msimatch"}], ",", " ", 
     RowBox[{
      RowBox[{"and", " ", "pig"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"generalist", ".", " ", "Payoffs"}], " ", "for", " ", "a", 
         " ", "symbiont", " ", "interacting", " ", "with", " ", "host", " ", 
         "1"}], ":", " ", "\[Psi]1"}], " ", "=", " ", "match"}]}], ",", 
     RowBox[{
      RowBox[{"\[Psi]1", "'"}], " ", "=", " ", "mismatch"}], ",", 
     RowBox[{"\[Psi]g1", " ", "=", " ", "generalist"}]}], ")"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pi1m", ",", 
     RowBox[{"pi1m", "'"}], ",", "pig1m", ",", "\[Psi]1m", ",", 
     RowBox[{"\[Psi]1m", "'"}], ",", "\[Psi]g1m"}], "}"}], "=", 
   RowBox[{"payoffs", "/.", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", "\[Rule]", " ", "\[Alpha]m"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Payoffs", " ", "received", " ", "when", " ", "interacting", " ", "with", 
    " ", "a", " ", "mutant", " ", "host"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.832162239991008*^9, {3.832600415913095*^9, 3.832600416885603*^9}, {
   3.8326007267769003`*^9, 3.832600728764533*^9}, {3.832600822164607*^9, 
   3.8326008298966427`*^9}, {3.832600878382546*^9, 3.832600881902191*^9}, {
   3.8326810973905163`*^9, 3.832681098436821*^9}, {3.832681155501195*^9, 
   3.832681173172654*^9}},ExpressionUUID->"d017ceb6-bc74-49a7-89ff-\
71aeac02662f"],

Cell["Next we find the average payoffs of each strategist:", "Text",
 CellChangeTimes->{{3.820076037863706*^9, 
  3.8200760481300507`*^9}},ExpressionUUID->"56ea5d71-2349-48b5-9351-\
ac7956b03b94"],

Cell[BoxData[
 RowBox[{
  RowBox[{"S1", " ", "=", " ", 
   RowBox[{
    RowBox[{"v1", "*", "\[Psi]1"}], "+", 
    RowBox[{"v2", "*", 
     RowBox[{"\[Psi]1", "'"}]}], "+", 
    RowBox[{"m1", "*", "\[Psi]1m"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "\[Minus]", "v", "\[Minus]", "p", "-", "m1"}], ")"}], "*", 
     "\[Psi]g1"}]}]}], " ", ";", 
  RowBox[{"(*", 
   RowBox[{"Symbiont", " ", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"S2", " ", "=", "  ", 
   RowBox[{
    RowBox[{"v1", "*", 
     RowBox[{"\[Psi]1", "'"}]}], "+", 
    RowBox[{"v2", "*", "\[Psi]1"}], "+", 
    RowBox[{"m1", "*", 
     RowBox[{"\[Psi]1m", "'"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "\[Minus]", "v", "\[Minus]", "p", "-", "m1"}], ")"}], "*", 
     "\[Psi]g1"}]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Symbiont", " ", "2"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"H1", "=", 
   RowBox[{
    RowBox[{"u", "*", "pi1"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "u"}], ")"}], "*", 
     RowBox[{"pi1", "'"}]}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"H2", " ", "=", " ", 
   RowBox[{
    RowBox[{"u", "*", 
     RowBox[{"pi1", "'"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "\[Minus]", "u"}], ")"}], "*", "pi1"}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "2"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"HM1", "=", 
   RowBox[{
    RowBox[{"u", "*", "pi1m"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "u"}], ")"}], "*", 
     RowBox[{"pi1m", "'"}]}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "1", " ", "mutant"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"HG", " ", "=", " ", "pig"}], ";", 
  RowBox[{"(*", 
   RowBox[{"Generalist", " ", "Host"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Hbar", " ", "=", " ", 
   RowBox[{
    RowBox[{"v1", "*", "H1"}], "+", 
    RowBox[{"v2", "*", "H2"}], "+", 
    RowBox[{"m1", "*", "HM1"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "v1", "-", "v2", "-", "m1"}], ")"}], "*", "HG"}]}]}], 
  ";", 
  RowBox[{"(*", 
   RowBox[{
   "Payoff", " ", "received", " ", "by", " ", "a", " ", "host", " ", "on", 
    " ", "average"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.820074540790298*^9, 3.820074650592514*^9}, {
  3.820074704049736*^9, 3.820074717162568*^9}, {3.8200751483683453`*^9, 
  3.82007516640654*^9}, {3.820075284605606*^9, 3.820075470716382*^9}, {
  3.820075518414898*^9, 3.820075521414131*^9}, {3.8200755663574*^9, 
  3.820075568724152*^9}, {3.820075641858447*^9, 3.820075656545648*^9}, {
  3.820075978882987*^9, 3.820076018347522*^9}, {3.82007605048739*^9, 
  3.820076100443137*^9}, {3.8200764591376963`*^9, 3.820076478707473*^9}, {
  3.832600412558515*^9, 3.832600432682219*^9}, {3.832600489406575*^9, 
  3.832600504829137*^9}, {3.832600861935495*^9, 3.832600876222567*^9}, {
  3.8326009238593693`*^9, 3.83260093473641*^9}, {3.832600972430435*^9, 
  3.83260101616286*^9}, {3.8326793213484983`*^9, 3.8326793508644953`*^9}, {
  3.832681105241704*^9, 
  3.832681117395982*^9}},ExpressionUUID->"429bcba3-195c-4448-a7e9-\
3b7633c9d65b"],

Cell["\<\
Finally, we\[CloseCurlyQuote]ll find expressions for the frequency of each \
strategist: \
\>", "Text",
 CellChangeTimes->{{3.820076105824135*^9, 3.820076115462105*^9}, {
  3.820076499431931*^9, 
  3.820076500609165*^9}},ExpressionUUID->"16489ecc-22d2-42cf-87c5-\
4dea55eff119"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"S", " ", "=", " ", 
    RowBox[{"u", 
     RowBox[{"(", 
      RowBox[{"1", "-", "u"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"S1", "-", "S2"}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Symbiont", " ", "1"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V1", "=", 
    RowBox[{"v1", 
     RowBox[{"(", 
      RowBox[{"H1", "-", "Hbar"}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "1"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V2", "=", 
    RowBox[{"v2", 
     RowBox[{"(", 
      RowBox[{"H2", "-", "Hbar"}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "2"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M1", "=", 
   RowBox[{"m1", 
    RowBox[{"(", 
     RowBox[{"HM1", "-", "Hbar"}], ")"}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "1", " ", "Mutant"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.820075578568108*^9, 3.8200756540991077`*^9}, {
  3.8200756978737497`*^9, 3.820075710614533*^9}, {3.820076391596644*^9, 
  3.820076593781057*^9}, {3.820076680443733*^9, 3.8200766827389517`*^9}, {
  3.8326004527249813`*^9, 3.8326004806239967`*^9}, {3.832600546691778*^9, 
  3.832600556131415*^9}, {3.832679322710647*^9, 
  3.832679322715366*^9}},ExpressionUUID->"f15ef93a-ffd8-419f-a5b8-\
6e1e4e8d2bf3"],

Cell["Now we can put these equations together in a system: ", "Text",
 CellChangeTimes->{{3.8200766040599537`*^9, 
  3.820076611912072*^9}},ExpressionUUID->"925cac77-4409-47ca-8cea-\
d71a6c8002b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"replicators2", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S", ",", "V1", ",", "V2", ",", "M1"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v1", "\[Rule]", " ", 
       RowBox[{"v1", "[", "t", "]"}]}], ",", 
      RowBox[{"v2", "\[Rule]", " ", 
       RowBox[{"v2", "[", "t", "]"}]}], ",", 
      RowBox[{"m1", "\[Rule]", " ", 
       RowBox[{"m1", "[", "t", "]"}]}], ",", " ", 
      RowBox[{"u", "\[Rule]", " ", 
       RowBox[{"u", "[", "t", "]"}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.832680966902451*^9, 
  3.832680979667665*^9}},ExpressionUUID->"eecff2c4-9759-4249-9695-\
622921d689ac"],

Cell["\<\
Finally, we\[CloseCurlyQuote]ll find expressions for the frequency of each \
strategist: \
\>", "Text",
 CellChangeTimes->{{3.820076105824135*^9, 3.820076115462105*^9}, {
  3.820076499431931*^9, 
  3.820076500609165*^9}},ExpressionUUID->"55663f9c-8366-4bf2-80ad-\
2fbc8661252b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"System", "[", 
   RowBox[{
   "\[Alpha]_", ",", "\[Alpha]m_", ",", " ", "\[Alpha]g_", ",", "c_", ",", 
    "x_", ",", "u0_", ",", "v10_", ",", "v20_", ",", "m10_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["u", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"u", "[", "t", "]"}]}], ")"}], " ", 
      RowBox[{"u", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}], " ", 
         RowBox[{"m1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]m", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"m1", "[", "t", "]"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"v1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"v1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"v2", "[", "t", "]"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"v2", "[", "t", "]"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["v1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"v1", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"u", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"m1", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]m", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]m"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]g"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"m1", "[", "t", "]"}], "-", 
           RowBox[{"v1", "[", "t", "]"}], "-", 
           RowBox[{"v2", "[", "t", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v2", "[", "t", "]"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["v2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"v2", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"u", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"m1", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]m", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]m"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]g"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"m1", "[", "t", "]"}], "-", 
           RowBox[{"v1", "[", "t", "]"}], "-", 
           RowBox[{"v2", "[", "t", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v2", "[", "t", "]"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["m1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"m1", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]m", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]m"}], ")"}], " ", 
         RowBox[{"u", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"m1", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]m", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]m"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]g"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"m1", "[", "t", "]"}], "-", 
           RowBox[{"v1", "[", "t", "]"}], "-", 
           RowBox[{"v2", "[", "t", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v2", "[", "t", "]"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"u", "[", "0", "]"}], "\[Equal]", "u0"}], ",", 
    RowBox[{
     RowBox[{"v1", "[", "0", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"-", "m10"}], "+", "v10"}]}], ",", 
    RowBox[{
     RowBox[{"m1", "[", "0", "]"}], "\[Equal]", "m10"}], ",", 
    RowBox[{
     RowBox[{"v2", "[", "0", "]"}], "\[Equal]", "v20"}], ",", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Restrict", " ", "frequencies", " ", "of", " ", "strategists", " ", 
       RowBox[{"to", " ", "[", 
        RowBox[{"0", ",", "1"}], "]"}]}], ":"}], " ", "*)"}], 
    RowBox[{"WhenEvent", " ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EvenQ", "[", "0", "]"}], "&&", 
       RowBox[{
        RowBox[{"m1", "[", "t", "]"}], "<", "0"}]}], ",", " ", 
      RowBox[{
       RowBox[{"m1", "[", "t", "]"}], "\[Rule]", " ", "0"}], ",", 
      RowBox[{
      "\"\<LocationMethod\>\"", "\[Rule]", "\"\<LinearInterpolation\>\""}]}], 
     "]"}], ",", 
    RowBox[{"WhenEvent", " ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EvenQ", "[", "0", "]"}], "&&", 
       RowBox[{
        RowBox[{"v2", "[", "t", "]"}], "<", "0"}]}], ",", " ", 
      RowBox[{
       RowBox[{"v2", "[", "t", "]"}], "\[Rule]", " ", "0"}], ",", 
      RowBox[{
      "\"\<LocationMethod\>\"", "\[Rule]", "\"\<LinearInterpolation\>\""}]}], 
     "]"}], ",", 
    RowBox[{"WhenEvent", " ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EvenQ", "[", "0", "]"}], "&&", 
       RowBox[{
        RowBox[{"u", "[", "t", "]"}], "<", "0"}]}], ",", " ", 
      RowBox[{
       RowBox[{"u", "[", "t", "]"}], "\[Rule]", " ", "0"}], ",", 
      RowBox[{
      "\"\<LocationMethod\>\"", "\[Rule]", "\"\<LinearInterpolation\>\""}]}], 
     "]"}], ",", 
    RowBox[{"WhenEvent", " ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EvenQ", "[", "0", "]"}], "&&", 
       RowBox[{
        RowBox[{"v1", "[", "t", "]"}], "<", "0"}]}], ",", " ", 
      RowBox[{
       RowBox[{"v1", "[", "t", "]"}], "\[Rule]", " ", "0"}], ",", 
      RowBox[{
      "\"\<LocationMethod\>\"", "\[Rule]", "\"\<LinearInterpolation\>\""}]}], 
     "]"}], ",", 
    RowBox[{"WhenEvent", " ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EvenQ", "[", "0", "]"}], "&&", 
       RowBox[{
        RowBox[{"m1", "[", "t", "]"}], ">", "1"}]}], ",", " ", 
      RowBox[{
       RowBox[{"m1", "[", "t", "]"}], "\[Rule]", " ", "1"}], ",", 
      RowBox[{
      "\"\<LocationMethod\>\"", "\[Rule]", "\"\<LinearInterpolation\>\""}]}], 
     "]"}], ",", 
    RowBox[{"WhenEvent", " ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EvenQ", "[", "0", "]"}], "&&", 
       RowBox[{
        RowBox[{"v2", "[", "t", "]"}], ">", "1"}]}], ",", " ", 
      RowBox[{
       RowBox[{"v2", "[", "t", "]"}], "\[Rule]", " ", "1"}], ",", 
      RowBox[{
      "\"\<LocationMethod\>\"", "\[Rule]", "\"\<LinearInterpolation\>\""}]}], 
     "]"}], ",", 
    RowBox[{"WhenEvent", " ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EvenQ", "[", "0", "]"}], "&&", 
       RowBox[{
        RowBox[{"u", "[", "t", "]"}], ">", "1"}]}], ",", " ", 
      RowBox[{
       RowBox[{"u", "[", "t", "]"}], "\[Rule]", " ", "1"}], ",", 
      RowBox[{
      "\"\<LocationMethod\>\"", "\[Rule]", "\"\<LinearInterpolation\>\""}]}], 
     "]"}], ",", 
    RowBox[{"WhenEvent", " ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EvenQ", "[", "0", "]"}], "&&", 
       RowBox[{
        RowBox[{"v1", "[", "t", "]"}], ">", "1"}]}], ",", " ", 
      RowBox[{
       RowBox[{"v1", "[", "t", "]"}], "\[Rule]", " ", "1"}], ",", 
      RowBox[{
      "\"\<LocationMethod\>\"", "\[Rule]", "\"\<LinearInterpolation\>\""}]}], 
     "]"}]}], "}"}], 
  RowBox[{"(*", 
   RowBox[{"Here", ",", " ", 
    RowBox[{
    "we", " ", "format", " ", "this", " ", "system", " ", "appropriately", 
     " ", "for", " ", "our", " ", "simulations", " ", "note", " ", "that", 
     " ", "we", " ", "begin", " ", "from", " ", "initial", " ", "conditions", 
     " ", "for", " ", "u"}], ",", " ", 
    SubscriptBox["v", "1"], ",", " ", "v2", ",", " ", 
    RowBox[{
    "v1m", " ", "and", " ", "v2m", " ", "given", " ", "by", " ", "u0"}], ",", 
    " ", "v10", ",", " ", "v20", ",", " ", 
    RowBox[{"v1m0", " ", "and", " ", "v2m0", " ", "respectively"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.832679025048715*^9, {3.832680987553628*^9, 3.8326809931124363`*^9}, {
   3.8326816746523867`*^9, 3.832681708470765*^9}},
 CellLabel->
  "In[909]:=",ExpressionUUID->"1184ef11-acfd-45a6-80b6-efc4d0e1aaba"],

Cell["\<\
Our goal is to determine when mutants will be able to successfully beat out \
residents on average across a resident\[CloseCurlyQuote]s cycle. First we \
will consider what vaules of extraction it will be reasonable to test in our \
simulations for a concave down tradeoff function. We will do so by plotting \
our tradeoff function, and the generalist and specialist payoffs as a \
function of \
\>", "Text",
 CellChangeTimes->{{3.832681736767103*^9, 3.832681761654521*^9}, {
  3.832681798698311*^9, 3.832681898765547*^9}, {3.832681945739571*^9, 
  3.832681954190707*^9}, {3.8326820833177843`*^9, 
  3.83268209321145*^9}},ExpressionUUID->"a103c7ac-02d8-4877-827b-\
b8f93b339d43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"\[Alpha]", "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "c"}], ")"}]}]}], ")"}], "^", "c"}], ")"}], "/.", 
    
    RowBox[{"{", " ", 
     RowBox[{"c", "\[Rule]", " ", 
      RowBox[{"1", "/", "2"}]}], "}"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", " ", "Automatic"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<f(\[Alpha])\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8326819635410852`*^9, 3.832681972559078*^9}, {
  3.83268209560569*^9, 3.832682173956332*^9}, {3.8326822930526867`*^9, 
  3.8326823194921627`*^9}},
 CellLabel->
  "In[898]:=",ExpressionUUID->"d61a09b4-66fd-4236-82be-27ff8778b473"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nk0VW0bBnAkU6+xkQ7CSUQnKaXBeyWiRGVKSuYiRSgVDehDKkODjkIo
lCHUMWUqIV5F5lAyT+GcnUqSOr7HXmuvvX7/7Xs/a9/XpeB4yuwoHw8PTwW5
555GR0cay75Y/sudnbso8OvJeHZLb0DoqldDc16fcC8uR1ofcge4MXMeoNED
zynvhc31Utqc99S1sR5IW2D09Z8TXGJ6mGzKrLw1gqaLQ/8S/zFyinZQtsWU
+oz3H+LRoJZKB6YDVlgVrZ4htnKeKr0t7Ywxr+nsaeJKPZmCirhjsD77gu8X
sYaSzrMf8sdx3mZK8SdxHJ992sqkE3Bbni/xg1io78qjA8oesE/78W6CuKin
qa7CwhNxMywLithzv7ORDdML3gIT6ePEn9de1QuXPoMwqXEyIIWohGVlKw/7
4N1U6uV+YiPx9G0v484i9sigSA9xPqdWi5L3xX3XzhvtxCdtbVlXHfywe5QZ
0EKs+J5irEi6gPCUhh0NxBGZUiqmypcRfu712mrinbLJyV9c/GHmdP5QOfHl
qhiJ1xYBKNHMMisl3rBRPdyaGYjdNGYGizhx8b6Q69JB8Ne3mI0hvlAXXXmg
KAhql2fvRhEfCO7hUzocjKpyld/hxP9MevkXx4UglfNjdQDx+Zao8+Py1zCj
6slwJDYP+5z/ouwaLssIrTtEzNBXngxyuA4XXlles7nzzCnwkk26AaclpcK6
xKZ3PrrtVY7AyYHGEhqx+h6lNJnqCCxeYqK2cO57zzs5POQSiUq2noswsV0h
9/kri5vQaU0ynORSWKx6k3GQeQuBW1alvyUOFMpZdU06CgYzYj9PEK82vBXK
8oxCOLt1lS1xU/CpL5+qo/Di4ma5/cT0eeoZjLN3Ubqp9eB64qq/yYyWJibo
Ow7Mn/pL5v3O1JIPu49Jn/VbTxPnrfNh7uq/j8aSuHwHYltP8ymvLTHwVHzw
cx9xNlu8sHIkBktLHSrViM1GQre57YzDblGK2fOHwr3Pfnp53Hj897pkKYh1
adbJXZYJoFcc61QlHj20ab5QZgJ2ST88uohYbtzXKXNNIib7K9+MzFA4dXzj
Sp7ORDCvF5dEEEs5Z6emaD+CDnMyqP43hYPWD7O/TiTDhNbpR5+mQH2yEHkk
k4LXfawXwsQhtkJHzfVSYBeTWs75RSHH6ZRMflQKZOs5W14Qi3noBF/Y9Bja
eW0lu4jfXOk4JHDpCdYdTZpvP0VB86mkAE0oHYWxa564TFKoYbyxr9NIR8pU
g4sBsf3z88WXrdOxlgr4QScOz+/27E1PR4QSv3fvDwojZZmfHptkIO168F8r
4vjW3c/X3XmKUrMey63fKSyYDbQxlMtGxCoFwU9fyfc6bmWrbpCNwf4VErnE
9BZ1e0mPbCxzpw2HEf+b1ub0qTQbOvP5Z3WIC9OYeQWMZ7jyLeDDA4oC23y8
ZM/7Zzjce0PJgkPBMjX63WlRFtL5QjRix8j/feSK8TEFFgbqQ6fcifuk3OsO
arFgFOsRtp341KUd9TpHWPjW3C0/OErhmhm7STCThbNqumw14tI/Oz7GGufg
kykUno1QWGnKGam4kYvxnp/DtwcpyPgbbnF5mItJbVGRw8QSmYk3RApysfK3
8IQi8W8hc4ZpXy4M256LsgYoNJQVnO7SzkNT+L3Aun4KfhqB3F+DeZhSSDeb
7qXwXnzRIsb2AoTSP96kd1E4934z7v0oRFToN42aVnJ+jLzBGqEiZHyP3XqV
ODlcI2yGVgTj5stSO4kbjVd12O4sQl3/GL2shYLau0WnVzKL8LAQnTnNFLqr
qcesTcWot8y6c6uRguHrFLE6vxLs+eNFU66jsDRXsouX9xUWa/vvyqkg+6pP
r7Z+WznUDNnUiacUyt0eLLcer4TuUqZewy0Kk8o64pnu1QjpiiiM9aHAN50h
sXzlW6xj1GwwMqewcdY+3zyrFjoHv7/PWUuhNmjD+6rV9XgJrpmXMAX5m2PT
aZwGDJdZ9i/r5GBsqrurVaMJPKVbh1dkcZA8WvxWLKIZ0a2K/dvOcyAm+4Qa
GGgB15/rrwQOwo7nHUukfwBT8ki0uAAHP7dnDLj6t2FU5LV1bwUbZzQrc5dU
tMN+fBmbG8hGd1bljUaFj0igHbWe1WJjxq0lVtXvExQW51RHDY1DTVeQe6y4
E8tNhmQk743D8JGCy/OlXfBbahP9TWcc52TtFHttuvGzLCTz28AY1MctF7SZ
9IBFO2wxFTqGheJfhSp/9+Buk5pjuvwY+F/FZivF9UIuuZDiFozixIbiDuE9
fTArYNz20R1Fxm7HxJc/+6C08LTulaovmByTkRhi9kMw5n93E02+IM/ccF6U
/gD00y9221SMwH9XcELu0ADiZe7LKWwdgcJno/ak4EEcr2UzXLKGsWVTUJS0
5hAmfj1wlxQdho1c/TRv8xB2T08k1LgPYfJteJ9n4DBCaMoC+fmDuMdve8aM
PoJDW+NPCvEOYmFX3iO+yhHs10z3qdEbwPxLgRabvb7ATn52W5RrP3jSbLP7
pEZhSZOMXxveB++Y7HCp8lF8j7mj2RDWi1K1UCFJjzF0Rj+2+erXA0kjb/Ur
YuNQETI4qlndhc41Dc2+JeNI9hulJat04lk86AO2bBS325r0u3Tgu993QQcH
NqYrw6TsbDqw0erJ2GcnNr57MBJb9negWFw8p82Vjea4x9+ebu5AVUCX7jtv
NqqqegIkF3Tgk+MlO1YIGxMO3+wePW2HwKrimIAsNm7mMEwSRttwJHujpCyX
jaW9loE39n1A/qFfYg08HATnRvjx6X6AmEDRP/+bx0Gm+z8JHpofUGajI/RF
iAN7/t8LlRd/gKKI/mzuQg7MBGz1xT+2YsjZlG2sykH5whfe+Q6t8JA5WXPR
goMQFcuDSS4tqHqzpnqtFQc31ksPR1q1QN6Lquyz5uDM8quGHoYtaKj2Lttl
xwG9T2RyVrkFmj6+BYvcOPhvUFX19GAzpupDUp76c+A9W7juvF0zAoIfBnam
cyDX3jyvyaAJoucEjRwyOcgNTKrt1WpCjKu71FA2B8LaznY99Cbk7NmcROVy
8DI6SD6NrwlDko2VfK84eCOk6e9U2og98TxCqs0cKKofEDBe24glBXYRPjMc
3Ns+soAxrwFJqW8O/P7LgXbypr87u+uhEaMm789D4Vctgv8U1GP3pans0PkU
ImvhW+taj4t6kY2x4hRczwSU9Va/R1/9y0XlSmSvcMXF5S7UIXNENlbMmELq
bccGo6y3CH0QbN+1l/ScIpmfe33fwtmMvTLLlILvDhm3fr23oJWUPDOxorB3
QbIzq60G1yMPV4U5Uri66O4a5vR/cN14f0LEl0KbmEDqcaVq6I/xFHy8QMGp
7uLdgcEqyCe6Xky/TCG4PreX9aQKH4S1BY2CSM8SHG3QVK3Czs8faNciKbjc
K44XVXoDxaBFuwQfk9zw2WmuNFYOrvZF0bZUCrc5mRYGCeXoYPc3Pc6g0OOz
30rFrBw3rXKOGDynsMUl7uZwzmvMrjY7HVxC5m/ZxrvmaBk+dhdqW74iPeBC
fZSKaBnyoxS49HIKWs5SkUeOvYIH92toZTUFRzrvkpiJUnQ2RsbPI3v6hQh/
RvbbIrwImXJqJnvdZMHSU+cmSA5stVNNaifvZ6fwrFGiEHtSGLk7SE7Y2sUu
bNcqgPIhpq8UyZGOWmE/u8354BPn/ttHcoYyiPaSWpeHovN1NYFfSM8+l3hC
bZIF5hqtSNNx0mt/OVKyJc/h1RdnoUBy1UD3qQTrxDMYR/PLTEyQ+a9venB1
JhMqxie7y0iuG4va2tc1poOftyX5JukN+wzc+S5ueYKevK1u9qSnWCiUxBVO
PUKJW9JaDdKT9i9ZrV/YHINo+QWTcz3/lI1EB/+F1fg/u21XwQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$4659692#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Alpha]\"", TraditionalForm], 
    FormBox["\"f(\[Alpha])\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.9999999999999998}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.832681964501011*^9, 3.8326819734939632`*^9}, 
   3.832682108594471*^9, {3.8326821441079884`*^9, 3.832682174596246*^9}, {
   3.832682294524785*^9, 3.832682320533072*^9}},
 CellLabel->
  "Out[898]=",ExpressionUUID->"c1538453-0c24-4231-ad8a-3f5ebc42bd7e"]
}, Open  ]],

Cell["\<\
And the relationship between specialist average payoff and generalist payoff: \
\>", "Text",
 CellChangeTimes->{{3.832681977713626*^9, 
  3.8326820182264013`*^9}},ExpressionUUID->"deffadf4-3eea-45a3-b728-\
b59b492f7231"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"difference2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"pi1", "+", 
         RowBox[{"pi1", "'"}]}], ")"}], "/", "2"}], ")"}], "-", "pig"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", "0.5"}], ",", 
      RowBox[{"c", "\[Rule]", " ", 
       RowBox[{"1", "/", "2"}]}], ",", " ", 
      RowBox[{"\[Alpha]g", "\[Rule]", " ", "0.6"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"difference2", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", " ", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Pi]\), \(g\)]\)\>\"", ",", 
      "\"\<Specialist \!\(\*OverscriptBox[\(\[Pi]\), \(_\)]\)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.832682026412693*^9, {3.83268218888614*^9, 3.832682244318243*^9}, {
   3.832682370361272*^9, 3.832682415866972*^9}, {3.832773294957034*^9, 
   3.832773309246922*^9}},
 CellLabel->
  "In[992]:=",ExpressionUUID->"6e6417a9-2d07-48a1-88ca-b1dde445ca99"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13s8VF0XB3C3SioiFVIiiqI8JSnl50FRJKSUhEpSSZJyrSQkUUjlfhcz
QyqSIiOJLhRy6Sm5z5kZ5pKohPTu9y+f72evWWftc/Zee1M9fNruqJiIiMgh
URGR///dcZTTXM3dYzS5sO5UUhKNKWGq5N2tqIe9ggHpmJs05rqMxNQSRTOE
FIgHXg6nMS0bOx6lKdpjb5/xfc8zNKaD26/n8YpucBytuGG1ncb8uuaqaYyi
LwbnN65Z+7uAmTl/V0SUYhhM7vSPJOwvYF6WLFlxTTEB3pbHUsuV85n79mcV
fxvOhXSLceh1/1zmrL+XncyXFCM9aDQvRTqbqWEr4Ly8XorCzzFSnwIzmH7v
NyJx9CkUlh71tI1NZi4sle0SFWXCu2qF7F35O8yyPtOGD5tr4Kn37yK9vXHM
mhNpi/bzamFhfrPqz91rzB/Lt8gUnaqHbt+V2J97LjPFfjPmLtJ4i1gj8/tF
m84w9f+6lu2+3wCRJ6mPdxvqMxvC9N7XrfyA6myjmZqnT0Ildug3TdCEuXa5
m4WZFzD0q7urTbcFY5p7JBzEIpA7WPFW+sZH6FrcU+2KiYH04nzhwEArxowP
Xg/eH4/o44/dM9Xb8eBvlNq7m7fx05gx4HGpA2MrQnWCuInwXVtbuuDlJ2T+
zpVU4aag+37t9WbVzzA7JVk/RyIDEydaU7QCv6Av9kvl7B+ZWPXvjCn3ik6s
XCz93n9LNsyzVY89XNiFLkml+FsxOfBb7KLW69SN1Xk4NFKSC23enlkdO3vQ
c20lK+NFHubJfJOsHe+BJL9NbmnTPUgwU4qXpfbi2/eK/m9l+TipV/HfTMs+
OM2XXuCWWADG9sOZVT/7kPlfBf/4ARr0tFWN8LsP5dP2Oko701Al3fOFOdGH
1wo65g9daWj6eHDhC5F+lK6xyPx+lIbRg/tvvJTqRwNH3fyINw1GPjbBr5f0
w6YhcslkGIlPNtrXsq0f/rrjOTOLaPgxpDSXutOPfRd7JkPGaEhIY9enJvXD
3uHUzZFxGtbtKr20O7Ufrkafzdz+0HDm0U5hdVY/1IP8FhiL0cH3D3mfUtgP
vTkF5r2z6GBNo6Jta/rBabfwf7OEjjaVhzOf8/uh4Fr/RMeUDt/mCy/OfuuH
1TqvZ0e20jHvyo6AlSP96LSOabprToct1c+5O0bi/+itH7eko7FwwWsf8QG0
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
       "]]},
     Annotation[#, "Charting`Private`Tag$4671852#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Pi]\\), \\(g\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"Specialist \\!\\(\\*OverscriptBox[\\(\[Pi]\\), \\(_\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-0.04999999489795923, 0.053553390534878426`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.832682032272791*^9, 3.832682246230274*^9, {3.83268237134254*^9, 
   3.832682416958808*^9}, {3.83277329923427*^9, 3.8327733103820353`*^9}},
 CellLabel->
  "Out[993]=",ExpressionUUID->"a9511d9a-b5d0-4346-9a4a-78d578547be8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"difference2", "\[Equal]", "0"}], ",", "\[Alpha]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.832682521929123*^9, 3.832682597029475*^9}},
 CellLabel->
  "In[908]:=",ExpressionUUID->"94cc3e38-c868-4de8-a0a8-1e03c8a46ba3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.22583426132260587`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.9741657386773941`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.832682579970735*^9, 3.8326825974324512`*^9}},
 CellLabel->
  "Out[908]=",ExpressionUUID->"e2d04af2-5106-41d1-89a2-a9266de47000"]
}, Open  ]],

Cell["\<\
Given these parameters we\[CloseCurlyQuote]ll need to restrict our values of \
alpha to this domain. \
\>", "Text",
 CellChangeTimes->{{3.832682449297853*^9, 3.832682488324984*^9}, {
  3.8326826049754267`*^9, 
  3.832682612970392*^9}},ExpressionUUID->"2480b604-c548-4bda-8787-\
d7909434f3c3"],

Cell["\<\
Now let\[CloseCurlyQuote]s determine the cycle periods associated with this \
domain: \
\>", "Text",
 CellChangeTimes->{{3.832682636174452*^9, 
  3.8326826902345743`*^9}},ExpressionUUID->"811405fc-f07f-4291-89c5-\
d872440d2341"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CCPeriods", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]r", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Establish", " ", "a", " ", "Resident", " ", 
         RowBox[{"Population", ":"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"System", "[", 
            RowBox[{"\[Alpha]r", ",", "0", ",", "0.6", ",", 
             RowBox[{"1", "/", "2"}], ",", "0.6", ",", "0.25", ",", "0.28", 
             ",", "0.24", ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "v1", ",", "v2", ",", "m1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "30000"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", 
            RowBox[{"{", "\"\<StiffnessSwitching\>\"", "}"}]}], ",", 
           RowBox[{"MaxSteps", "\[Rule]", 
            RowBox[{"10", "^", "6"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"uans", ",", "v1ans", ",", "v2ans", ",", "m1ans"}], "}"}], 
         "=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], ",", 
            RowBox[{"v1", "[", "t", "]"}], ",", 
            RowBox[{"v2", "[", "t", "]"}], ",", 
            RowBox[{"m1", "[", "t", "]"}]}], "}"}], "  ", "/.", 
          RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"t", "-", "8000"}], ",", "v1ans"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "8000", ",", "9100", ",", "0.1"}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Fit", " ", "a", " ", "sinusoidal", " ", "function", " ", "to", " ", 
          "the", " ", "cycle", " ", "of", " ", "the", " ", "resident", " ", 
          "host", " ", "and", " ", "determine", " ", "its", " ", 
          RowBox[{"period", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Parameters", " ", "=", 
         RowBox[{"FindFit", "[", 
          RowBox[{"data", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{"b", "*", 
                RowBox[{"(", 
                 RowBox[{"t", "+", "c"}], ")"}]}], "]"}]}], "+", "d"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "t", ",",
            " ", 
           RowBox[{"Method", "\[Rule]", "\"\<NMinimize\>\""}]}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"T1", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "*", 
             RowBox[{"\[Pi]", "/", "b"}]}], ")"}], "/.", 
           RowBox[{"Parameters", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "T1"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]r", ",", "0.23", ",", "0.97", ",", "0.01"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8326827238295*^9, 3.832682839983955*^9}, {
  3.832682972590908*^9, 3.832682975992695*^9}, {3.832683044560907*^9, 
  3.832683114480768*^9}, {3.8326841990598373`*^9, 3.832684204338908*^9}, {
  3.832773313936206*^9, 3.832773341982769*^9}},
 CellLabel->
  "In[997]:=",ExpressionUUID->"328633c5-39d6-4d42-8049-219aacdafe93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"CCPeriods", ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2000"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.832682906107373*^9, 3.832682919216172*^9}, {
  3.832773429060875*^9, 3.8327734502908907`*^9}},
 CellLabel->
  "In[1000]:=",ExpressionUUID->"105db8d4-54f0-46e6-bbb2-e36424f95f59"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtk3tQlGUYxZdypkLoBsWtCDII+cdyjRZQzsPCwsIqsFxcoUURBpT2jyWW
wVo2hRJqQsMYVGBE4mLpFJRDCkRMgzY6JHJTrrKyCwsst11UcILowvf5PjPv
vH988515zvmd1zNVHZv+lEAgkG0c7v5ol+1QXdZtWCS9tTPPglrdC+flLd3Q
X/1AhhKQgJ9eqDSr2u3PE9VncT/0YmKfMeyhgkhq1Do2hvfB6fQnrvYXiBbk
LRsKfVi+e6G1e4Xo1LUVH2VJP+IroqzJkcG0Q8jNHSxFryS+VBdMw3Wc4B0U
J50T+QjElLehZtTehUUY9JZTqpje4NZxH0CTtLRzW6eYrnNy1wbw4JKNVP9e
CB3K4GYQXkX/BHx9MYQ4NxuCqKsKrxnyDCVOzbFxCOshR1x21oZSLLeefBjf
Zw9Pqnwl9JiTWxlGp3/LJvc2CVVWcDOC4pS1n4UJYRTEC45C/k1R2R61lHi7
xlEIlgJFr10KpyJuvcJ7qNaPuu1Ol5IvJ+czhi86TAG52yKou4ubMVRL9nu8
/1wkZfN56yGvedErejmSXuEXvI+25IQzHo9kxK/Xch+lTfF2q8/sIV5OOY6S
5q71nX5RjIcB2dYrAnFBNPNjwNv7/127kRvD+Big9Kss9CA582fAWpPmnJtH
LONlRLF/vp3GNY75NUKuDcxL2RHP+BlhKdMddcpJYP4ncNDhs4F+417GcwLb
B0/+VvPlPprg5Ta+m9pHqnKTGN9JHHogyzr/u5LlMwnbnMu5yccOMN6TULwa
/9O76oO0lTdogqjcOcT/ZBrjb0LG8aWCvbIMus3nZ4JNw5yt63om68MUUkrt
GrYEqulJf6dQe92/ZqJew/oxhSs/3rLvqNKyfKdxM6J+vNt0nPVlGstH6nuS
Hpazvk/D2qVTNKsu02a+PzPYGiz33mJfzPKfgc2oJjNMcpT1aQZTX/2ivPUo
h/Ew4y/3vo7BVTXjYUZPmGnzxT8zGQ8zKtr6ZwdOpTMeZtzUW31bP01lPGYh
OvF6WKtXCuMxC53yv7KlSiXjMYtxtd/hxvOJxNvdNYcIBxfVY28F8euVzCH+
B2dnvUMC6+ccgj1jYr6NiiMeh3AegmNPf9h8Q058fIXz+Dgg7rQwK4aePJd5
lLm1/93weRTjsYCrXSP5hsO7GY8FmDU+320qjGQ8FuCYVq+w65EyHoto/6Pc
uxrhjMcidHmid/J7JYzHIpxdXkgr0IUSL+dowVmR7l5PUAjxODIsUKjgYX5Z
zPpvQWJGWfmby8TesxUHfo0dy2sF/Q/lODW0
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2145833333333336, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.2145833333333336, 0.97}, {0, 2000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.832682906810514*^9, 3.832682920039607*^9}, 
   3.832683002012323*^9, 3.832773382534904*^9, {3.832773414242516*^9, 
   3.83277345088722*^9}},
 CellLabel->
  "Out[1000]=",ExpressionUUID->"a1ee9fb9-caf5-409c-bf90-9489d2c8cc58"]
}, Open  ]],

Cell["\<\
Because this plot of discontinuities looks good to go, we know that our range \
is reasonable. \
\>", "Text",
 CellChangeTimes->{{3.832682926544709*^9, 3.832682962233087*^9}, {
  3.832683372189616*^9, 
  3.832683407953554*^9}},ExpressionUUID->"134889cf-0654-45a2-8c30-\
eaf0beedf9be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "here", " ", "we", " ", "define", " ", "a", " ", "fuction", " ", "to", " ",
     "find", " ", "the", " ", "average", " ", "frequency", " ", "of", " ", 
    "a", " ", "given", " ", 
    RowBox[{"strategist", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FindAverage", "[", 
     RowBox[{"fun_", ",", "a_", ",", "b_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}]}], ")"}], "*", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{"fun", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "a", ",", "b"}], "}"}], ",", 
       RowBox[{"WorkingPrecision", "\[Rule]", "8"}], ",", " ", 
       RowBox[{"AccuracyGoal", "\[Rule]", " ", "8"}]}], "]"}]}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{
  3.832682670978889*^9, {3.832683509419518*^9, 
   3.8326835269682817`*^9}},ExpressionUUID->"d67e3c71-3d19-44ef-9806-\
c26784512df2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Now", " ", "for", " ", "the", " ", "concave", " ", "down", " ", 
    "tradeoff", " ", 
    RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PIPCC", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Alpha]r", ",", "\[Alpha]m", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Establish", " ", "a", " ", "Resident", " ", "Population", " ", 
          "with", " ", "arbitrary", " ", "initial", " ", 
          RowBox[{"frequencies", ":"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sol", "=", 
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"System", "[", 
             RowBox[{"\[Alpha]r", ",", "0", ",", "0.6", ",", 
              RowBox[{"1", "/", "2"}], ",", "0.5", ",", "0.25", ",", "0.28", 
              ",", "0.24", ",", "0"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"u", ",", "v1", ",", "v2", ",", "m1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "30000"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", "\"\<StiffnessSwitching\>\"", "}"}]}], ",", 
            RowBox[{"MaxSteps", "\[Rule]", 
             RowBox[{"10", "^", "6"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"uans", ",", "v1ans", ",", "v2ans", ",", "m1ans"}], "}"}], 
          "=", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], ",", 
             RowBox[{"v1", "[", "t", "]"}], ",", 
             RowBox[{"v2", "[", "t", "]"}], ",", 
             RowBox[{"m1", "[", "t", "]"}]}], "}"}], "  ", "/.", 
           RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"data", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "-", "8000"}], ",", "v1ans"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "8000", ",", "9100", ",", "0.1"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Fit", " ", "NDSolve", " ", "output", " ", "to", " ", "sin", " ", 
           "function", " ", "and", " ", "find", " ", "the", " ", "period", 
           " ", "for", " ", "the", " ", "resident", " ", 
           RowBox[{"population", ":"}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Parameters", " ", "=", 
          RowBox[{"FindFit", "[", 
           RowBox[{"data", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"a", "*", 
               RowBox[{"Sin", "[", 
                RowBox[{"b", "*", 
                 RowBox[{"(", 
                  RowBox[{"t", "+", "c"}], ")"}]}], "]"}]}], "+", "d"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "t", 
            ",", " ", 
            RowBox[{"Method", "\[Rule]", "\"\<NMinimize\>\""}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"T1", "=", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{"\[Pi]", "/", "b"}]}], ")"}], "/.", 
            RowBox[{"Parameters", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "T1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Introduce", " ", "mutant", " ", "invaders", " ", "at", " ", "each", 
          " ", "0.1", "*", "T1", " ", "of", " ", "the", " ", 
          RowBox[{"cycle", ":"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SampleInvasion", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"st", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"uf", ",", " ", "v1f", ",", "v2f", ",", "m1f"}], 
                 "}"}], "=", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"u", "[", "st", "]"}], ",", 
                   RowBox[{"v1", "[", "st", "]"}], ",", 
                   RowBox[{"v2", "[", "st", "]"}], ",", 
                   RowBox[{"m1", "[", "st", "]"}]}], "}"}], "/.", 
                 RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", 
               "                   ", 
               RowBox[{"sol2", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"System", "[", 
                   RowBox[{"\[Alpha]r", ",", "\[Alpha]m", ",", "0.6", ",", 
                    RowBox[{"1", "/", "2"}], ",", "0.5", ",", "uf", ",", 
                    "v1f", ",", "v2f", ",", "0.05"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"u", ",", "v1", ",", "v2", ",", "m1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", "0", ",", 
                    RowBox[{"7", "*", "T1"}]}], "}"}], ",", 
                  RowBox[{"Method", "\[Rule]", 
                   RowBox[{"{", "\"\<StiffnessSwitching\>\"", "}"}]}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", 
                   RowBox[{"10", "^", "6"}]}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"uans", ",", "v1ans", ",", "v2ans", ",", "m1ans"}], 
                 "}"}], "=", " ", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"u", "[", "t", "]"}], ",", 
                   RowBox[{"v1", "[", "t", "]"}], ",", 
                   RowBox[{"v2", "[", "t", "]"}], ",", 
                   RowBox[{"m1", "[", "t", "]"}]}], "}"}], "  ", "/.", 
                 RowBox[{"Flatten", "[", "sol2", "]"}]}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "Average", " ", "mutant", " ", "frequency", " ", "several", 
                 " ", "Periods", " ", "after", " ", "they", " ", 
                 RowBox[{"invade", ":"}]}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"m1avg", "=", 
                RowBox[{"FindAverage", "[", 
                 RowBox[{"m1ans", ",", 
                  RowBox[{"4", "*", "T1"}], ",", 
                  RowBox[{"7", "*", "T1"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"m1avg", ">", "0.05"}], ",", "1", ",", "0"}], 
                "]"}]}]}], 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
               "If", " ", "mutant", " ", "average", " ", "frequency", " ", 
                "has", " ", "increased", " ", "from", " ", "its", " ", 
                "initial", " ", "low", " ", "frequency"}], ",", " ", 
               RowBox[{
               "we", " ", "deem", " ", "this", " ", "a", " ", "successful", 
                " ", "invasion"}]}], "*)"}], "}"}], "\[IndentingNewLine]", 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"st", ",", "8000", ",", 
              RowBox[{"8000", "+", "T1"}], ",", 
              RowBox[{"0.01", "*", "T1"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Determine", " ", "if", " ", "on", " ", "average", " ", "the", " ", 
           "mutants", " ", "successfully", " ", 
           RowBox[{"Invade", ":"}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"FlattenedSample", "=", 
          RowBox[{"Flatten", "[", "SampleInvasion", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AvgResult", "=", 
          RowBox[{"Mean", "[", 
           RowBox[{"Take", "[", 
            RowBox[{"FlattenedSample", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "This", " ", "is", " ", "the", " ", "average", " ", "frequency", 
           " ", "with", " ", "which", " ", "the", " ", "mutant", " ", 
           "successfully", " ", 
           RowBox[{"invaded", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         "AvgResult"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Finally", ",", " ", 
          RowBox[{
          "this", " ", "is", " ", "a", " ", "bindary", " ", "definition", " ",
            "of", " ", "successful", " ", 
           RowBox[{"invasion", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"AvgResult", ">", "0.5"}], ",", "1", ",", "0"}], "]"}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]r", ",", "0.23", ",", "0.97", ",", "0.01"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]m", ",", "0.23", ",", "0.97", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{
  3.832681017172552*^9, {3.832681195677443*^9, 3.832681198782948*^9}, {
   3.832681282599381*^9, 3.832681284058196*^9}, {3.832683027076804*^9, 
   3.832683027667301*^9}, {3.832683416205151*^9, 3.832683418725638*^9}, {
   3.8326834654239902`*^9, 3.832683484898005*^9}, {3.8326836213392363`*^9, 
   3.832683624206311*^9}, {3.832683689812386*^9, 3.8326836945902157`*^9}, {
   3.832683799393414*^9, 3.83268401174093*^9}, 
   3.832684270740304*^9},ExpressionUUID->"bc616b68-f661-4dad-901c-\
823e45216ba5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PIPCCF", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"PIPCC", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotCC", "=", 
   RowBox[{"PIPCCF", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"PlotCC", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", "  ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(r\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(m\)]\)\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.832683548998211*^9, 3.8326835549561253`*^9}, {
  3.8326836057361317`*^9, 3.832683653085203*^9}, {3.8326837149754467`*^9, 
  3.832683715063726*^9}},
 CellLabel->
  "In[933]:=",ExpressionUUID->"d616297b-72b8-4ee1-9621-44f9caf5c1be"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxlvTGwJNl6VnsDU7hXLgSekCtcMSa4ki2LCISJwBT2lStccMGWLVzh0h3n
THdP9/R0zeysqjm9q3JnliUi8LjdM2v/8a2U8c5bxpt397+qVldlZe79L/7d
f/zzf/9PfvOb3/y/P/zNb778/U9/+gfv/8dfvfrGf//XP/vd+md//3ryb77+
39Pk//lXX/5fiv/t8te//bt/8zx5/Nnf//6/UPxf/+Ef/+gv/vbbyf/qT778
35vJv/9//P7/rfi//P6/tvz128n//Mv/nH/2bvL//vKf+4fiv/z6f99N/oNf
/oOTv/zXfvt3xX/+5X/en32Y/H+//Of+sfi//7cv//f95H/99T/4cfL5y3KX
4r/58j/vdz9M/pdf/nN/9Gnyq//z5f8+ac6nyV+X+9sfJ3/9n/f3xV//c3/x
k3w0rafJT9P6mnwtWu8if4vWf5bP4l/+c8Vf9f7JZfJXfb+7yPdF87rK/1Xz
K/7l9fCz5ln8y+uj+A+/zvdl8n/4+np50byLf3n9fNb8i395PX2Wjy4fXT66
fHT5uMlH8dfxrcVf//zpffLX/3l/e5ePu3ys8rHKxyofQz6GfAz52ORjk4/i
X17vu96/u3zs8vE4dAn2X3oF0yuYXsH0CqZXML2C6RVMr2B6BdMrmF7B9Aqm
VzC9gukVTK9gegXTK5hewfQKplc579NkegXTK5hepY+m9TT5aVpfk69F613k
b9H6z/JZTK9gegXTq/R90byu8n/V/IrpVc6zmF7B9AqmVznvYnqV8y+mV+mj
y0eXjy4fXT5u8lFMr2B6BdOr9HGXj1U+VvlY5WPIx5CPIR+bfGzyUUyv8v27
y8cuH4/D5yZ3CfZfegXTK5hewfQKplcwvYLpFUyvYHoF0yuYXsH0CqZXML2C
6RVMr2B6BdMrmF7B9CrnfZpMr2B6BdOr9NC0niY/Tetr8rVovYv8LVr/WT6L
6RVMr2B6lb4vmtdV/q+aXzG9ynkW0yuYXsH0KuddTK9y/sX0Kn10+ejy0eWj
y8dNPorpFUyvYHqVPu7yscrHKh+rfAz5GPIx5GOTj00+iukVTK/Sxy4fj8P3
On9ucpdg/6VXML2C6RVMr2B6BdMrmF7B9AqmVzC9gukVTK9gegXTK5hewfQK
plcwvYLpVc77NJlewfQKplfpo2k9TV6a1tfka9F6F/lbtP6zfBbTK5hewfQq
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
FUyv8t+xF827mF7l/IvpVfro8tHlo8tHl4+bfBTTK5hewfQqfdzlY5WPVT5W
+RjyMeRjyMcmH5t8FNOrfP/u8rHLx+OwbwHs54TpFeznXHwfue/T9H1Qvs+A
Xvm6uK87+XsdTK/cJdh/6RVMr2B6BdMrmF7B9AqmVzC9ynmfJtMrmF7B9Cp9
NK2nyU/T+pp8LVrvIn+L1n+Wz2J6BdMrmF6l74vmdZX/q+ZXTK9ynsX0CqZX
+Tn7RfMuplc5/2J6lT66fHT56PLR5eMmH8X0CqZXML1KH3f5WOVjlY9VPoZ8
DPkY8rHJxyYfxfQq37+7fOzy8Tjsq+J9C/xcsJ+783Mtvm/c92X6vieYXvl3
O18X93UnmF75c5O7BPsvvYLpFUyvYHoF0yuYXsH0Kud9mkyvYHoF06v00bSO
Jj9N62vytWi9i/wtWv9ZPovpFUyvYHqVvi+a11X+r5pfMb3KeRbTK5he5XWA
F827mF7l/IvpVfro8tHlo8tHl4+bfBTTK5hewfQqfdzlY5WPVT5W+RjyMeRj
yMcmH5t8FNOrfP/u8rHLx+Ow75P3VfG+BX4u2M/d+bkW3zfu+zJheuX7Cvy7
na+Lw/TK3+v8ucldgv2XXsH0CqZXML2C6RVMr3Lep8n0CqZXML1KH03rafLT
tK4mX4vWu8jfovWf5bOYXsH0CqZX6fuieV3l/6r5FdOrnGcxvYLpVV6nfNG8
i+lVzr+YXqWPLh9dPrp8dPm4yUcxvYLpFUyv0sddPlb5WOVjlY8hH0M+hnxs
8rHJRzG9yvfvLh+7fDwO+9J53yfvq+J9C/xcsJ+783Mtvm8cple+78n3Ffh3
O5he+bqTv9f5c5O7BPsvvYLpFUyvYHoF06uc92kyvYLpFUyv0kfTepr8NK2v
ydeidS7yt2j9Z/ksplcwvYLpVfq+aF5X+b9qfsX0KudZTK9gepW/o7xo3sX0
KudfTK/SR5ePLh9dPrp83OSjmF7B9AqmV+njLh+rfKzyscrHkI8hH0M+NvnY
5KOYXuX7d5ePXT4eh30zvS+d933yviret8DPBfu5Oz/XAtMr35fp+558XwFM
r3xd3Ned/L3On5vcJdh/6RVMr2B6BdOrnPdpMr2C6RVMr9JH03qa/DStr8nX
ovUu8rdo3Wf5LKZXML2C6VX6vmheV/m/an7F9CrnWUyvYHqVv/O+aN7F9Crn
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
XsH0CqZX6fuieV0n5/PO1at8PfyseRbn887VKzifd65e5evns+ZfTK/SR5eH
Lh9dPrp83OSjmF7B9AqmV+njLh+rfKzyscrHkI8hH0M+NvnY5KOYXuX7d5eP
XT4e83Wd5zs3ne98POfc5wj7nE6fg+dzpnyOC73yvuPe19f7ZsL0yvs+eV8V
71vg54L93J2fa4HzfOfjfZp5vnP1Kuddv+PRK1938vc6f25yl9JP0/qafC1a
7yJ/i9Z/ls9iegXTK5hepe+L5nWdTK9yfsX0KudZTK/yd4eXyXm+c/UqXz+f
Nf9iepU+unx0eejy0eXjJh/F9AqmVzC9Sh93+VjlY5WPVT6GfAz5GPKxyccm
H8X0Kt+/u3zs8vGYr+Pcn6Fpf4bqVb7ui32OsM/p9Dl4PmeKXsE+JyH3Zzju
80uvYHoF06v8nHHct8DPBfu5Ozj3ZzjeR577M1Svct51nwG98nVxX3fy9zp/
bnKXcn1Nvhatd5G/Res/y2cxvYLpFUyv0vdF87pOzv0Zqlf5evhZ8yzO/Rmq
V3Duz1C9ytfPZ82/mF6ljy4fXT66PHT5uMlHMb2C6RVMr9LHXT5W+VjlY5WP
IR9DPoZ8bPKxyUcxvcr37y4fu3w85us2z6NfdB79MnuV/y4X57nadS6wz+X0
uXcwvfK5LT4XwfuOw/TK+2Z6Xzrv++R9VbxvgZ8LhvM8+kXPVSw6j37RefTL
7BVMr/y7na+L+7qTv9f5c5O7lL4WrXeRv0XrP8tnMb2C6RVMr9L3RfO6TqZX
Ob9iepXzLKZXed/Gy+Q8j36ZvcrXz2fNv5hepY8uH10+unx0ebjJRzG9gukV
TK/Sx10+VvlY5WOVjyEfQz6GfGzysclHMb3K9+8uH7t8PObrNPeTWbSfTPUq
vzc86XV+PNcc9jnCPqeTXsE+Zyr3kzmek0CvYHoF06u8TnPc98n7qnjfAjj3
kzk+h5f7yVSvct51nya98n0F/t3O18V93cnf6/y5yV3K9S7yt2j9Z/ksplcw
vYLpVfq+aF7XybmfTPUqXw8/a57FuZ9M9QrO/WSqV/n6+az5F9Or9NHlo8tH
l48uHzd5KKZXML2C6VX6uMvHKh+rfKzyMeRjyMeQj00+Nvkoplf5/t3lY5eP
x3xd0iuYXuXvRE+6rvGkf4efJ9Mrn2vuc4NheuVz73yulM9tgemV9x33vr7e
N9P70nnfJ++rAtMrPxcM0yuYXuW86z5yeuX7nnxfgX+383VxX3fy9zp/bnKX
0t+i9Z/ls5hewfQKplfp+6J5XeX/qvkV06ucZzG9yvteX3SOxovmXUyvcv7F
9Cp9dPno8tHlo8vHTT6K6RVMr2B6lT7u8rHKxyofq3wM+RjyMeRjk49NPorp
Vb5/d/nY5eMxX4e5/9VZ+1+dZ6/yuuuTvic863VdnPtfnbX/1Vn7X9W5m3Du
f1XnRsH0CqZX3nfc+/p630zvS+d9n+Dc/6r2JYBz/6uz9r86z17B9Mr3Zfq+
J99X4N/tfF3c1538vc6fm9ylXP9ZPovpFUyvYHqVvi+a13Vy7n91nr3K18PP
mmdx7n91nr2Cc/+r8+xVvn4+a/7F9Cp9dPno8tHlo8vHTT6K6RVMr2B6lT7u
8rHKxyofq3wM+RjyMeRjk49NPorpVb5/d/nY5eMxX3f0CqZXeZ/Nk34XetJ1
jGf9u1tMr2B6BdMrnxvsczl97h1Mr3xui89F8L7j3tfX+2Z6XzqYXnlfFZhe
wfQq513P4dEr3zfu+zJ935PvK/Dvdr4u7utO/l7nz03uUvqsv/QKplcwvUrf
F83rKv9Xza+YXuU8i+lVPjf0onPIXjTvYnqV8y+mV+mjy0eXjy4fXT5u8lFM
r2B6BdOr9HGXj1U+VvlY5WPIx5CPIR+bfGzyUUyv8v27y8cuH49f33fVK5he
wfQKplcwvTrH94JiegXTK5hewfQKplcwvYLpFUyvYHoF0yuYXsH06hyfGz5O
pldw7otVvYLpVc77NJlewfQKplfpo2k9TX6a1tfka9F6F/lbtP6zfBYvMZfq
FUyv0vdF87rK/1XzK6ZXOc9iegXTK5he5byL6VXOv5hepY8uH10+unx0+bjJ
RzG9gukVTK/Sx10+VvlY5WOVjyEfQz6GfGzysclHMb3K9+8uH7t8PH7txmX2
CqZXML2C6RVMr2B6BdMrmF7B9AqmVzC9gukVTK9gegXTK5hewfQKplcwvYLp
FZz7EF5mr2B6lfM+TaZXML2C6VX6aFpPk5+m9TX5WrTeRf4Wrf8sn8X0CqZX
ML1K3xfN6yr/V82vmF7lPIvpFUyvYHqV8y6mVzn/YnqVPrp8dPno8tHl4yYf
xfQKplcwvUofd/lY5WOVj1U+hnwM+RjyscnHJh/F9Crfv7t87PLB/qLVKzj3
F61ewfQKpldw7i9avfqbeN2+mUyv4NxftHoF5/6i1SuYXsH0CqZXML2C6RWc
+4tWr+DcX7R6Bef+otUrmF7B9AqmV+mjaT1NfprW1+Rr0XoX+Vu0/rN8FtMr
mF7Bv4s5Va9yXtfJub9o9SpfDz9rnsW5v2j1Cs79RatX+fr5rPkX06v00eWj
y0eXjy4fN/koplcwvYLpVfq4y8cqH6t8rPIx5GPIx5CPTT42+SimV/n+3eVj
l4/HNx9+fd3QK5hewfQKplcwvYLpFUyvPsS/q28m0yuYXsH0CqZXML2C6RVM
r2B6BdMrmF7B9AqmVx/ifffDZHoF06uc92kyvYLpFUyv0kfTepr8NK2vydei
9S7yt2j9Z/ksplcwvYLpVfq+aF5X+b9qfsX0KudZTK9gegXTq5x3Mb3K+RfT
q/TR5aPLR5ePLh83+SimVzC9gulV+rjLxyofq3ys8jHkY8jHkI9NPjb5KKZX
+f7d5WOXj8d8ndArmF7lc6hPem7iSff5Pet36WddR/1Wn/vfTKZXML2C6RVM
r2B65XPNfW6wz+X0uXc+V8rntuR1lo/6XFD7kNMrmF7lvGufOnrlfVW8b4Gf
C/Zzd36uxfeN+75M3/fk+wr8u52vi+c5EcX0Cv5d/Lt9nb3KedVfepXzK6ZX
Oc9iepX7ar1Mplc572J6lfMvplfpo8tHl48uH10+bvJRTK9gegXTq/Rxl49V
Plb5WOVhyMeQjyEfm3xs8lFMr/L9u8vHLh+P+bqgVzC9yufkn/RcVzG9yvtm
nvU7z7e6LvFmMr2C6RVMr2B6BdMrmF75XHOfG+xzOX3unc+VyuvAH/W95Qe9
z2pfX3qV8659NOmV933yviret8DPBfu5Oz/X4vvGfV+m73vyfQX+3S7PsSmm
VzC9St8Xzas65b/0Kl8PP2uexfQq9/17mUyvct7F9CrnX0yv0keXjy4fXT66
fNzko5hewfQKplfp4y4fq3ys8rHKx5CHIR9DPjb52OSjmF7l+3eXj10+HvN1
QK9gepX7eDzpudNiepX39T3rd+hvdd30zWR6la/Lt5PpFUyvYHoF0yuYXvlc
c58b7HM5fe5d/k71UddVftDngNp3nF7lvGufX3rlfem875P3VfG+BX4u2M/d
+bkW3zfu+zJ935PvK8hztorpFUyv0vdF8zp2KedXf+lVzrOYXuW+pC+T6VXO
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
vNQ+ewXneald56X22SuYXuXvxsX0CqZX+ToqplcwvYLpFZznpfbZKzjPS+2z
VzC9ynmfJtMrmF7lv9s/ycfx3Lv0czy3JX0d9x1Pf4vWf9yXDqZXML2C6VX6
vmhex+dacn7Fvk/T90H5PgP/jufr5PQKplc5/2OX0keXjy4fXT66fNzko5he
wfQKplfp4y4fq3ys8rHKx5CPIR9DPjb52OSjmF7B9Cp97PLx0H1tr3Sd8LXm
/jSZXuU5IM+T87zU6lXuC/RmMr3K567eTqZXeV9LMb2C6VX+O1dMr/LcpWJ6
lfvafpyc56VWr/I510+T6VXO+zSZXsH0Kr9X/CQfx3M5fe6dz5XyuS0+F8H7
jntfX++bCdMrmF7B9Cp9XzSv43N3fq7F9437vkzf9+T7Cvy7Xc67mF75e50/
N7lL6aPLR5ePLh83+SimVzC9gulV+rjLxyofq3ys8jHkY8jHkI9NPjb5KKZX
+f7d5WOXj4fuu32l3zFe69+Fp8n0Ks8pep6c56VWr3LfsjeT6VU+F/p2Mr3K
++6K6RVMr/Jz+Hu9bj5Mpld5jsn3k/O81OpV7mv0w2R6lc+NfdK8T5PpFUyv
8rrHT/JxPDfY53L63DufK+VzW3wugvcd976+ML2C6RVMr9L3RfM6Phfs5+78
XIvvG/d9mb7vyfcV5LyL6ZWvO/l7nT83uUvpo8tHl4+bfBTTK5hewfQqfdzl
Y5WPVT5W+RjyMeRjyMcmH5t8FNOrfP/u8rHLx0PPBbzS76yv9bn1SXMupld5
7kdxnpdavYLpVT63/nYyvcr7govpFUyv8jrBe/279mEyvcpzlr6fnOelVq9y
37UfJtOrfK71k+Z9mkyvYHqV12V/ko/juebp53gup8+987lSPrfF5yJ433GY
XsH0CqZX6fuieR33LfBzwX7uzs+1+L5x35fp+55y3sX0ytfFfd3J3+v8ucld
Sh9dPm7yUUyvYHoF06v0cZePVT5W+VjlY8jHkI8hH5t8bPJRTK/y/bvLxy4f
jzknepX3gbzW9+on/TtQTK/yXKLiPC/1NnsF06vcV+PtZHqVzy0U0yuYXuV1
zPf63P1Br5NiepXnlnycnOel3mavch+jT5PpVc77NJlewfQqfzf6ST6a1nM8
1zzX1+TreO6dz5XyuS0+FwGmVzC9gulV+r5oXsd9VbxvgZ8L9nN3fq7F9437
vsycdzG98u92vi7u607+XufPTe5S+rjJRzG9gukVTK/Sx10+VvlY5WOVjyEf
Qz6GfGzysclHMb3K9+8uH7t8POZc6FXep/Za1/2e9Dn1SXN9npznpVavcl/q
N5PpVe7783YyvcrnqorpFUyv8neW97ou8EH/jhXTqzxX6ePkPC+1epX7rH2a
TK9y3qfJ9AqmV/m79k/y0bSeJj/Hc83T1/FcTp9753OlfG4LTK9gegXTq/R9
0byO+z55XxXvW+Dngv3cnZ9r8X3jOe9ieuX7Cvy7na+L+7qTv9f5c5O7lD7q
L72C6RVMr9LHXT5W+VjlY5WPIR9DPoZ8bPKxyUcxvcr37y4fu3xwXmr1Cs7z
UqtXML0a0f3nyXleavUKzvNSq1cwvYLpFUyvYHoF0yuYXsH0CqZXI14X30/O
81KrV3Cel1q9gulVzvs0mV7B9AqmV+mjaT1NfprW1+Rr0XoX+Vu0/rN8FtMr
mF7B9Cp9XzSv6+TcN7B6la+HnzXP4nxuu3oF53NH1at8/XzW/IvpVfro8tHl
o8tHl4+bfBSv4eWm81JvOi+1epU+VvlY5WOVjyEfQz6GfGzysclHMb3K9+8u
H7t8PLQvxSvd5/9av5s+6Trfkz6XPmuOzzon7Vud6/FmMr2C6RVMr2B6BdMr
mF7B9AqmV3kd4IP+3fpe51J+1DlKxfQKplcwvcp5nybTK5hewfQqfTStp8lP
0/qafB3PNU9/i9Z/PPcOplcwvYLpVfq+aF7HfTNzfsXeB8r7rHgfAz8n7Ofw
6FW+fo73Zebr6bN8HH+383VxX3fy9zp/boJXdcp/6VX6uMvHKh+rfKzyMeRj
yMeQj00+Nvkoplf5/t3lY5ePh/bNeaXnkF7rvo4n/Q7xpO/Nz+r8s85x/Fbn
Dr2ZTK9gegXTK5hewfQKplcwvYLpVV6n/KDP1d/r3NyPOuetmF7B9AqmVznv
02R6BdMrmF6lj6b1NPlpWl+Tr0XrPZ5rnus/nssJ0yuYXsH0Kn1fNK/jvr45
v2LvU+d9oLzPivcx8HPC9CpfP8f7xvP19Fk+jvcVpI/jdXFfd/L3OnjV5yh3
yn/pVfpY5WOVj1U+hnwM+RjyscnHJh/F9Crfv7t87PLx0L5er/Sc5Gvdd/ak
30mfdF3vWZ9Di+kVTK9gegXTK5hewfQKplcwvYLpFUyvYHqV3/u/17neH3UO
ZTG9gukVTK9y3qfJ9AqmVzC9Sh9N62ny07S+Jl+L1rvI36L1H88NhukVTK9g
epW+L5rXcd/xnF+x99H0PnXeB8r7rHgfA3qVr5/jcy35evosH8f7ntLH8Xc7
Xxf3dSeYXvlzk7uUPu7yscrHKh+rfAz5GPIx5GOTj00+iulVvn93+djl46F9
B1/pOe7Xui/2SfdxPOl3h2d9Ty6mVzC9gukVTK9gegXTK5hewfQKplcwvYLp
VV6X/H4yvYLpFUyvYHoF06uc92kyvYLpFUyv0kfTepr8NK2vydei9S7yt2j9
x3PNYXoF//K3zpGiV+n7onkdz0XI+RV7n1/vo+l96rwPlPdZoVcwvcr5H59r
SR/H+zLTx/G+gvRxvC4O0yvY3/P8Ocqd8l96lT5W+RjyMeRjyMcmH5t8FNMr
mF6lj10+HtoX9ZX2mXit+/afdJ9ZMb3K63jF9AqmVzC9gukVTK9gegXTK5he
wfQKpld5H0oxvYLpFUyvYHoF0yuYXuW8T5PpFUyvYHqVPprW0+SnaX1Nvhat
d5G/Res/y2cxvcr3QZ1zR6/S90XzOp7bkvMrplc5z+O+mbD3qfM+UPQqXz/H
54Lz9fRZPo73jaeP431P6eP4ux1Mr3zdyd/r/LnJXUofq3ys8jHkY8jHkI9N
Pjb5KKZX+f7d5WOXj4f2bX6lfXBe67miJ90H+6T7Np71O0MxvYLpFUyvYHoF
0yuYXsH0CqZXML2C6RVMr2B6BdMrmF7B9AqmVzC9ynmfJtMrmF7B9Cp9NK2n
yU/T+pp8LVrvIn+L1n+Wz2J6lf9O1zmc9Cp9XzSv47lSOb9iepXzPO7rC3sf
Te9TR6/y9XPctyBfT5/l4/hcS/o43peZPo73FcD0CqZXvu7k73X+3OQupY9V
PoZ8DPkY8rHJxyYfxfQq37+7fOzy8Zj/u+hV7tP1ejK9yvv0n3Rf2bN+By3O
81KHzktl3cX0Ks/peDeZXsH0CqZX+Zx5Mb3K+3iL6RWc56UOnZc6dF7qmL3K
c5E+ad6nyfQKple5r8dP8tG0niY/Tetr8rVovYv8LVr/WT6L6VV+j6hzgulV
+r5oXsdz73yulM9t8bkI3nfc+/p638ycdzG98r4q3rfAzwX7uTs/1+L7xn1f
pu97gumVf7fzdXFfd/L3On9ucpfSx5CPIR9DPjb52OSjmF7l+3eXj10+HvN/
B73KfQRfT6ZX+RzRk+57fdZ9GsV5XurQeanVqzyX8e1kepX73hfTK5he5T4Y
xfQqnzMopldwnpc6dF7q0Hmp1as8t+2T5n2aTK9gepX7Dv0kH03rafLTtL4m
X4vWu8jfovWf5bOYXuV1jjrHnF6l74vmdTyX0+fe+Vwpn9vicxG877j39c15
F9Mr7/vkfVW8b4GfC/Zzd36uxfeN+75MmF75vgL/bufr4r7u5O91/tzkLqWP
IR9DPjb52OSjmF7l+3eXj10+HvP/v/Qq9zl9PZle5XOOxfQq7yMrzvNSh85L
rV7lHN5Opld5LkcxvYLpVe7TU0yv8jmoYnoF53mpQ+elDp2XWr3KcyU/ad6n
yfQKple5L9pP8tG0niY/Tetr8rVovYv8LVr/WT6L6VVeh71Mplfp+6J5Hc8N
9rmcPvfO50r53Bafi+B9x3PexfTK+9J53yfvq+J9C/xcsJ+783Mtvm8cple+
78n3Ffh3O18X93Unf6/z5yZ3KX0M+djkY5OPYnqV799dPnb5eMz//9ArOM9L
3WavYHoF06u8z7U4z0vddF7qNnuVnX47mV7B9AqmVzC9gukVTK9gegXTKzjP
S910Xuqm81K32av0+EnzPk2mVzC9gulV+mhaT5OfpvU1+Vq03kX+Fq3/LJ/F
9AqmV3kd9iLfF83reK55zq+YXuU8j+dKwT7Hxeck0Kt8/Rz3zczX02f5OO6r
kj6OzwWnj+NzLTC9gukVTK/Sx10+jtfFfd3J3+v8ucldSh+bfGzyUUyv8v27
y8cuH4/536VXuU/868n0KveJKKZXeR9+cZ6Xuum81OpVfo58q3W/m0yvYHoF
06vc57CYXuVz5MX0Cs7zUjedl7rpvNTqVf4780nzPk2mVzC9yn1lf5KPpvU0
+WlaX5OvRetd5G/R+s/yWUyv8nfsy2R6lb4vmledY06vcn7F9CrneTz3DvY5
Uz7HhV7l6+e4r6/3zfS+dN73yfuqeN8CPxfs5+5geuX7xn1fpu978n0F/t3O
18V93cnf6/y5yV1KH5t8FNOrfP/u8rHLx0P/nVeT87zU6lXuY1NMr/I5oeI8
L3XTeanVq/ye+1ZdfjeZXsH0CqZXuQ9rMb3KfS6K6RWc56VuOi9103mp1av8
HPxJ8z5Nplcwvcp9r3+Sj6b1NPlpWl+Tr0XrXeRv0frP8llMr/I+m8tkepW+
L5rXdTK9yvkV06uc5/FcTp9753Olct7F9Mr7jntfX++b6X3pvO+T91XxvgV+
LhimV36uxfeN+75M3/fk+wr8u52vi/u6k7/X+XOTu5Q+6i+9yvfvLh+7fDzU
uVc6Z+e19i190j5bxfQKplcwvYLpFUyv8jrcW31ufKd1FtMrmF7B9AqmVzC9
gukVTK9gegXTK5he5ff0T5r3aTK9gukVTK/SR9N6mvw0ra/J16L1LvK3aP1n
+SymVzC9gulV+r5oXlf5v2p+xfQq53k8Nxj2OZ0+B49e5evneC5Cvp4+y8dx
38z0cdz3KX0c9y2A6RVMr2B6lT7u8nG87yl9rPJxvC7u607+XufPTe5Svt7r
L71KH7t8PPQ57JXOAXutfZWftA9gMb2C6RVMr2B6lfddvNHvBG/1vfadOlxM
r2B6BdMrmF7B9AqmVzC9gukVTK9gegXTq5z3SZ5+nEyvYHqVPprW0+SnaX1N
vhatd5G/Res/y2cxvYLpFUyv0vdF87rK/1XzK6ZXOc/jueawzxH2OZ30CqZX
Of/juQjp47ivb/o47kuXPo77qsD0CqZXML1KH3f5ON6XmT5W+Tj+bpc+hnwc
v9elj2J3yn/pVfp46HviK51T+Fr7vj9pn9JiegXTK5hewfQq7wt7o98x3+q6
2zt9TnyndX03mV7B9AqmVzC9gukVTK9gegXTq7xv5JN+5/ikeZ/078iPk+kV
TK/SR9N6mvw0ra/J16L1LvK3aP1n+SymVzC9gulV+r5oXlf5v2p+xfQq51lM
r2Cfc+5zhOlVvn6O50rl6+mzfBz3HU8fx30z08dx3yeYXsH0CqZX6eMuH8f7
xtPHKh/H+wrSx5CP43Unf6/z5yZ3KX3s8vHQdfdXOvf5tc7RedK+78X0CqZX
ML2C6RVMr2B6BdOrvO72Tp8Tv9O63uvcsmJ6BdMrmF7B9AqmVzC9gukVTK9y
3id9L/9R/44U06v00bSeJj9N62vytWi9i/wtWv9ZPovpFUyvYHqVvi+a11X+
r5pfMb3KeRbTK5hewT7nnF7l6+d4Tme+no7nTKWP4zkJ6eO4z2/6KKZXML2C
6VX6OD4nnD6Oz7mkj+N9munjeJ9B+jheJ/d1KH/P8+cod+r/A4dUhnk=
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
WT3qG0jjte9A8/SRs8fYcnzSi589phnfcW96j/odIQm/J0gPC3kN9zM5P/Fs
hz2meV+w6jmkEcm8NqMeekwnFmMP8Olb0jcc/ZZ17gJmEbifWXVWL9KyY/T2
Af0lxa+96movnzRU2vuK13rVd6Zv7Cg+cfzKPeg+pB0pnC+l1/ZaT3NHS7k7
PVNyniu112Z+KvAnyf8F7FLO8itH7+Ir8lRX2reCu1K/ychdEu/OfoEnFbVO
0++vnph+rIBL/aai5+TUVZ/6ZvWd9+J7UH19E4V5n3qvmg9PPDYjtOqsOZ3F
xV732pxK5zV9SUt+Wr4r4f8gNy0Y+Vfjf+oxTXrNa3qk2S1N+cvZnx7TsChG
NYR7in8165/kpPea7pwntooaf8K3ljrpqaWfk9xun8dr/F9TIwM8wklfpDPP
nT3zmHb87bH5LH3J7DWNy+g1PVkPbgPrc/bCiFc45Sg3E/cn/dAdas6/8NgM
X0fPqvUPsY3Yc3x/U28d/WThXajWBeq9IPcfMKqdBf//qCXNUg9ZvTYn3/La
rNwC5l9iwqjfLeQp9obX9OIaPNm8sb1ydFb+Vvh0fgOMfralX/8583jtZ1z/
0Gh2OIWTdmgv30uwUY38D3wcufK9pJZq3iDvTXi0fkf8JTw7qC0NyOE1bRDG
7zX98Lk1J37FpRPCerkr+XPil89HnvL3eGJnxW+C1f1m4hvQN5PLa3Nbdy4t
CbhzkL5zeGP9BOBUfi7ekXr30r9y98TL34cvN/zK0Td/G19G+rjEz4J+DqRP
IXKDzJxiXptZiucFI33J7zWNkU96FM0Ne2PaqVXniNe0R74E7OUr6LW5W4A5
rH1B6ofgKQBGtQ6Sf4ge8nmtD1kB+pH/DjHpjrAJvZaXkNx89KzeD8Tr8Quw
iZiBRbymMdKTJl7TkUL0qj7lX0FMmiHtaOy1Ga28IsSSkvsqceU195oGaB4X
466Lem3WN8OvPqSh6kt1h9JXUzibgE+KT/jE5CTDJ66i8D/EiuDTjC/MM6qH
4rzrtl6bhW3Ib04/Kem5hdd0Rn9OlL5II5VXnFgKch7jK+E1rHK0b+nsQ69p
kvSitdf0obTXNEP6ksDn3rfei8/OqlMKnlLUFUfqeDzat6Ler/T1O3mliaWm
dkr6SMW+Bec04NST9EJ30Y69VumCNEja8ja4NvRfxms+xd7xmvaU9Zppr7zX
uNu28LxNvIPXZnZ7r812zf9ycOpOondTBv724NPDrXrKaQO/+skIRtyKlwPT
jjrK1e+pvfhZ/Zua5bFn+LRW8Jr2VMCveC/le21OdfaavnRy1pFV80X4iuR2
AiO/NEn+Sl7TpC5e0xfNbmlLZbd/12taFcV0BlcJvzi0Cqecrl7Tndfhf04N
xSuDUX5XMLud6V+G2AV/Zmp0g0c46Yu0pppbq3pNO6p4bT5LX3p6Tde6e02z
FK9KjtZq7LPB250c5fbg/nJyh5rnNbw20//lDlSrOrGo3lXDV4V6wr7J+8hB
P1mpV4Pc6vTcE5z8Nan1Fj309tosHeS1eeoDU4tYTvr1kadYX6/pSS54+sTb
9+asfD95fcgRRhojvarjrJ7XZn5dZ/3gFC4Pe/lqg41qXB3wdckNgvFTMw95
/dlrzUu8NjwhaksDBnhNG4Rp6DXNaOBsIH7FI2Drc1f5iEfwNSBP+QnjnSPg
B3K/PfgG9M0M9pqe6M41w99z1oh+B8Tr5z04B5FTgN7r01Mi4tH8xPiGwK+c
Quzl604f6kHactLZMHLfJ186Ib0YTqwwWOmC9OVzzoXgLAyuCOtw9tK85V7T
y8/JXelstddmr/RCGjTSa5qhOTfea/NxBLGi2HB8wo4Cr35WwbMS/iZgioFv
Ru1V9LESzCr6UG4J+MS7zmtaIL3Q34eWJL6GnldzHkVc+rEW/FryP8S/Bp84
9Hes0qSNXtOBNvjG4pembMA/nrsYh1/9rPeaHpQipyX9rCHWitqtOW8gvwx5
pcmTTxohfegIbiN1NSc1C3fw7hrz/sryTiY4m+Q1XZlInxOIteO5NmFt4W3H
ebOzLdSVDk3xmk5EdWcyPr2j33hPk/CXi5ffnvqTvDHdKgeuLP2ot63U2sJz
dsA3kfyy9LYZTmG2eU2vdA87vaYF07ymJdKfj51N9Zq+bOeuOpG3PV7uDvIr
gZ/GviLnHeQqRz+PmtnSpU+cTfeaBnSk323UrcD9vAuuMuu78FcApxpViE+n
j108yy5qdQWj+Ax62OO1uaD7eOHsf86Oem12aR7N9Jq2Cb/Pa5qyl9zd5FcF
V41YTzh7sVfebK/pkLTpU2dzvKYp+50d8JrWzICrCrn7iPdi/Yj8WfB9Cuds
+thLXfH1Bl8DXE16nOWNaWo1zrWIqyfpi7TmM2fzWHWWlul31EPO5npNU2rh
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
Z/GNoM8/fKY5q+D6g/1T/Dr/5ewdx18O3dF5HavO0rZD1FRtaddrztr5rd7X
PtOws6yjeBZppnBf0dtI/PKJQ7xr6GUU8TP4VuPP4DeN0r1k9psW6B6kOc99
piXSl7+dPfPFNC+j3+wiHLq/zNzhc/KfYRvguESesJrZ0iL9PGru/+PsBc+e
Ae3+i7rrwGwE95w12ts6cMrfDDYLz5KZWlfwiXc838D/wCuvrN/u422/+f/1
mZ6px6z0qZmmOZXHb/ryht80RnvNl2x+M+2VsxWOf8Eophzp1H++mCbF8fuH
Ytnh1CoNug5WOS/ZCx/N3c55K3WEeZNccUibbuDbzDNvASdO5QmTwx/TKZ/b
+/3my4lf5z3EpTv6nWkXq4/9W37TspzkRXVS2pTLb7Nds1szPOjOAb+te+nh
TWoGqKWat+DNxe9tqu0hHiDXg38HdXJTS6ve123e2Q/4Qn7TKfWiGfuK3+bm
j+Dy+m2v9Q64IHnSHWlTBI6w3875/KY7d/ApJrz0Rf785CovgbMCzgr6TSOE
KcBeMc2Cg+TchfseZ+ESgklAr/noU3ya8+JRXLgv6CdCn/Il8se0TavOhZ0V
8ZteSCcKsz9MPDF2BJ8whcjT/b3KHb4CJjF80poHfDe7+LakT8IqR/pS1K3F
/Mb5E7xFyS0C5iG4QjxjQXjEkcRZUr/pUxLw4nvEWf5jfIc3+Z7kU470rLjf
dEv4FH7TjORuLYG/OD7FpCXSLeUl89teq/DSI+WU9Me0UOdSftMaaVMqv83r
01hKv/k6+m02dvBbnZTUKkm+cqUvpd2+jN9yT5GfnP5OEFct5Qj/O75f4Yry
iEPalJp+1ENav2nNWfxp/KYXmomajX+Q9za5wikunLRtkrPJftM6aY9m6lni
aXk2PWMGzumop5nfHr/muLjKU7MsXIpLDzfTb2p6U0z1/iJP+dq3gzPK3QF+
zWXNZ81zYVVHGqXZq/ncnW8pGd9GJt5NJ79pTkW3VnJWgTzlZ+K5hJM2ya94
RX9Mrzr7TX+kR12ddaOXd51V9ttc1jdbnO9WfulSJTgqce4Cj/ikTV3gi9ZT
LXG9gON18F14hs70kIlzZjBd6Uf30MNv2qG1J/uqftOMKvSeDfy/+BSr5jct
kkYJX439G9xrD84viWvWa+b38tufvTXHq3Mf//piOqxzFXBv0lMc/NXhzkZf
OcB9BKY6vD3JzU6st980Kgdn7RMF4uIaOUvsbIjfZo3mjGaW/t6glt80R7pU
G59i0qU+fpsrvbG34MzFXvG+zvr5TYPq+U0f6vpNW+pyHuCsv7Mjzur4YzqZ
i/zc1K7jj+lnHfJ99OinTh7w/dnLp1neyG/zuTZY5eQFp/rSmEHOBjtr6Ded
aYA/P7H6ftOUMLnKy4evPnj5BuIfyn0OoYf36OM9zgnhyUMfYe6jHj28ByYh
/TQkVh9srnh3XIDeC7IOYV+YPoY5G+NsrN/mZHNnLfw2d9/nbtTbK+zlG+43
/SkCTyG4FGsMdhg4YUaA17mJ33ToA2dN/TZbNGP08z7Sbz/z9XmeBfiLwlGM
VbhX4YjqXRK4C1O7CLhRcDahXlJ6fNUf0+rGcCUD08xvWqJ7aMmakjuRbkjH
RnNXycGXxKe7HOc3nRmLfwx3mwK88vRtNOD9feisld/meBlyx8FXgmcYxb44
vaivVNQoDX8yekkOVyq4y8A3nnMq8vXt6hseiGmfD9wEv2nbFr/pzP+ctXHW
1m9aJS2a6De9kaa19puOTSD2Nvi0xCbiV3yb3/Rhq980Qzo5hVVnadcev82y
3X6bd9OdzaAf5XWg9iR/TCPFUYH+0lK/PTkdeI4t+DY628TzTIJrItwdwe/w
m1ZIJ3ayl+9jZ1P9pjGdwG/jXIG4NGqa33SnEnidt8PRmWfTM2pWS3N2sf+E
560MVwWebTp3URn8TnI+oc40+tlGnV3U6EbOu2C78izK18/YQr/9zGleaG4c
8tsc1Uyc52yW37SjGu+6Fe90v9/0ZZ+zmX7TMb0jadtev+lMD97lXnqfAe5T
Z3P8phuyGvg+glPc+m71Lb5NTdVOTS+zydkHvif+WcR6cLd74BTfAWrUAFON
XmZis/Dthbcnd/KF3/RC62H2upfPuCdpxlzu6xB3eNBvM1/adRR8bXAHwfSG
/xDceheae/Op059aB8jpzbMcYD+H2rq/uvQzn7WuP6aF8+E9Audh8ubQj74Z
fS+d6fWY3+aB7iEYsLvQN6J5VZ/nOgrma7/NqbN+05fjzr5kHQTXMfYD4RDX
IvCDwC52tsQf08KlftOTwfANYT3BXriG8fIaxctdQn4D6jQkbyi5J9mf4Ln/
c6b/M6LFYJUzDNwpv2nDCr9pyDB80rKV+BRb5my537RkOTnan/abZg0n7zR7
adNXzs74bWZ/7mwVq85NqTWUPppSayW5I8hvzD0tI/Y52GX4l4JXnVGsZ9mf
5d1pv9pvuqQerji76rd5PAbM1+y1nqPHVeRIS9Y4WwuP9i3AnfebRrUAq/gF
v+nReXKVJ13Sz/pFv2nEeHA6ryO+lpxxcI5nL1wrMOvo8xwY5V+CU7H1YNf4
Y9ouX2t/bK7pvMFvenDZb/rwj7MXftOM1sSlLxtZN3Bvk+LlXOEO28bD/us3
La0csG9E38oK/C/9pj9at7G/TB96hi3gtsLxL75LYCbw3qJaqvUbv2nIf3C+
xH+VmL4hfUv6Lr8FK/928Mr70W9zQvNCPyeegGnYDb/pyXVyr/lN57aD24Fv
mj+mf9fJkTZJf7wOFwjYnPYHTB++c/Y9OR/DfQP/dOwTfLvg8GHi2E2ta9RT
3gzyhPeBUZ568PBM2u+gD/UjTChg2qEZGGYv30233vKbZmhOCq/n0Flaorg0
5rbfNGc2eJ01U0PM1bnc7x2/zfVIwGb9D/jn0Pv38Xhncj5AT8r5gTq36Ue9
BIklgHMOmB/I3U/+LfpT78JKj4TXvE3qzsmcJcSv+F2/6Zl6vuePac5cfIpJ
z5SjP0dqf4iz9vJJg14JmCbpz5g/ufVnv2mDTFoon/4ZOP0z5Prn5VXnPrHE
5B6m/j1iPxG/T0/qRf1Kr45Q8yjrqzzLPbCJ+POuOBVLEjDt0vMnD5hePHT2
i980RjrxwG+6oXuSjiUhT/tj3GEycpeAfYgtJj+ql+KQRqRwa8qAze5Hfpvl
R+npGPe0iHtaSj+PWJfG6+1n+B/DIYyeQ3pygjon8elnTb+n6ndY9XCS+HJy
xfGr32bVcjDqUXMjc8DmVKaA6Utqt6YJ2Kr5kipgpv1pOMT1m9/wX5Hzu1uf
+GNa+Iff9EIY8Z1lTcteOGleNG9VvNwn5K+gjnDKk34pNx17+V5z1tZZO3pY
Sc45cIpLe/7ym4bIL5+06G98ij119qfftEXrWvbpA6ZR58lLT660KYPbZwyY
fjxz9pxV5/XU+po+1lPrb3IvkL+Ge3pK7Bm5T/H/AV51LrFmYp+Jd6e9NG4j
PbwZsPma3a1ZAqZlmfl3RN4NmBZuAKucKs5XNWD6IvzrAdMY+aV10wOmnRup
I59i0jBhpTnCSzekOdUCZtpXJS5cVnKqUKsqGO2FUVx6cZl+r8AprurOshHP
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
R9+Nvgd9F4PxK/5r2H4eH9PHUfgf4VsG7kvyHlBjMXUfgXkMj/ZDwJ9gjeqt
au+llyHEoxo3lLN0KXXEdEOrdOxDZ7+HY1o0LF7ecp5BOiescsTxW9hyohqm
/ZOwaYU074+waYg0K23E5p3mXCa3TxMx/xli2suXztlrEZv3n8O3itq/Uetr
coT9g/gTniUNzyX/U3oRPh2c0gppw19hqyP9kn8N+D/DNiPPE1+DL5rzNxx/
4VNMc/U8edICzennYZuzGSOmU9KeZ8QucweZI8a3Hs4L5FyklzX0v566z+Dd
wF7cus+L8F3Cp1ms+bcV/D9h6ysuYrN2O3e5gveqftSLNEua8rrbZ6W/LPjF
sSkc+x1C5xdh++/PbWa/hb182SKmKdKfN9jLl8JZyoj9vqUa8n1Lzr9wqIer
9PENuG85y6+etoJ/ybqV3CxgrtDnC3raClZ3ozvwREw33oyYzkh/skfsfIM7
EvY/THcnn5c85ecgVznXyb8Bv/DC+CKmD5rfOSP2e9lNOLfR03XuSPnSNXHm
YK81J/zXwH0P1036UY1d1NiJb4WzJvr9lPrC+J0Nd3ba2YiIaZl+X8ztLBCx
2SGM5pPm1CtuH4yYtuzFhAmAV0w+8dyCS1j5Q87yREynpGv53D5/xHQjHDHd
CoEPcc4LXnl3OOdj/yPn3PD+AE8kYhom24+vgbMExNRbbvA6HwRb0O0LRUxn
EkZMw5Rzn5j86ld6op7lLxCxmPCJIqZjB8lTvnxRfdMMl/4UjtheaxHqR+hP
PmEKkaf8xBGrc4/6hcConzvc413ejd5RYnITR2Lv7FXeoeqqprREs7FVxOaj
tEqYJGB1Pgq2KHhpjrSuGL6o7gmrvOPE5FdcGiRfUrcv7qxExPRKP+/SkORu
TRaJ6ZX4i4NJSiyqZ9oLXzJi80lcSamZBI7k8JYA8xjOYtRv4axlxGZNqYjN
O/FJJ0q7tQw+xaRbuhtp4Dr4ShKXvzX31iZiutMarGK619Lw/s53co9vpTV4
5b7trGzE5rpm30nuRn5pVRk4ynAuBa8401G7LdYuYtokLmHFkY5abfguD/Fd
pyPnNepLr5TXwe07RkwvykVMz96JmP50wK866cmVvz0x4ctHTJP+JE/58kmX
5Jd2SJM6RWyvtXPEZlwPZz3xZaKPZ+RXcFbRWaWIaUxHMBnpIT19CCNtq0Bu
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
3W7H/yt4YTOB/424p0/Sq2ouVt1nurWV/n8hT7UycE/aX6SXB+RnpucP6eES
z/E78Qdw/kJP+kb1reo7lubWZD518dnddvaZHj2HvwY4+TSb8rh9XmfZfaYx
2Xw2U/Ts2tfy2XypyX0opjuRNilW22e6pFxx1OFvDulWbc6PiT0DVrl/kf83
OGEU93S1JnXVc1046xAXLoez4s5K+Ow38wm9q4+cPtMwYer7TFukK/U4ay8d
yoUuSUeukvcvOGEakKscxZ71GTY3ecrX/ekeNeulcw2Z5f/St7iSw9OAfQNw
wvwDTvnX4f6U3tWTcI3gzE09YRv7TFcaUV/vUDqmGan5WMRn+iVcE2f5iOcl
JwWc+X2mKV9gwuQDr5h8T4JvDFb+As6a+kyjpF/NnbXgN1/QZzpUAHwBzs3A
K0/zoBl5T+FvRq9N4RRPIZ/NLZk4CvJcTcA8BUdqsF+DbeX2rX2mHboL3Ulh
ekwD/mt8nia29Fmej9XPPg0x8RT12R3rW7jGtyPfHe5eGtLGWVv41VNhfAF6
ukNOMXjT0FdrMKobZK88fefShmLkFuN8jT70Heo3IF9xarfz2Uzo5rO5o3kj
3dLvpaTPtEWaU8pnPk8b2/tsprTDwvBE2CvewVlHn+lQWZ/pRBmfaVUZzkH6
UG5pYqoZIV+5pYh5Oqd9GXpRj+pPdWLgO7HvSO534CJJ+oqDe95nuqI52NVZ
BZ/pRnm3lvOZPkgnhNOMTEvu8+yVm478++QpX3vl66wZXMlnOtCde9Z9VySm
ue/9faCeVE93U5Z+hPsfOHFX4D7LgRWHMJXopyvvsSt1MtB7OnqWJqmPHs76
+Gzm9nZWmR7FI73SXr4XfKYtmcnNSL5iVcD2ACdMT/A6S+OkSVV9plO9fKYP
WcDJp3+fXP/+m/49uF74FJvjbK7PNPIBHN4/53n6mYnnUN2XffbPkZ9R50Vq
VfEl9FyrzlXBz/eZhuge+vpMM57hTvoQrwUmG5y6qwX4FX/F2UKf6U5t/AvA
94arNj5h+/tMJ/qRV5fcefT0HPYyddVXDvqqDUcdesnGM+aAT7yL4FyIvy8x
/cb0N8A7aJdwi322r8u5Hr76rEvYazaNdDbK2SCfacxAn82UAeyX+kyzluBT
THOnIbFlPtOl3HAs95lWNCK2nL1ig8E2hHMp+2VgFM8LZgkY9bkCzuXEhRvi
7Lizoc7eoq+B9CFfPjCrfKYt0pWVnLWXLg33mabkB6+8JuCEWU3uKmLDwI4g
bzj3p3vUrJcWrfHZPG9C3yvxN4OvOesaMI3BFYJzBM84hJ6EWwvnCOoJu85n
+rGW+nqH0ijNUc3HCT7TMeHWOxtNfBQ5LeEc4zNNKYoVATuaWFF4WsJVDP9Y
Zxt8plHSrk3ONvtMN8b5TIvGgh/LeSN45bXlvIl9G87ribeGZ7zPNKoEHOPo
Zz2YtnC0A1sS7FZn23ymFxO4k5fosT34kvgUk35sIa8Da0f27YmJZyJ3rG9B
31B+fGXwS0O2O9sB/3hqyNeJnsqQMwne9vS1DUxHeDqRN9ln2jCJ3EmcC9CH
vsNy+CZjU/BJL6RjuzDtd/pMW6Q508B62rgTTGdylbObuHBTyZnuS+jTDJ/p
xqs+0xDpk+bcNZ/N0q5wdGN9lb1m/B5ne+GrBGd56lQg3p2cSuBm0EMFcDOp
PwPO7uRJD2b7TFN6UOcF8LN8phny7cM/ixz555A3G98s9sL2BH/AZ1qgmf2p
s6s+0zbp1H78n3EPuo/qcM4hLtxr1KtMX/vhfZG869xhT7C98Iv3Wb/pjuby
s/Si3IM+m4Vv+Gzu6lvawTsV3wI4P3d202eacgP/dXjEIa08xHqQ/WGfaY/W
fuylKdKZL9hr/ZKaO6n7BZib5Cn/dZ/p3uf0cBPMQvw3iB3x2XO+Tu7rnF+h
5xv04fU7gLjyBnMHb/pMZ6Q5tzDtv3J2lPvyNO8od6ecY3AsI+drcpS7BMwg
8JrZ0iJpxTc+m+u36eMo/F+SvwRO8S1nvc1+Mbgl+FbgH0I/b7EOobeV1Lvj
s3mg+tLGZO77SO63uz7rszk0Htxdn+na2z7TlZPknIBjJbhV+Ib7ErPmJDnS
JmnZt86+95k+fOczjTnl7B14VtDf2/hHYiPwrYHjHiaOtdQ6Qb1T8I4Efw/M
t/RwF1tNz9/RjzA/+kxbpCs/sZfvtLN3faZn68F/z3k0cWnXez7TnbHgdf4B
jg3cq+73nM+06L7P5vkZ/OPp/Z0kvKM5b6Kn++DHwb+eXn4g9jOc48GcIXcj
+evBbgC7Bbzm7UNnj5z9D7/i532mZ+r5gs80ZSLPco7YVnJ+Yb+F81Z80qvf
fKZRvzp739kHPtMJ2WR8mk36G7Y/dS4S+5XcbfgvEHuf+EV6mkC/O8D/xl7r
A2IXwP4C7zZiv/tsBun5//CZjnzk7JLPtET68aHP9ET3tIuc39nv5A4fkTsd
7EfYNPJ3gxeHNOVPZ3/5TJM+9tls30FPO7mnqdzTDPr5mHVGkt4+gP8TOD7m
OfbQz5/s5dN/N6z/bkr/DbC+U32v+pZnkSsOaVQONxNy+k3PLju74uwfn2nP
Y/pX7/s4S3f+9pnGzQGvvNlwz8WvuLQpl990RPqkvXwF3FrQb7NPPsUG+K3u
v76Ebmn/HzUf09PfnPeRmxv+/fR9gF6u0Me/cMmfx2/6oBxpSV6/6cznxHQ+
SE1ph2bmIc7C3ACnOSrdOYx5WOXng/NLnlPPKKxynvCbX/qX3+1TOHvSb3qg
PPlvEvsCX256vg6PODwN0ZoCTuUUgPMIuL18D/ouVOcN8or7bVbe5d3+zX0W
8puu6d2kcvaU37TlDfJT8t6E+Qq/fJ42alWe9Kuw3/RKulHU7Ys5S+M3XUnt
t+/vMt+MNEy1UlPT0zRxFIFHHNKNIvT2JrXfgu84MWGE/5rnKUw/tzirn2/g
k27oHkqw11rSbxrjc6sfvHq/i08x6ZA0SHoV8JtpL3wJ7rY4WD+xUn6b4dIi
zfqgO4f8xqXe03A/PnzqQznfUUP4U/RSnH5Kw1mK+Dv0dY98r5bqSGfCrDr/
QH4Zv80HL17WbxryI+cI8TLE5JdPuuTpn85ROMuA0Wyr6rfZKYzi0inpVzm3
L++3/U+cY8Sj7ON+00vhKvhNp+5z/pkc5aonaZTwacnT+SwmTvFV9JteVSAu
rKcVWtP5TS+Eq+Q3vUnv1gz4/0csPTHlCVfZbxqTjpj8VfymR5WJa/8r91GN
O8noN23LAF8GzunoS/09gKsq+984V+BZfoYnk9+0QfY+vmk8cwXiHxKv7jdd
qkYv2qufGm7/nN+0Q9jMftO0LKw6S/cewiFt8uKP8NWgjup5+BpwSquyuv3T
zmr6bSapnnye1mlVXLMhG6vOmlHKqeW3elmpr/nhYYX5E5zO2f0WV05tv824
vzhrL580RXtphfDPOKuDX3H55fP+eU6r9LKfs/5+0826ftMd5eUA+wzfTCW+
DWmQcPX8piVa65Mnv+KP4fiHXjxdHej2g/ymA9JInXOx6nw0Ca94vJjwg/2m
V4OwPPiFVX3vnwm0NvCbfilniN/0o6GzRvjzEGtILDm4oX7TqQbE5B/mNz0a
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
G2dFou5vtqj1IvweZ9cjNmvn8071LZ2jl9n086mzqxHTkSv4L/NM4pDu7WXd
w35fxPRJa0/2+ucYac5+Z9ciphGfUVc1z3OeR72e5L8WMQ38lB6ugpmL/wqx
/fC/Ru5rnOfQ8xX68Pr9x9m/zg5wBzciphvJo6Yz0h/pX7KoaczL9D0fn3DC
fE6e8p8gNzk5ycAs4K6FkRZJHzS/U7j4k1Gb8fPhv06eatePmq69DvcRVuXN
477U1xG4jtLPTfgX0pt8+h71PelbShk17VHtv9z6N3f9JrFUzr6M2OyQbmo+
aU7dc/ZVxLRlCSbMl9hX+MTzBlxL8d9y9lTUdEq6lsbtfVHTja8jplu34L7F
OTV45R3nnIb9W5zVq+LH4LkdMQ1bDsfXPKf6OUpvqcALuwJswPmCUdOZOxHT
MP1u3iYmv/qVnpzA749aTPi7EdOxFeStxOfpm2a49CcUtb3WcNTwt8mRTxj1
sZr8b6lzkvpBMOrnOPd4gnezBvxqVu+dfcc7VF3VlJakj9qM1dxeB+Z71nXg
hY2Al+ZI66L4PN1bR956YvIrvgHfD85i7hyPml7dj5hO/OTsx0hCr86AO0vO
j5GEnv0IPm3UZoW4foD/ezA/wRsHcxZO9STe8+SnY3+O8y8R04z/Ofs5Yloh
zRBOd6T7Oc/5AvGfwUt3Mjh/xqitF7nXLcS38p2c5B0Kf5EczfJfnf1GvU3c
zS/4t2Fb8d2nrrCqlylqOpY5atqks/K2k/c+uA/4/vQ93gEn/AdgVV/a9XTU
9CKrWx+49feI6VlW/JodmiEfUjNL1GLy7wL/kBzxPcAvn6dx2aKmHVqzs28Q
tTm3JGoY9aH4I/KUL135w9mf8HwMTv1koYdHYF7FduP7nT52Et9D/JmoaYL6
kH7kiJq2fEpM5z3UlF78xfonmCvgNDulNfswD6v8nHBqTj8btfkurHIeR0x7
pFvSIs39XA6TmzzlXCVP+5zcmepehucx+XWdv17U9CwXdZT3D3HhpDma5ZrX
18CppmZhM2boR0nerd6J3o20KG/UNCQPvoboXzLOyen7RiShc3nIkS5Jsxo5
axo1TWgStV7yuTU/39sOvkXVkl8aJvscXwo4GmPieJKaqp2HvC/ISwHuSfKe
oO+G7JPDkRJM86jpie6hBXv5CjgrGDUNSwW+KWdpnuLSq0JR0xrthS/EvTaH
syA45Wlmt4zaPC8ctb/NbvN+dB8e75ec09BTS/BfUy8VvTQj1gpOcQlTmNzU
5O9y9tDZbmpKc4SV7xH+YlGbE0WJF+Ws+ad52TlqmtcmalqkvWZb66jplbDF
8LcGVzxqeqR4u6jpXFtnJZ2ViprmKF4ianrVFkyQPOWXAH8PnLRJXO3puTj1
xSVMSTChJLgtzjrQU1v4w8SkWWWclY2a3khXSkdNZzq59fmoaUvHqGlKB/A/
gFOO9mWIeTop7elEbjrur4uz8lGb6eW4A097pWPqoRy9eDqpuHCl4UhLT+2p
FwFbDt7nwaiudEO+8tTuGjWdejFqc7SXswrRhAamA5eePivAIT3p5qw7awa4
urJPD4fwFaMJXRS2krPK0YTmVYna7z4jfJlYe0QTWibd8/KU4+XqXIVaqiOc
8jKT+wL7HtT9BVxVaio3C7ieUdOY6lHTiyz4soKvFjUN6ck9ZcWnHPlrkFcd
n2LVwT4NPsZ3o+8gG/fe29lzUdOTP6ibmZ50fgR3NnhepA/1r75qkO/povY1
wYs7O2sf9jG+SfXRN2ra1Qd7Box0orZb60RNo6Rjtdx+QNT0pH/UdE35/aIW
qw22Nvna54CzLznKlX4tjZrOfxW1mT3Q2SBnw6M274ZFTcukW3Xgq8M5F3gv
Lxd99aOG+Bc5WxxNaOE/aGMOcDnpZQD56mdZ1DRBWrHc2YqoaYn6Ghw1fVsK
ZhCx3GAbkd+Y/XLOjcAPiZp2iUczepWz1VHTqbzE5dMMXxm1WT+Mu1iBrwm4
oeQtoZ8G1F0BZiU8TeAZCtdQzsqVPmhW++inKfU3OtsUtZmod6r3XpP3MiKa
0LORUdOUgvQ4nOdZEzWda8a5Ob4W7KVNa52ti5qejHY2hlVnadGf1FTtItQZ
RW4L8kfhH8l+NLkj6K8g+HU8q9b17AuBGwlXC3rcEDWdEm5z1LRCdyGNGeds
fNS0RRozNmrasYE7a0PuBnLacYfjyC9Ozjj2bcgTRlq0NWqzW3NdevUSfbSm
56LcUzFiJemnBGtJ+IuBE2YCfO3pZzP7zdRszTfQCmxp8Pe4lzX4JkZNy9Rj
R/rUDNzn7DVn253tiJrOaK5tw9cJvM6T4JiIfzt4adRkZ1OiphXSmKnwdQaz
k/0OsJ4eliPPyynPuSy1VLMLuTvZa93Fc02gn0nwliWmv32kY9IWacYMfN3w
6zyTuLRkmrPp7KeT4+niq1g3OPY42xs1PZodtfk9K2o6NItzF/roSp0q1OpO
fg9qVuTOqoCbxT1Mw686L4Dfx34v7+4FfOphTtS0SvP1FWcLwejd9mLdz74a
PSpvXtS0Z27UdG4O+wNR06j9+KqT15vYwahpVA04DkVNH/oQO8ResZfB9obz
APuDYBSvCWY/GPV5GM5DxIWbTy9zqV0Tn+bcAladj0RNF6Qlr3PWvnYS7ALu
Sr5+4Ppzh7q/usTrgDkKp7j0/egb0beyCOxC4sINhPMwvPXACPsG8aNg+oL7
wtmXUdO8geCkUbeiprEFY3aW/82ofUv6LveA+TpqevUVZ+mK9EJ68xZxT9N0
Pk58MHzH2B8jZwX429hyOL5xdidqGnUyarpxImr6dIKz5te7UZtnx6MJ7VpB
vnKlLdKru8SPk/8W9Y9RZxX4u+zvwHMbrtXEvo2aJgynr3eipiunnL0dNa0Y
AU7zcQ2537IfCU54ac13zr5nXUvOSOLifY/nexf8WrB69tP4f4ianqynH/lH
Y6PwnaTuCOr9AP5Hcn8gz9PYdeCE0VzWfNZc30jOT84uOns/ajPxTd6rvp1x
9Kze70dNRzaRu4F8xc6A/QmcMD+D1/lc1PTprLPzUZvBmsXSpP/Rj74/fYfL
8G+GYwurcOPh8LTuJbg3UnsTuF/gPEe9CfQ4PprQ9TNwTQRzIWpaonv4gHUK
d7Kdu/uVu5oEfju+35z9HjWteYBfPk+/JpH3G3H5P3T2UdRm9y5yf4dvG8/w
C/ut9KK+psKxE56J9DIJrqlw74LvIeep5Kvm9GhCw3S+5KyPmxcHnR1ydiNq
8+561P63Ac0Nadmfzv6Kmqb8gf8RPOLQnPuY9RL7T6KmVVpnsZe+SIv+Zq/1
sbNnXO0czj7Ft496s8i/HLX59Sc9/AVmL/4/iF2Jml5dJvcyZ83W5I7/iZjh
XyVnDnHlSTekQ59FTXOkP/9yvkb8X/z/RE1b1O9VzvLvxzcX7vncpe40Wczm
9yF6OYzvCjlzuIt/4FEP/4H/D+wh7u0xmJlJ7n4+fV5nnU/Pr1Bf71azU3Mz
dcxmomZjkZjdz+Ekd5QiZvolrZEW3ST/c/iEfwKMfAujib8nbkYT/0y2CA5p
UqGY/c61Fo6ZRtRxa92YPbPmT0q3T+Usv7MCMdM5+aRlT8IhrhExq/U59d4A
J46jYL0cnVPwTNqrZ68PT6eKxkwvtBZjrzvSXT1Fv7or4Y/hUyxNzLToOHid
j8OpexXfQb4bvUNpiDSouPP7YzbTfTzzsWhCX3VWDeGEL0Yd8QtfhH7U17fw
lQDjg7cYuXf4Hq8m+b7ncZaeCKtepB3SmVAsoWelYnYOE9dZ/pIx07eAW4Mx
O8t/D5+npdK2SMy0okzMdEM6VZa9fJph6WM2JyvFbA5q/qmH0jHDay3D/ify
y9GnelJctdRnhH51Vs/qRT16z/YO5yh9CZ82ZpoRj5k2xDmrlupIy4SPxUw/
5CuPX7pTwe0r4pNmyR+DS/gMPF96njddzPbKVd4v1PqRZ6vMPeg+pFHqJS34
n6kn3vfoKx285+GrBGdaYvI/5vem39rTbs0Ws9la0621YjZTq8VMO6ryXemb
0juVfmSKmZ5Iy9SbepQ/Y8xi0s2LPOtvxKvETIeqx0wvtNZgn9mtWWKmQ/r+
9N28Tc2S1H1IT8rLTH3VqkqfD6iXkfri+hBu5f5OfhVyHtB/FfYZYwnNl1bo
TrJzNzrrfv7kjv5i/1zMztK5rDGbvZrfmuPSMWH+APc08azc9cfcvd6FdK52
zHKUm537uBRNaLPOyhWXOGvwrpT7F/na14JT5zr0nh3eGuTqzs/yXer7lt5e
pXfdaXdnPZzVi9m8qktcuJzOmsVsJmk2SV80R54Fo7h3/oxzXXj+wZ+LPM3B
+jHTM2lIQ2eNYqZbwuQG6+mYsA3AC5uccwP28otTfQubJ2ZalRuO3Jz13Pqt
dAT/LznSEMWV1zRmOtIkZrqS1635YqZD0rH89Kx+U4CTxjSOWUwY4fOSL+5h
bj88ZnomzRkZs7k9gn0hes5LLyOJvc1dN+XuG1EnBTWb0OsT3END+EbBn5Jc
T0vE0Zx4ETCam5qfE5y1iJmGNQffnPNo8MqTno2JmbYUxa94GrAt8I8G1zJm
eqT4uJjp1FhnrZ21idlvXvFWMZsBY8EUw9+SWGvi2peAazz1WsIfANMaTHFw
Y+AtRs5LMZsvJThr385Z+5jphrShbcy0YgL38xJWKgk+BG6is0kx06fS5EyE
KwS2Me8sBZiJ4PUt6pvswH0EeY4I/XRg9TQtCE51J8dMK1S7HOcpYDvAOwmM
at3k2/wC/SpLjnroFLPfx8sxmzXz8MXxS1OkOdOopTrliQv3PDFhpoLXebqz
zs66xBKa1zVmM3tGzDSiEnxT4axIXiXWGeyVnzYJX3p8U6mr3JlwziDehXpx
evTy03LuRi/CvBAz3dAMzMSqs7RiVsz0Q3jNyYz4ZuOXPs1xNhdfNfzd4crI
nepuNY8103s660XuXPxVeIZZ7CtzzkIvL4CvRr2M9N8Nvqxg51KvBjk98c8h
Vz2+GDMtUg+at5rRA+DoRawmPeu7eCVm+rIAv3zzY6aVT8Mn6x1L6Kj2fdhr
ldZJnxbGTB+0LmJ/X+8w7v6+AfMK8b7k9aG2eqgFpja4+cRqge8XM93KQW5f
ep4PpncsofPC5gQ7MJbQH2nJkpjpjPaLOQvbP8l9Pcs5N/mDwC1NkluP/AFg
xK95r7k/OGazfZmz5fD3g3MxuYvgawjnMvZLidXjDhvhXwZvHvrJzaqzfiv6
G7I8mCH0otorYjarVsZMX3TOB2aos40xmz2aQSecnYyZtuUjLg0cxjqU/CZw
Sn9WOVuNTzWkT6djphfvODvFOorYKvLklx4G4rbqPBI7BX4VOeJtTp01rM3h
0fmes7Ux02Ov3+bEpCdnYqYb74FbFzONeQ+/tGQMPav3d4nJ3wr8enJawNEK
n7RJmnM2Znqi9Rz7teDXgDlDfAN566nr1RxPP2e4s9HcwwbeUxusNb62+DdR
cwJ1NWM1qz9ytjlmerUJ/CbO58ErT9p1IWbaMhG/4u3BbsZ/HtyWWELH3o+Z
5lx0ts3Z9pjph+JbY6ZFF8FMwr+F2Dbi2k+B6wPqbYG/E5htYCaDuwDvJHI+
jJluTOGs/U5nu2KmGdKGHTHTio+4nw+xaUnwncFdcvZxzHRnOjmX4OoMdgzv
bSyYS+Bfjdn83s19PM9zdKWf3axdk/S2nbqfxEwfVHsW58tgd8P7MRjV0rep
b7El+JnkdAerXqQdnzq7GjMN3ONsL/45xGZRZzZn+a842xczvdlLXg+4e+JX
/LOYaYf06Rp7+b6M2bz7gtqfgVHOa3AciJnG7Kefq2Cu0IP66QV+P2svcnvQ
1wv49sM1nz6uO7sRMz1ZkOSsfW+wB7CD+OaDE0b6pP8NtS/xPmA+h/MGz6Zn
1Mw+DFY50rmb+DX3X3d2BP8rcCxkvUndl+m7HzyHyeuP7yb1FiWJya9Z7v0z
Sn/qSJc0xzULT/Bur3CfS3g3X8VMQ95w9qazo+QdAbMY3ED8R8EOwncrZrok
zbrt7JuY6cMxZ2/Rl74/fTfd8Q+m1iBWnb+GR3zLOd9OUm8gXIPhWA7+a57h
Fj0s4bwUzG36kX7ciZmeBOOmOW3idi+6n+P0vhL8UHzDyLkbM81Zzf5b1lXw
+hyXP27aGYrbPNf8XgP2HvcxNJbQ3beooV7U0yl6U/478K6krzCcin0bS2ig
lyP8dzHTG9XSTDpNXsq43bPuUXMxU9xmnvDfxxLa9kPMNGUdPIpHHDYaNy18
l7P28kmjtJeexdw5Hjdt+Slmf/dp1XkjuepF+Rup8yO5Z8j/Ef8PxH4i93v6
Wwdedc6xpmW/HtwPcJ2hx3Rx0yzhMsZNNzLETW/+5+yXmOmM9EZ/o0pTlJM+
bvvznDOQe5G8reT9zFn732I2v7dzx5m5Z52lXb/ShzjPcTf3qf0rmF/g/oXz
z8Tvg/kNPr1H9aNn+oA1E32rV/WZJW6apT7+jtnM/YsexfOAvVZpmbQra9y0
JTO56v934g/AiDcr9jR46dJDZ49i9lvXb/6PmM0caVG2uP0dq9+k/m5Unvwf
E/sE38NYQht3w/cqdT+i9mVyssetxqvgdtHn79hDfML8SV+6h8cx05DXuBP5
nomb5mk+7gWvu8qBX/Gczp6Nm4ZJoz4lvhfsPvw5wP4bM135J2Z5muvKVd/i
u8L9ZGevvjx9E09Oav0ZS2jvfvjEmwtOce8nXzH9e236v/nq30vTN5ye70Ga
do285HHTj2Ru/S9meiV9k77kdb58znI7yxM3jVP8P/CHWA/DmRuMcj8nv0Dc
dCN/3LTkCbemiNu8S+3WNPQgvzRMJr7k4IXV7Fcf4vgCXvHnIe8IeTfBfUFM
mBvUVg/yPwmfeAvHTTcKxc2v+ajZKN0QvgDno+QVjBv2FjnKvQW+IH7NV/Gk
clYsbrO7KHNXPmlWkbj5vuEOdBfSAGmUelL8KbDK+YpeVEOYr8Hdhks8wovr
LbiO4bvOe85NTfUjfKe4zceOfJ//8d6lX9JCvRfpWvG46cxxfCfwKabnk86d
IO8OPsWkqW3jpkml4qYhJeOmSSU5H+T7Vf0SxFQrSG6ItR37e+CU38pZ67hp
reJhMO3Zt6Nv9VoCHvW0MW7aI1yHuGmH7uJ5Z2Xjpjdl3Fo6bhoiLenAPUXJ
7cA+zh12AluGfO2VX4a8GPgucdOQzs7KxRPaGKFn9aR6uptS9CPcT+DEXZb7
LA1WHMKUpx89R1rWzuw7U1f7CnHTEuH135Hov1fRf8cp7ZJf8fTg1W8fZ33j
Nqe6x01fujnrypoBfFf2yq8YN75u4OWvHDfdquTWKnHTEGlPJjDizsTaI266
Vyme0DqtleFRvnwVwf0PHuVlZn2B/WvOejrbB1Y5lfBlAVc9brohnciKvyc+
xWo4qxY3LakaN5z28gnfK26alZU8nXvHTZtedPacs5pxm98y6dBz1M5Cn6ql
Ooq9SO7T3FNVaj9HvAZ+3YNi2cH3Zt+b95adVe9OuqQeajlrGLf52oB3mwNM
P/Z96fcv+q3t9nXipivaSyfFk5Oc/mBrEdN5QNz0SHnSIuVqBmkWDcRygVNc
uLpw9id3AJhnwSiuWZGTPlU7N1yDnNUjXpde/6bf/5gx9cDUxyetkJYMwbQf
TNzTw2ScGxATxtOd5NxlMuI654NrKN9Mdb4X4RqRNyxu8zw/fQ+GMx95+VmH
sc8NLg8cKeIJHW0cN20aDucw/I2I6Vt8kW+pCVj5C5IzIm4a0yxuelEQn/St
Ob5m5DaNm7Y1JUf7kXHTokLkjWQvXRrlbHTcdKOFs5asOkurNMM0yyZwfoqa
ReBU/pi4aUpRYi3ApqKPZuBHgxlNTlHyC9PTWHjGUF+9SLM2OdscN71Y72xD
3HRlXNy0Q3l+sNKcEsTGx01LlN+WVeefyBsHVs82kWf1cO3w69lfipueaPZv
iZu2jcc/nnMJavvoewv4zeTqvBXsS/BuBqNaT6R1fx+5NXlaw22Lmy5pDk53
NoN3+STvWf16Gigdkb5tp9ZWcsuAm0SsE7zPc97hbLKzKfGEPk2Nmz7sjJu2
SJf0vem7HU7uDvw7wHlaWTYJX3l826irfnbBuZP4FOqVoUcvvyznafQizMy4
6coM7mQGZ2na7rjp2DTuqiK+V/FLa/Y424uvO/7pcFUk3p245vUsZ7PJVd4L
1NoFd1eeRecq9DITfHf4KtL/NPiqghXfPjhnEpNf376+5eLEe4LRPf/m7EHc
ZoX8r7HXut/ZYmdL4jYHpT1znc1zNod9dXAH4jZrdK5G/GDc9OgAucqTjkmX
DsVNa/qA0/ll4vPI6Q1nH/bC1QTzMn3uB6P8w3AqNh9sVe67Gv3WoMdaYBbE
TXOOxE1ztH+d88K46Ukd8MLWBtMvCe4oua8QX0Ce8hdxd/W4S81yadYb5Pej
76P4BxAbiO8wmL5wLoJrPj3VhFM5b1KjHjidj8VNY/QOG9CL5ubquM3Ut+Km
WceIC7cUzjfJlZ5Iw5aBWZrk3JDzMXgG419OnrTseNy0SRpx0tnbcdMhYVaw
NgYv7Anwwg7nfIL9MDjfArsybnNrBRwrOA+ln7eoOxy+psSVJ714x9lp7mQV
9zKCHkfia0aesNKVU+SOwneKvfBruFfx6LvR96DvogV+xd+L2+/xXfpYBf9p
fGPArSXvbWqMpO5pMO/Co31L8OtYPb1V7YX00pK49GQ9q87Spftx0w2t0rFy
Ti/OxhNa9IOzH+OmkWN5hnFg78Mh3Jl4Ik/rubhphTTvfNw0RJr1v7jNO825
h85+xr+Z2BZ8vzj7NW7z/iX4JlD7DDW3kvMLNSaAuw/HZvwX6GUrWHFKK6QN
71NnO/5J4C/GbUZuJz4Jn5fzARzv41NsB3jlSQs0pz+K25z9PW46Je35kNhu
7uARfFPh3EHOTnqZRP9TwX0I7zT2v3OfO+HbhU+zWPNvNvhL9HU1brNWc1F/
93jfxW56kWZJU/509he+P/CLY0Y88TeEzh87+yRu2qP9LPby/R03TZH+PGb/
N+9Q7/I9avwNRjmX4VAPe+hjL7h9nPfQ02zwV1hnk/sHmFfp82N6mg12Dnfw
Wdx049+46Yz05x/OB7gjYT/FruK7Rp7y/yNXOfvJPwD/VTDX46YPmt/J0trf
ZYfhnENP+7kj5R+C8z/2/5G3nzt8jD8ZPNeoMR97Gd8C/DfiVlPaI3wbt9/o
rK2zz+M2L4S5GTcN0eyQxunvyBRpbf8658/BCaPYk2lNsxbCo7hmm2bcHfiE
/yJuWGnWUfzySbtS4lf8Tc6p2L/BeQnYL+ktBXWFe+r/TZp5vJfTFsbrRimK
nLVFaSAiNA9uaZ5o0kilOSUpzXU0aiYNNGjScJpJiRBJKCUqjQopjZyEBoUo
193PZ31/n9/5Y3322ms969nr3b/3Xc+5XeZapNzRFMceAa8z1oMTZgaYY9GO
p7huyReHdEOY7NHPYa4/M8jPBH8ixbVLOiT8Nea+1uz42akVNqF1mufSomvN
Tb7OmA3uJBwb6CUHmI/hOMmdHqWnl+EU13Xmdz0H3L3mPR/lN/iR30R4YTcR
m0tc2iJNy2UeUy6dveI5iSsmjTrFmk4uoYfizgn//AzY62PsBnPt2sx+C7mf
UpIaJv90tNzms+EG6uQnatWT6qVNaeAXsGp/o/l8EcdCYsKWj/v7zfVsKzhp
VQVz3RvNObmpV7yiuZakmGtLQtu0N3OtqQBGHBWIzcrwvjxgrlPiqhStsrmm
BHN9MriN/ef0pjPOU18J/xz7inCehecmc62QbSMmfCXOUn5HSlLbtM8T7WZz
DctDX9Iu4atGv5q5juwgL5zwt5jrkDRK+Crmvtaq+FWpFVYaJbx0RPpU3dzk
VyMvXN5o+aLdaq4r1cCIRxjld8OV6OVP+GpQuxuc6uXnI1fTXBNuM5+5heJa
y1xLanKmNCKhZ9rnp04Y1Up/VFPb3P+LfQFz3coPR372muMPRv8hc21STNj9
nH8ATvFdZq2Dr+eqQc8FLalv+9kX4tyCcKtOmnCZM68Q+ykl+beh+rlC/m7z
uai5rP7qmuuX7ud2c92qwvug90IaVthcU25nn9A27ZX7By7x3AFWcWmU9Kte
XBuaa0gDc8yd5vok+5Y64YWtjwmbmXh9/Hpwqm/plniKwPcdfHXBqJ8GnJuZ
vLDSqcbm2tIo2l3ci+4kC/iG7IVV/mGwV7FejZ+F3FXcq3iKco8HuFfFFZMu
NYlrU/M5fxe9qCdplHpS/h6wReFvyBlZObcxfhN4hNfc18yXqVYx/Q2gZ5Y2
SxOEuY/zr6G2mPmsUvwYq/aalYnZKU1rbq5L2altZq5dwhYj3gxccXMtUv5R
c516JFrJaKXMNUb5EuYa9QiYHNSpvgT4H8BJX8TVgp6Lc764hCkJ5lpwzTkz
BzX6eycnmBb4ZaKVNf9WpGelzXWplbnWtMRyZcCfAvdYtNbmGiVNakVMXMKU
4T6u4b6vJy+87lR3W477SOc5pGPqpxx9aZ/oTTid28Zcp3R2W3O9aAO2HLyt
wSR6y0V/I6ONMtfCF6JNMJ+1N8KVQl0bS+qQ4u2ijTPXn7HmejnGXPMq4Fdk
HYs/1pJ61cFcl9pH62iuKdKhSmDG4Wt9zlwP21tS3wIcHai/iZ6MHitRV5n1
eXwD154zVdsp2njzGSdcZ3PdkA5VJa784+Y604n4eO7sFuKPU6f6Luw7Z+B5
gbsdw33tjDbRXLN079IZadQT9FGFnvPClw9cdXjy0MvN1OQDJ78rfDXAT8TX
OinaUPN3pxT7yeb6prr8ltS8J8215UVzfROuW7SnzPVmMvGa7AuQr03NS+wL
wKX9FHM9qs1evrRiarRp5nom/u6sheCWtmh29gD7IFxT8BOctTi7B/jucHRn
/xD4qWCehlszt4/5DC5MvCd49VWXWGHwL5trz/Rovcz1Svj65GaA7UluOnjx
9OWcPuDrUTPTfLY3oH4mvvh7m2vaNLjqUjsDTG9L6t6dnKm6WXDOJN+bc2vw
2+u3exjcbPM5ucB8VqrPfuYadjc9K6Z3oyu/6Rxz/WkEz2x81RWlbja4RsT6
m+uR9OqVaHPNdWZgtFRzXVJ+AJjG4AYQ748/EKzq55nP1aKc3Z/8fWCagGsK
V2N6mm8+l+dhzcBIYwZFG2yuLdKYZ7if+dxRc/DzyQ0Cu9Bcc9LApXGfg+At
zl015N7TwAszxPz7LEXvqZyteEn6KcFaknOLgWvB2YuwxeZ6VQrsEDCPgiuT
LVOm4dHKZvN5oHOHRXs+xNkT7bloX5nPun3mGOWlZdKupebaonNacdZw8sPA
LAEnWwZeuvRstBHRdkT70pI6JC2ULuWNZ98SrXPwujbULsdfBkdCG8vBV55z
W3H2q+aatRze8uD28VzPU1+G3ttR81q01801ZoW5ZqxgL03ZE22v+TzfZa5v
O/HHUN8ePsV2g9HMXhltFav2HeHcSz+74NLzt6H3tuA60Jfw4+ijLT234xme
5Zn28pzPU7MSjjfM9Uk9vBPtXfNZK+tGrBN54V7grvQufG2uIweIK7bfXOse
h1u22pJaKP9NfK3SKM2eb8w1ROu3+HrW33ieSZyn/FvUvcnZ6mECmIng9pOb
AH6N+ZzqSu1b9LwfzGp66gz2SbC6j4T+SKO+M9cZ+QfZC/t2hvvqxr479WvB
HcpQ+yL1u/nt9D5IU6RD75nP9sPRvod/DZwHqf0WvqlwHsY/RO5F7nAa8cPw
9qCf7qza693UO6p3eg/97Ab/Pn19EG29uWbIehE7Fu24uaYcMdcuadJRfMWk
e+uo6Qmn9hvMNeRDcx36kL34ZsH5qflc22Q+1zaxX0+NeplBH8LPpvYE8Zfp
5QTx49St57wP6Gsd+KNwzabmpLlW/BgtPdon5nrzcbSPzLWlH7gfzHVkNvs5
1L5CfX/qBuB/xF668FO006zSkFPRNvLMAzmjL3d2Csw8+tkIZiDcn4D7iLpU
MJvoJ53adLjk6xu7YP4enIt23nyuLmUv/2dzrUjjN9RvqXfjM3M92WKua8/w
u/0C/mf2m8kvoH8961ZzfZDeSKd+NdcQrWfw9Q3oPdJ7NY39dPALOWcRq+oG
08sQ7vRnev6M84ZiQ4gtAJdGj4Mtqfeb4dIcWs69SDO2RdvOqv2z3JV05my0
L8zn7+fcqe72Irjh5JeCPcd+G/k8cdbfHFwLL/Db/MY9bYXzLGedwZZwVyPo
ayS9Lue3G0VsBzYS3DD41JPeUb2reo+lufmCz4H7g99t+eB6lJe4NCkvMc2m
f6L9L9of5hrzu/lMuYh/a/D5It6L5HQ3e8nlD65Lr8NRgL85pFvKab+P3J/m
WNXuoX4vuH3kE7qaj3PVc0E4xbUK3KVo18R99uDfzAr6VR9/mWuYMLcF1xbp
SqHge/nSocvmmrIavOr2gxPmdmpVo9zfYK9Qd5n70z1q1kvnCgef5fvpW1yK
fw3fN6zCCfMVuDVwXuEOLtGTcHfAeYXzhL0zuK4o9za/oXRMM1Lz8erg+iVc
kWj/kv8fNaoVZ6bgmvIuJsy/mHKKiecgXGuJZ452V3CNkn4Vjf49wb/5/wTX
oczgM7O/G7zqvmdfFP8w+yLwHoInS/C5JXuPmPopAuZ7zta5wq4De1/0iwXX
Dt2F7uQqepReCL+OWEIT7w1ed4z648SPkhNP1uB3/DfvkN4HxT7k7qUhxeO+
BL2oJ52hmLSpGFjVZAvOK/576FeY4/CcgEvvubQhG7XZ2L9JH3oP9Q1s4JvQ
2SWDz4QKweeO5o10S99LjuDaIs25lm8ooY2lgs+UknDIF49050fypaOVCa5D
uYLrRM7gWpWTvfovQQ/XkdsIT2lqdfZ1Ialz8nPSi3pUfzpHmiN8WXzFriUv
XHqGvk6DKxdcVzQH/xstd3DduCGu1wfXB+mEcJqR0pvT7OWr9hfqt1Cnevmq
114zOCW4DlTknnXfN5Lbasm/D9STzvuUO8sNbis4cSuWi/6EFYcwKTyLnuMM
awV89a4+1fM5+nggWvXgM7daXI0exSO9kq9YpeAadZ7as9QrF8A+AE6YyuC1
l95Jk24KrndVguvDb+AU039brv8WTv9NnHRReNVVIS/cdjiU6xTXx4Pr6DnO
1rldgv/vyNWcofqq9JjQc63ai0v4J4JriO6hRnDNkOlOqpO/FYx0Q3y6q67E
lX8yWrfgupOfeFfw1bjf/MSErRVcJ2pSV5DazvSUF+vCuerrEn3lh6MAz6Yz
9KyX4BPvU3B2o071NfnG9DeA/naV3gjXPbhfkH0hYrex9sDXbHo4WqNoDwbX
mDrBZ0rt4P7TwTVLNbXJae4UJtczuC6pVhy9gmvFHeR64Sv3ENjCcKq+MLg7
yEujhOkBRn32hrMXeeHqRusTbX20D+mrDs9QL7iGCdM3uLbcBb4vvnSpQXBN
yQRedUXACdOPWtUoVx9sQ+oacH+6R816aVH/4PO8CH33IX43fEVZ+4O5E1wW
OBvyjHXpSbgBcDbkPGEHBtePAZyv31AapTmq+fhocB0TLjVaY/KNqLkXzibB
NSUrdjXYxuSywnMvXNmIN432THCNknYNjjYkuG40C65FTcE3ZT8IvOpKsB+M
X5x9Kvli8DQPrlHZ4WhGP6lgSsBREmwOsMOiDQ+uF49yJ4/QYynwOYgpJ/0Y
Sl1p1jL4pciJpwV3rHdB71AmYjmJS0OejTYC/uacoVhZespJTUt4S9HXcDBl
4ClLXavg2tCS2pbsM9OH3sPribXCHiMmvZCOjcLkjwyuLdKcNmAT2jgSTHlq
VTOavHCtqWkbkvrULrhujAmuIdKnF4LPyarwjCY+Gpx8zfix0cbBlwLnDZyT
m3xFalLAtaOH3ODac347OCtSJz3oGFx3HuCcSuA7BNcMxZ4j3oEaxTtR15FY
B3xhK4OvxnNOiDY+uDbp31/fjPZWcB3pwl7+qmhvhKTO5eGcQP/tua/x8K6m
tgvc48lX5hzFpDuay5rJa4Lrkc6eGnzmTgn+Lo3gN61Gv9JBac7bwTXlLWrV
50TyE8CsASd7B7y0Z1K0yZyvPl4Mri/SnHc5cyTnvkO8G7mniE2CK6Fnk+F6
kn7WwKmatZxRC1wN+pyITSImzEv0pXuYFlwzHuJOFHsvuP5IZ+qA1129T1z5
ddE+CK47PYm/D34KXD2JCftycJ2YTl1vatfC14NnWYuvvurSV084etFLHfqv
C59418P5AfFp5PoQX08PM4LPhcM866HgM2hBtDTw0kzpmvTlo2gfE9tAXBwN
QnK+aD8z2qzgOiT/YXzFPgmuD9KWjfifUF+Pvj4mNoCa2XCoh3700R/cAPb9
6KkR+DmsjajdAKYvfc6kp0ZgpWPSn3nBtePT4DojjdnEXn4TsK9gc4nNp071
m6lVTSr1qt0afI5/xh3rrjX3txAbAmdjekrljlQ/GM7N+JupS+UONxLfAs98
zmiONSM2l+dswvn6naVXmrea4V/Sy1B4htH358H1ZFG0xdEWUpcGZii4FsQX
gm1J7IvgGiXt2h5tR/Bvfkm0pcE1Q7NJf8PWIt6Ks1qyar8NHvGNYL89w3kt
4GoFxwjw23iGL+hhGPvhYLbTj+5hZ3Ad0boLf3lwLVlG76PAtyam3KvBtaUt
+FfxR3OvO9m3IS9Nkf7sjrYi+Fx/jftoHZI6upQzdoPfxTmvgv+SfnbAKdwe
MK/Bu4taPYv+TVH/35n+XbEp78Q8eng9uIZJe6Q50qJ9wXVkb3C9+SrafrAd
we8F8xz58dR1BLeS/D5yX0f7Jvgslk0kpm9W3/wJzpjAmePhlT+Z2m/JC3eA
s1bS99dwHgBzgP0q8ivhmByS+iQ+aYLm4ffB5+Z3wWf4S5jyB7HvQlIP5B+i
bjq1U4gltGUq3Hq2kzzrdGqOBJ9Jx6IdBzML/2jwuXgE/BH2B+lHfc8gdhSe
49QfYz+D3DF8/Wbt+c3VS2Je/hb83Twf/F3aw2+q/A/B59NPwWfJKeInyf1I
Xv5cfMXmgZ1P7engs+nX4N+1vttf2C/izL2cmwb+Z9Y0ahdk4Esjv5Dz0jl/
EbFfsIXg0ukp8d6n099iejgT/Lu5EO0iq/b63vQdnuN+zuIvZV2G/xp1K7jP
Cxlqz4fkbFhO/lLw9/LP4O/lH/iL6WUJZy1h/zrcv2MrOG9pBuxKOFbBt5K6
39nLf4Oz/4r2f+/UKRQ=
           "]]}]}, {}, {}, {}, {}}}, 
     VertexColors -> CompressedData["
1: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
lEhDnsYxVlcFTXRw2M5FOZnIRzi/nXW/xzoXlW+fXzgc3nGuzgj8ZWZwKWWJ
I07uflJBF/oIHT5pans+rti1yjJbpaHQ1vvqJlr9/r7Pj2qRj/DO9QpujJO5
msKKcm9HmNcR183MSK/AuUVwOLzd8rGt/dXf16vgYYKYjxc0k1XYz6EXxil4
t37CdcNz6UtvbUIdtRRxD/xkFJkx3n/RuXLefb7gcHj39fban/P7OtZ63Jq0
mfyHXh/c20bJu3UVzk9n9SXQ54TD4bpSP/JlvYV3rV/ntnMeU/12PSlp7P2v
fJZ8U0ZOGfvMzw+X0bMzM/xVb0ho/4MbnoZmNbz7XMDhcHhbnz8iH3umN51f
F6q11tDw6hTP9ecaaOBUT6++2yWYUw2Hw3XWSwrSBqxaWkJj93IHUlVQnp31
jxoHBfKxh3qffj4XUl9vJL/B3It7MkqYOen46JxSzCuDw+E9zpGPuu2s+Zwa
cUxEb+8aGldZ++nNVdV063DV5mGv8e/6hMPh8O6Sj6z1lm+5oKvOeq6H9xfg
cDi8ff2a4qFZbEgxnXBNeMvCpYKkM5Zn796M+rGzPLiEezNBTaL3b/TffamO
PKP7h0usqyhSkPnYc5iSDsZa28YPl5LAarRR/AGcQwSHw+Gd5ce0TjaXlj0g
s+cpZcoGEbWsvhZpf09B3skexjFWctrWQodHrJKQg3OM404Vez4A33Knq912
wLXZX4qbqKFk8t0AklPxePm9hiH1ROFPn0wdIyPflYnfvzO0nPnz59t1AofD
4T3N5yVNKVqYVkjCONMJF94Skf746E3GKQpmvw75+E9n7WPBeetwOByuG365
9KP7uWuKqOCdoWlTd4uopu6O5LaBklk/6mp/1b5+8TBBTBONNHCp2xYsJ8Ow
1foCgxLK6scdSCImc2eDAq8bYnqk5A4e4t//IxwOh8NRP76Kq13yJ2z8tZlO
fdz4/R1fBd2aOvR/0/KKcd4QHA6Hw1/JWftzWHNOWHVWR+fd+lCttc9kFQ28
JDOtUCnofrELFTqXYt8mHA6HwzvVO7q/6scdo+elIns7yZZoSyWF9/Z2icou
xfwxOBwOh/Paw7csWBtwREG+zekG2qcSSlmam1BsX8V8/5E1f4yVs3z798Lh
cDgc/rK39dxGvv394XA4HA7/bzw25I1lkxOVJHU6NH2cl5TcRPu3+utXUpLA
LSDKQ0NB94/a1Jg00rUVc2Zl60uZ+cjan4M6EQ6Hw+Gd6az9paxzEz505Dqd
atKezQqj2jrSZpmtP3C0qt32ybDycdRtx+TsE1JaZHQmJFlYQzlv+pe5nsVz
QzgcDoe/mrP2i57x5Tas1NKy1j6nlJTTgpaJy0XUuo0lXU0BJleu+2ysJwNu
G8vQ6i57b4K1P8eioHJk0QgpCbOv2fx5Qw2tfe/52A+t8N4EHA6H91RnzUvJ
pS+9tQl11FK0oTi5l4y4KZuLzpXTHRNug4uGXH2PX7WXNpDcz8dbkSPh3fuD
yEc4HA6Hv+zJby85tsS/imKevL7DbLGY+ve/WdgikVKLyTPHjH0N9IeQwBel
nIy+Syi2D50t5F1+IR/hcDgc/irOmpeiq3PSOtpZzx8xlwYOh8O71lnnLiX3
2283cKSKmicpU0dmKsgi2WGS2Z2On+vS05x1X4F8hMPh8P/M1RmBv8wMLqUs
ccTJ3U8qfjvfVc7cl6I3/aHQzFBNfnPy/O7W11J8TlGw3qgK3uVFT3NW/Wig
GP7+I1sJXbctT2zJr6ZTEXsyN36NfITD4T3PhY/LttvMqqbU3dyDumqquDnS
LctDyjz3hzVfhW/rP/zfO+pHOBze05z1fjf6lvBXqR814piI3t41NK6y9tOb
q6rp1uGqzcNe4991DofDe47PWvhB3r35ImoaxI0+qSJvQYqlMFvGfL+g4jTX
0FRTWFHu7QjzOuLu8jPS0beEIx/hcDi/nXV+AfZbwvngrHxk9dv59vmCw+Gd
78s9nmeemldBYfPG/pp6qYomes+e6yiQ0dU/vSvqP7SOLr3b+0IfoZSu6H0v
S3IR0WrLbJVLvooe/71w0GWvWto5JnVu+cVy3q2HcPjLzjq/A/kIh+uea6Mn
5B9S5dPTWb02rPMro7jPj2qdbOTM9whY55LzbR2DwzuzfmTNVeDb5x0O78nO
2mfOmn/CTbe8tVlN5iO4yZj1lKa22exlIebdugSH88FZfX7kIxzOn/7kgW/n
PPnpiooecNtPLGqp+ucDn1o6oD8Jh3dFPrI+v3xbZ+DwznTWe9+RgszHnsOU
dDDW2jZ+uJQEVqON4g9U0vpQrbXPZBUNvCQzrVAp6H6xCxU6l/JuHYDD4chH
eM901jk74VsWrA04oiDf5nQD7VMJpSzNTSi2r8J7cHA4nPn80XpXodzoszIq
FnABWUlbrk85beIn5926B9dtLylIG7BqaQmN3Ru10C+xgvLsrH/UOLBz7e7J
MePumKgoP6duYliUglautHUMdEeuweHw9qsf+x43+2F0kJDc7UKacmdU0l9k
O1ZePIp8hL+as86Jiw15Y9nkRCVJnQ5NH+clJTfR/q3++uhDwuFw/jkrH1n9
KL6tw/D29ax+lnHufmIydzYo8LohpkcvUm1uvJSq/4c+Eu2vp/+3WGFWOVdG
tiMNXOq2lZFN7VfVRY9U5CC/1zDk61qqj7392bRzIt5d53A4HN5WZ/VX059P
zw7afp/Uij7Nfe+WEbcqqiNRP3a1z0uaUrQwrZCEcaYTLrwlIv3x0ZuMUxTM
eZKs/98IETd4S0PbXY7s2+PWSHu49qWzlHfXJxwOh3eVs+pHvuVCd3fWvPdm
i0PX75o2/Pa8TEbPuPGQaiHmRsLhcHgXO6u+4Fu+dLSz5gWx+oqYlwWHw+G6
7d0lH0fddkzOPiGlRUZnQpKFNZTzpn+Z69kaMvnlnF3C3kZK/OaTZA9jOQUb
chuLSmn3Ki7A1HT1xs3DVZvr6Ojsn74YmVLJu58/HA6Hw/npbc1H1v4N1vky
imcxBit2qWhPTPndpAwlbT24fub5CWW8+znA4XA4HP6yTxTfig8ybqblpzJf
JJ+cykZXhDutKKZ/AKK16Jw=
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(m\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(r\\)]\\)\"", 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {{0.23, 0.97}, {0.23, 0.97}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1:eJxFlwmcjvUWxyV3YmZsZbtJ9i1q7q2spR9ZrrJUuLYUQiEx1iRRdmNwiySk
kEtlS8qSUYYwxjIz774/27svM7JV0r3P/zznmff9fHx4/6/3Of/fOd/zO+dt
/tqMIZPurVKlSpH+5x79j/j3mmnhO19dK0TT5fGXjj1sQ395Qb0D/5LxUFzp
/ODPZ/Br2aDX6oy0YeIr3n73zpexf4p/Zt66s/il2aFZkz+04X1Xj3dG7pXx
TMS1748xv2Dz9PuX/nzRhm3//vyb/U4ZV1+3had2OIc3T87Z0KiaHUdLq/ir
1lAwLljSwvP7OTyT6diV28MOiwjTTcG1CZdeGXDhPOqO7Hbkwjw7yovOPLt/
ioIlyvnNP266AG331rPNDtmR1a/13KpbFDww/oylw6QiHL1+1zo/akfbwhV7
RlxU8GXgVK1tT1xEXi8RyYHedEEFnV898Vx21WKMWV94s90YB+htBxXnvN8v
W1hSjH/4WmV88LEDCzp/88yIl1WMfPnbnxLbL6Fqh5UNXFcc2HQ4e+a+NSpI
7luXYZsfbfPP6k4cfmz6rntOqlgwcm+ny09dwd5zA7qs7uXEla+v2oYnVJDM
zKt4V2R3gRMx/Vv7HtI4T1cxWMg/4kTGro+63zNIQ4Opg66vG1qC5iLNSSda
NL0xbfh7Gsa2L65z/kQJbgi5bVzosVU8QMPeSP/H/te8FOdF2HEujGooMq2h
Yo+4SCm2fCpeLszVqzC8VhDtFuUff7NGGR49/Fn5nnMu2LaEmuyJaBg/bEjb
L1aX4fTFHX1/uO7CkzuPdPmtUMOWRxp9bK1hwTBVFMCNDV8teem5zzSUiXLm
WRDRKSob5Mb1Qy++ueVtjfVaWa8bQ449rBOmoTcBZEVtCuzGYT27T3fUsHBp
zsD/ZtqwU4961+pG3fMnjq3N0HBk1M3j7jwb182D3CuryvySikTOj21rZ9lR
NO/U5w/meFCiZznnRxWt9er1XmPn+nqQQ/VU8arAN8vB+fBgvfZr07IZKtfT
AR1aXbAHqfjP3Vo+r+KqCJPlREPXldtDVQ8G69WY00pF9bGbB9bPd+Lra6Ix
vNivU/DLXwp6dhIXdDHPXmQTMArmZ7XSU+1CqU77oqleTKvx+xdvfKfgkBz9
+HC2G5OeCryw9hMvLtURghXEjh68N5zvxm9DRaK96CDSPllBi3VzZzau6UE+
9asXeU0npEY/q2D0RPEAD/evj7lSsEGnaFlNL6i8A3x4Tqfj7i0ZxRTHi34i
zfN9+EqndXCpjGrh/HbJmj6Q3N0+VCewZDxdMGRT83U+vCXClvkwuc+UGRXL
ZebIjyr08jN3Mg6QP/ixUXz8qB9thv5NJ1pGiDoygLbieqP9WDHaclKtJ+Nh
Aj0AasOVfgTH77A/WS6h461PfBvuk7gv/OgrwhZJ7E8SFLIpP77UKXPskjBR
2MZKie8VQDVKvIT3j/bUrUOCiKqnChMWC8OSsG1ny+N/3idj21lhZAGQbTwu
4fjajIoG/WX2gQDnXYJd9PkqGWd0qtYXBtgPAviV/EqGLlZPdQCndXreXRpA
rRcObpxUXeH76Pfo/9N7TboG8Ej3j4oX91cgqPW1ktBzhDAYP8jOVil8Twl/
Tbqtjd/hB8m/oHD/SCgQNjrcj0V3uudeqa7y/SXuHz+2ijbur4LsVddP4X7y
Gb67WuV+kPCHTmFstg9WvQpNilS8I2xsn4RjAr92PqNPamisV8LbdGGda2p8
jfmW0Fng86HX8JPVGudBwg2P44PZ/bwgXIo0fCHkZsg4Epv9ff07HsNnagSZ
Vxmzfq8dPXrQg/cgGimIJ+gl43FKiMfwn9VB/lyGXqQX/2zkwQ/17xSnioKV
/B1srS3dftlt+FJmCJS+eTKmPylIcHN/h7hvZHTsLSad2/CrvBDzJEN00/K4
i+dJCKmFIrCMr8eJi7vQR/hYZhhdV4sBI4NkDnNhnLCH58MQLjQtLLPPuoz6
5IVRLGz1rgxqt1NOnpdh1Bc2WU8BjbdZTsP3MiM8nxRMpMBOlPZxVtx4PsLz
RYFO8Uo910gKP1wT4XmtgMblfxyo3nj7q+2LIyCbma5gp95dXfs6ICjonRUF
2cZyBeMJGDt60QCO4qqwga0Kmomxc8AOGv9roqC2PqwgoLt+0wl2vHO+vY5Y
tJLT7XV3F5xuaDd8NSsGo+0UjGkmnmxjP4rhlsDqpoLGBKQNZOtrYuyjKtxi
rehkQ1zgUhwDpbmFik9FemNW3Cd8ODvOe4M5p60Q3ZczMI4mVGCV56jVeG5+
HK/TS+W5beV7xUFjdqGKjSuX685kMXw7O4E/Fk3VNxcVQ3UXnDvTgo23MvTI
CfShxUnF/UJuGwu+FX6en4CeZL2gKkq+EwUsw+VL4pUAjUOHChpL68v4fQIz
BW4VKvtJGYz1K8HzUwO1ey0LEsRjwuCzpQay40EWzmOC547GXFvYl5NGnBEa
38PCz00acXM1UDtlW5m/JPeBxnWy8lxJcl9oPF+taE8DNmnELdCYYyv3Lcd1
mHuAje/HcSs07mNz3+S4mUGezzb2O47bMogJxJeN5zrH7RHkOtrxBtXV1Bvk
59pZZxJ0/dwgjtOcsfNeYuoNoiMJtnM/mHqDIJvOcHDdkqDHFARxPy0MDt6r
TL1BLKPvO/j7HLciCGqnsw5Qmg+YekOYSnuxEyT3mKk3BC81qJP9l+P2COEF
AszJ9TT1hkDXK3TyPcz6hozyVnUxV8lKnzP8w8VcmXpDILkfuJgrs74h5trF
XKU4Tojfs39mpri+IVA7wc1cpfjzMM8lN3OVYr1hkE2fcjNXKa5vGLSG3nUz
Vxx3RJg/9/DfHDc3zH3s4fpzXN13W4r166SHueK4u8LYJGxan0cGVxy3IMxz
2MtcpeAkvWHmxsvxUlzfMBI0H7z8uak3grEk2MtcmXojIJvu5mOuUlzfCPrw
XmZwZeqNMB8+vjfHzY3gEWEbt33Mlak3AmrfLn7+nqk3wvPQz1yZeiNYQvuv
n7ky6xsB/bebfn5v6o2AytspwFyZeqNwizTPCTBXpt4oSO6RAHNl1jcKCns9
wByVs94oSP7fJX5uOec7yn4vMVflrDdq7COjJOaqnPVGec+VmKty1hvFYtF4
myXmiuM6opwvie/HcSuixlx1mvsnx82MgWz7tsRccdyWMZANN5SZK47bI4bt
VBeZuSo3uBoRY90y6zT1xir3F4MrU28MZGObZObK1BvjOsrMVTn7VQzGz2+Z
uTL1xri+Mn+/nOsbw2PCBuorzJWpN851VzhPpt648bttmMJcmXrjzIPCXJn1
jYPkbFT4Hhw3N877vsJcmXrjWCHSbFGYK1NvnPlRmCuzvnFjbj+gMlcVHCfO
9U6fG/WLc77T58RHowTrT58b/CX4Hulz43dNgjnTKs+NuiW43ulzY79KVM5V
89zwqQT/vkmfG/t3gvkOVp4b+2QCr1DB0+fm3DbqnT6fTQVMsp+lz2kcjEsa
dakXqjw35kESJPel9DmN+x1J5ix9Xsjzisp9KX3egH5YJivngHluzL8U91X6
3Ph9lGK+0+fG3E1xnPT56+zTxvsI/g9eITvj
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -56.25}, 
                    Offset[{2.5, 0.}, {7.5, -56.25}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 
                    11.250000000000014`}, 
                    Offset[{2.5, 0.}, {7.5, 11.250000000000014`}]}, {{7.5, 
                    33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 56.25}, 
                    Offset[{2.5, 0.}, {7.5, 56.25}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.832683555864066*^9, 3.8326836549013453`*^9, {3.832683700368041*^9, 
   3.832683715990012*^9}, 3.83268868413412*^9},
 CellLabel->
  "Out[935]=",ExpressionUUID->"bb0d994f-ce94-4ef1-a1b4-db8a55c706a1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ConCaveInvasionFinal.csv\>\"", ",", "PIPCC"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.832688711779436*^9, 3.832688732585984*^9}},
 CellLabel->
  "In[937]:=",ExpressionUUID->"5575d1b5-0108-4a45-a068-fbd9584229f2"],

Cell["\<\
Next, we\[CloseCurlyQuote]ll consider mutant invasion when the tradeoff is \
concave up (i.e. convex). First, we\[CloseCurlyQuote]ll consider what trait \
values to consider: \
\>", "Text",
 CellChangeTimes->{{3.8326840191774054`*^9, 
  3.832684126348043*^9}},ExpressionUUID->"a5c3e1c1-1fa7-40b8-8f43-\
0c8e529c3a6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"\[Alpha]", "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "c"}], ")"}]}]}], ")"}], "^", "c"}], ")"}], "/.", 
    
    RowBox[{"{", " ", 
     RowBox[{"c", "\[Rule]", "2"}], "}"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", " ", "Automatic"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<f(\[Alpha])\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.832684119649432*^9, 3.8326841543197517`*^9},
 CellLabel->
  "In[938]:=",ExpressionUUID->"0fb1313a-429d-4539-86cf-c5d8b7892047"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
2H5tbBBYdi1SmmN8ofY/78+12g==
       "]]},
     Annotation[#, "Charting`Private`Tag$4666074#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Alpha]\"", TraditionalForm], 
    FormBox["\"f(\[Alpha])\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.999714306122449}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.832688579268238*^9, 3.832760207893134*^9},
 CellLabel->
  "Out[938]=",ExpressionUUID->"5562d7e6-267f-4ae8-921f-a65135ed7c42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"difference2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"pi1", "+", 
         RowBox[{"pi1", "'"}]}], ")"}], "/", "2"}], ")"}], "-", "pig"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", "0.5"}], ",", 
      RowBox[{"c", "\[Rule]", " ", "2"}], ",", " ", 
      RowBox[{"\[Alpha]g", "\[Rule]", " ", "0.3"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"difference2", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", " ", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Pi]\), \(g\)]\)\>\"", ",", 
      "\"\<Specialist \!\(\*OverscriptBox[\(\[Pi]\), \(_\)]\)\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.832684151847913*^9, 3.832684156759386*^9}, {
  3.8327602136088743`*^9, 3.8327602137104597`*^9}, {3.8327603762921762`*^9, 
  3.8327603875452347`*^9}},
 CellLabel->
  "In[948]:=",ExpressionUUID->"3fbc541f-8b8b-4467-a41c-027f62df78c5"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
5mY=
       "]]},
     Annotation[#, "Charting`Private`Tag$4666328#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Pi]\\), \\(g\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"Specialist \\!\\(\\*OverscriptBox[\\(\[Pi]\\), \\(_\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-0.02499999691553842, 0.09999999489795922}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8326885793114767`*^9, {3.832760210695218*^9, 3.832760241547339*^9}, {
   3.832760384699431*^9, 3.83276038831155*^9}},
 CellLabel->
  "Out[949]=",ExpressionUUID->"423d0627-099f-49ed-b9fb-efca9d287e7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"difference2", "\[Equal]", "0"}], ",", "\[Alpha]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.832760235956203*^9},
 CellLabel->
  "In[945]:=",ExpressionUUID->"44eec0df-bd60-48a4-ba24-df4a03307e08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.07639320225002103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.523606797749979`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.832760243033177*^9},
 CellLabel->
  "Out[945]=",ExpressionUUID->"21727200-47c4-4735-a39e-1e8ea35d8e60"]
}, Open  ]],

Cell["\<\
So we\[CloseCurlyQuote]ll restrict \[Alpha] to be greater than 0.523. We won\
\[CloseCurlyQuote]t test the lower range of this domain because in this \
region hosts would simply be evolving to specialize on their mismatched \
symbiont, thus its dynamics are the same. \
\>", "Text",
 CellChangeTimes->{{3.8327602453087063`*^9, 3.8327602558236933`*^9}, {
  3.832760303831211*^9, 
  3.8327603506558027`*^9}},ExpressionUUID->"30153f6a-426b-4760-bca6-\
1048deb1eef2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CVPeriods", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]r", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Establish", " ", "a", " ", "Resident", " ", 
         RowBox[{"Population", ":"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"System", "[", 
            RowBox[{
            "\[Alpha]r", ",", "0", ",", "0.3", ",", "2", ",", "0.5", ",", 
             "0.25", ",", "0.28", ",", "0.24", ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "v1", ",", "v2", ",", "m1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "30000"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", 
            RowBox[{"{", "\"\<StiffnessSwitching\>\"", "}"}]}], ",", 
           RowBox[{"MaxSteps", "\[Rule]", 
            RowBox[{"10", "^", "6"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"uans", ",", "v1ans", ",", "v2ans", ",", "m1ans"}], "}"}], 
         "=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], ",", 
            RowBox[{"v1", "[", "t", "]"}], ",", 
            RowBox[{"v2", "[", "t", "]"}], ",", 
            RowBox[{"m1", "[", "t", "]"}]}], "}"}], "  ", "/.", 
          RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"t", "-", "8000"}], ",", "v1ans"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "8000", ",", "9100", ",", "0.1"}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Fit", " ", "a", " ", "sinusoidal", " ", "function", " ", "to", " ", 
          "the", " ", "cycle", " ", "of", " ", "the", " ", "resident", " ", 
          "host", " ", "and", " ", "determine", " ", "its", " ", 
          RowBox[{"period", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Parameters", " ", "=", 
         RowBox[{"FindFit", "[", 
          RowBox[{"data", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{"b", "*", 
                RowBox[{"(", 
                 RowBox[{"t", "+", "c"}], ")"}]}], "]"}]}], "+", "d"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "t", ",",
            " ", 
           RowBox[{"Method", "\[Rule]", "\"\<NMinimize\>\""}]}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"T1", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "*", 
             RowBox[{"\[Pi]", "/", "b"}]}], ")"}], "/.", 
           RowBox[{"Parameters", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "T1"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]r", ",", "0.55", ",", "0.99", ",", "0.01"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.832684208387311*^9, 3.832684210745599*^9}, {
  3.832684307854415*^9, 3.832684316775085*^9}, {3.832760368556719*^9, 
  3.832760368650577*^9}, {3.83276041363137*^9, 3.8327604156643353`*^9}, {
  3.832760483231868*^9, 3.832760483850882*^9}},
 CellLabel->
  "In[951]:=",ExpressionUUID->"7b57c01a-fb54-457d-a42a-be44531c8cad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"CVPeriods", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<Period\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.832760493371686*^9, {3.832760681133285*^9, 3.832760725441774*^9}},
 CellLabel->
  "In[954]:=",ExpressionUUID->"c065fd9d-9de1-46d8-a46f-0eb0ac326a39"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwt0XtIE1AYBfClEWWTbEzER5pQlJEKrsBw2/m2OTfTDBUSYqAMtSI0hQhd
AzNTZlCGWaSDIiwEiYk4zQgpDEt6GAmmKUV7OvcSEpegWd51D1zuf4dz7y9V
f6mkKkIgEKRvHXb3dLPY0Ga9gprHheQvHk1u9dnQEaj7sz5fQPKo2d46mR2/
5yMxtL+A7oyvHtZ12NGVoO9R158ku0Fs0djsqG2PWQ19yKdjEhYHqoMnyp9n
5lObjxU6INRvFqybtTS31RY164A3W/jNtkdLR3QdW41OzFQYafOmhq6yOoMT
LT+2zTwVaujTRxYnSiPiX5Z35VFKKyt0wSM44P6Smkf1MjbQhYW0sfctVjW9
YfPGXRgoM3eJC9UUy+rEbkRbAiqJJ5fOVbO4kba3schsyqUXyazQjebz2tnN
o7m0mz03ahHxgaSB5BkVhefpFjHZvPL29TUVhessi5jYJ16zZKpIEI4HHlvD
wWGbkkrY9xV70JQgPzN4X0lP2HN7PbAOtYcqipQUYvNWPZiLMx237lSSltVp
ltDXN5JinFDQf48l6G8/q3pwQ8E9lhAxLMpzqRXcwwvTdLrk1C4F9/Aiq7L7
7uAUcQ8vOq+XKdbuEffwYSHr9Ksd5cQ9fMj+9TXycxpxDx9GOiNHa/3gHn48
nI5OPGsCGcMefsS0ZG1IDoGmwh5+NDkbEhyTcu4RQKfku1ddI+ceAZRWZ7ik
Yjn3CMB4ayXUPybjHkG0CgtjGy/IuEcQ27PNlaY4GfcIQhv8+2jynZR7LEO4
YUhKNEi5xzJ0Y6KfFzOk3GMZl1NyRP3OHPoHijFVsQ==
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Alpha]\"", TraditionalForm], 
    FormBox["\"Period\"", TraditionalForm]},
  AxesOrigin->{0.5408333333333336, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5408333333333336, 0.99}, {0, 57.26114648147727}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.832760676681185*^9, 3.832760681707676*^9}, 
   3.832760727784609*^9},
 CellLabel->
  "Out[954]=",ExpressionUUID->"b50452bc-56ad-417e-82e4-c42fed9a2426"]
}, Open  ]],

Cell["\<\
Because this plot of discontinuities looks good to go, we know that our range \
is reasonable. \
\>", "Text",
 CellChangeTimes->{{3.832682926544709*^9, 3.832682962233087*^9}, {
  3.832683372189616*^9, 
  3.832683407953554*^9}},ExpressionUUID->"a36f9de3-a7f6-4839-a557-\
61042ba0cfd5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Now", " ", "for", " ", "the", " ", "concave", " ", "down", " ", 
    "tradeoff", " ", 
    RowBox[{"function", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PIPCV", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Alpha]r", ",", "\[Alpha]m", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Establish", " ", "a", " ", "Resident", " ", "Population", " ", 
          "with", " ", "arbitrary", " ", "initial", " ", 
          RowBox[{"frequencies", ":"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sol", "=", 
          RowBox[{"NDSolve", "[", 
           RowBox[{
            RowBox[{"System", "[", 
             RowBox[{
             "\[Alpha]r", ",", "0", ",", "0.3", ",", "2", ",", "0.5", ",", 
              "0.25", ",", "0.28", ",", "0.24", ",", "0"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"u", ",", "v1", ",", "v2", ",", "m1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "30000"}], "}"}], ",", 
            RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", "\"\<StiffnessSwitching\>\"", "}"}]}], ",", 
            RowBox[{"MaxSteps", "\[Rule]", 
             RowBox[{"10", "^", "6"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"uans", ",", "v1ans", ",", "v2ans", ",", "m1ans"}], "}"}], 
          "=", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"u", "[", "t", "]"}], ",", 
             RowBox[{"v1", "[", "t", "]"}], ",", 
             RowBox[{"v2", "[", "t", "]"}], ",", 
             RowBox[{"m1", "[", "t", "]"}]}], "}"}], "  ", "/.", 
           RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"data", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"t", "-", "8000"}], ",", "v1ans"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "8000", ",", "9100", ",", "0.1"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Fit", " ", "NDSolve", " ", "output", " ", "to", " ", "sin", " ", 
           "function", " ", "and", " ", "find", " ", "the", " ", "period", 
           " ", "for", " ", "the", " ", "resident", " ", 
           RowBox[{"population", ":"}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Parameters", " ", "=", 
          RowBox[{"FindFit", "[", 
           RowBox[{"data", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"a", "*", 
               RowBox[{"Sin", "[", 
                RowBox[{"b", "*", 
                 RowBox[{"(", 
                  RowBox[{"t", "+", "c"}], ")"}]}], "]"}]}], "+", "d"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "t", 
            ",", " ", 
            RowBox[{"Method", "\[Rule]", "\"\<NMinimize\>\""}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"T1", "=", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{"\[Pi]", "/", "b"}]}], ")"}], "/.", 
            RowBox[{"Parameters", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "T1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Introduce", " ", "mutant", " ", "invaders", " ", "at", " ", "each", 
          " ", "0.1", "*", "T1", " ", "of", " ", "the", " ", 
          RowBox[{"cycle", ":"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SampleInvasion", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"st", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"uf", ",", " ", "v1f", ",", "v2f", ",", "m1f"}], 
                 "}"}], "=", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"u", "[", "st", "]"}], ",", 
                   RowBox[{"v1", "[", "st", "]"}], ",", 
                   RowBox[{"v2", "[", "st", "]"}], ",", 
                   RowBox[{"m1", "[", "st", "]"}]}], "}"}], "/.", 
                 RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", 
               "                   ", 
               RowBox[{"sol2", "=", 
                RowBox[{"NDSolve", "[", 
                 RowBox[{
                  RowBox[{"System", "[", 
                   RowBox[{
                   "\[Alpha]r", ",", "\[Alpha]m", ",", "0.3", ",", "2", ",", 
                    "0.5", ",", "uf", ",", "v1f", ",", "v2f", ",", "0.05"}], 
                   "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"u", ",", "v1", ",", "v2", ",", "m1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"t", ",", "0", ",", 
                    RowBox[{"7", "*", "T1"}]}], "}"}], ",", 
                  RowBox[{"Method", "\[Rule]", 
                   RowBox[{"{", "\"\<StiffnessSwitching\>\"", "}"}]}], ",", 
                  RowBox[{"MaxSteps", "\[Rule]", 
                   RowBox[{"10", "^", "6"}]}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"uans", ",", "v1ans", ",", "v2ans", ",", "m1ans"}], 
                 "}"}], "=", " ", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"u", "[", "t", "]"}], ",", 
                   RowBox[{"v1", "[", "t", "]"}], ",", 
                   RowBox[{"v2", "[", "t", "]"}], ",", 
                   RowBox[{"m1", "[", "t", "]"}]}], "}"}], "  ", "/.", 
                 RowBox[{"Flatten", "[", "sol2", "]"}]}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "Average", " ", "mutant", " ", "frequency", " ", "several", 
                 " ", "Periods", " ", "after", " ", "they", " ", 
                 RowBox[{"invade", ":"}]}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"m1avg", "=", 
                RowBox[{"FindAverage", "[", 
                 RowBox[{"m1ans", ",", 
                  RowBox[{"4", "*", "T1"}], ",", 
                  RowBox[{"7", "*", "T1"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"m1avg", ">", "0.05"}], ",", "1", ",", "0"}], 
                "]"}]}]}], 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
               "If", " ", "mutant", " ", "average", " ", "frequency", " ", 
                "has", " ", "increased", " ", "from", " ", "its", " ", 
                "initial", " ", "low", " ", "frequency"}], ",", " ", 
               RowBox[{
               "we", " ", "deem", " ", "this", " ", "a", " ", "successful", 
                " ", "invasion"}]}], "*)"}], "}"}], "\[IndentingNewLine]", 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"st", ",", "8000", ",", 
              RowBox[{"8000", "+", "T1"}], ",", 
              RowBox[{"0.01", "*", "T1"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Determine", " ", "if", " ", "on", " ", "average", " ", "the", " ", 
           "mutants", " ", "successfully", " ", 
           RowBox[{"Invade", ":"}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"FlattenedSample", "=", 
          RowBox[{"Flatten", "[", "SampleInvasion", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AvgResult", "=", 
          RowBox[{"Mean", "[", 
           RowBox[{"Take", "[", 
            RowBox[{"FlattenedSample", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "This", " ", "is", " ", "the", " ", "average", " ", "frequency", 
           " ", "with", " ", "which", " ", "the", " ", "mutant", " ", 
           "successfully", " ", 
           RowBox[{"invaded", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         "AvgResult"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Finally", ",", " ", 
          RowBox[{
          "this", " ", "is", " ", "a", " ", "bindary", " ", "definition", " ",
            "of", " ", "successful", " ", 
           RowBox[{"invasion", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"AvgResult", ">", "0.5"}], ",", "1", ",", "0"}], "]"}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]r", ",", "0.55", ",", "0.99", ",", "0.01"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]m", ",", "0.55", ",", "0.99", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.832684252299981*^9, 3.832684263237915*^9}, 
   3.8326843407257347`*^9, {3.832760371435726*^9, 3.832760371621319*^9}, {
   3.8327607444087057`*^9, 3.832760772991682*^9}},
 CellLabel->
  "In[955]:=",ExpressionUUID->"cf167ddf-ae54-413b-8ae2-a6ff17caab6e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ConvexInvasionFinal.csv\>\"", ",", "PIPCV"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PIPCVF", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"PIPCV", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotCV", "=", 
   RowBox[{"PIPCVF", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"PlotCV", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", "  ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(r\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(m\)]\)\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.832762717177862*^9, 3.832762788154776*^9}},
 CellLabel->
  "In[960]:=",ExpressionUUID->"bdd19863-2142-4457-b05f-5acbefb3bd8b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJx13S+wINtVRvEpDFUTG2woHA8LNiCDTfRTVCWRgE2wwSYWbNDRYIMFbLBJ
7gv06TndKmhyp7LuqfPrumO61hO3ZmZ9r+f82Xv3n/zN337nu3/w4cOH4w8/
fHh9/vM/vf765V/5/PTtf/3Gj87Ff/nxFz/9u2/+6o1/8vPf/umXP178qx98
/Wff+uXiv/jz11+/fuN/PF9/4OL//t1P+/iLxV98+ePf/cSXN/7h64/7weL/
/I/XX4v/+EevP/CrN/77b77+Bhf/++tv7+eL/+j1x339N2/8/e+9/lr8b994
/YGLv/b6x/34P2/8+bf35eLPP+5niz98/vW/b/yd17++by/+l9c/7k8X/9/r
b++3i//69cd968DDgY8DHwMfAx8DHyc+Tnws/rPPf+BPb/wPn30s/q/PPj7h
Y+Jj4mPi48LHhY/Fn/+4H2983Pi4H7mNfZbnuDzH5Tkuz3F5jstzXJ7j8hyX
57g8x+U5Ls9xeY7Lc1ye4/Icl+e4PMflOS7PcXmOy3NcnncfBx4OfAx8DHwM
fJz4OPGxuDzH5Tkuz7uPiY+Jj4mPCx8XPhaX593HjY/78d41t7HP8hyX57g8
x+U5Ls9xeY7Lc1ye4/Icl+e4PMflOS7PcXmOy3NcnuPyHJfnuDzH5Tkuz3F5
3n0c+DjwMPAx8DHwceLjxMfi8hyX57g87z4mPiY+Jj4ufFz4WFyedx83Pu7H
usH3rrmNfZbnuDzH5Tkuz3F5jstzXJ7j8hyX57g8x+U5Ls9xeY7Lc1ye4/Ic
l+e4PMflOS7PcXnefRz4OPAx8DDwMfBx4uPEx+LyHJfnuDzvPiY+Jj4mPi58
XPhYXJ53Hzc+7se613WD711zG/ssz3F5jstzXJ7j8hyX57g8x+U5Ls9xeY7L
c1ye4/Icl+e4PMflOS7PcXmOy3NcnncfBz4OfAx8DDwMfJz4OPGxuDzH5Tku
z7uPiY+Jj4mPCx8XPhaX593HjY/7sW9z3eu6wfeuuY19lue4PMflOS7PcXmO
y3NcnuPyHJfnuDzH5Tkuz3F5jstzXJ7j8hyX57g8x+V593Hg48DHwMfAx8DD
iY8TH4vLc1ye4/K8+5j4mPiY+LjwceFjcXnefdz4uB/nDu7bXPe6bvC9a25j
n+U5Ls9xeY7Lc1ye4/Icl+e4PMflOS7PcXmOy3NcnuPyHJfnuDzH5Tkuz7uP
Ax8HPgY+Bj4GPk48nPhYXJ7j8hyX593HxMfEx8THhY8LH4vL8+7jxsf9ODfz
3MF9m+te1w2+d81t7LM8x+U5Ls9xeY7Lc1ye4/Icl+e4PMflOS7PcXmOy3Nc
nuPyHJfnuDzvPg58HPgY+Bj4GPg48XHiYXF5jstzXJ53HxMfEx8THxc+Lnws
Ls+7jxsf9+9/3y+cO75wbvPCvveFfcML664X/t164f/7F/7eXt7yHJfnuDzH
5Tkuz3F5jstzXJ7j8hyX57g8x+U5Ls9xeY7Lc1ye4/K8+zjwceBj4GPgY+Dj
xMeJj8XlOS7PcXnefUx8THxMfFz4uPCxuDzvPm583I97C899PTfz3MF9m+te
1w2+d+PyHPssz3F5jstzXJ7j8hyX57g8x+U5Ls9xeY7Lc1ye4/Icl+e4PO8+
Dnwc+Bj4GPgY+DjxceJjcXmOy3NcnncfEx8THxMfFz4ufCwuz7uPGx/3497N
ewvPfT0389zBfZvrXtcNcXk2t7HP8hyX57g8x+U5Ls9xeY7Lc1ye4/Icl+e4
PMflOS7PcXnefRz4OPAx8DHwMfBx4uPEx+LyHJfnuDzvPiY+Jj4mPi58XPhY
XJ53Hzc+7se9sfdu3lt47uu5mecO7ttc98ZfbP9ufcX/91/x9/bV41me4/Ic
l+e4PMflOS7PcXmOy3NcnuPyHJfnuDzH5Xn3ceDjwMfAx8DHwMeJjxMfi8tz
XJ7j8rx7mPiY+Jj4uPBx4WNxed593Pi4H3UP3ht77+a9hee+npt57uC+Lf5i
W3c91xG+h82xz/Icl+e4PMflOS7PcXmOy3NcnuPyHJfnuDzH5Xn3ceDjwMfA
x8DHwMeJjxMfi8tzXJ7j8rz7mHiY+Jj4uPBx4WNxed593Pi4H3U71j14b+y9
m/cWnvt6bua5Q1yeXfe6bvC9a25jn+U5Ls9xeY7Lc1ye4/Icl+e4PMflOS7P
cXnefRz4OPAx8DHwMfBx4uPEx+LyHJfnuDzvPiY+Jh4mPi58XPhYXJ53Hzc+
7kfdmXU71j14b+y9m/cWnvt6bhaXZ/dtrntdN/jeNbexz/Icl+e4PMflOS7P
cXmOy3NcnuPyHJfn3ceBjwMfAx8DHwMfJz5OfCwuz3F5jsvz7mPiY+Jj4uHC
x4WPxeV593Hj437UTVp3Zt2OdQ/eG3vv5r2F575xefbcwX2b617XDb53zW3s
szzH5Tkuz3F5jstzXJ7j8hyX57g87z4OfBz4GPgY+Bj4OPFx4mNxeY7Lc1ye
dx8THxMfEx8XHi58LC7Pu48bH/ej7te6SevOrNux7sF7Y+/dvLeIy7PnZp47
uG9z3eu6wfeuuY19lue4PMflOS7PcXmOy3NcnuPyvPs48HHgY+Bj4GPg48TH
iY/F5Tkuz3F53n1MfEx8THxc+LjwsLg87z5ufNyPunXrfq2btO7Muh3rHrw3
9t4tLs+e+3pu5rmD+zbXva4bfO+a29hneY7Lc1ye4/Icl+e4PMflefdx4OPA
x8DHwMfAx4mPEx+Ly3NcnuPyvPuY+Jj4mPi48HHhY3F53n3c+LgffRexdezW
AVtHaR2adTzWQXiPXJ69t/Dc13Mzzx3ct7nudd3ge9fcxj7Lc1ye4/Icl+e4
PMflefdx4OPAx8DHwMfAx4mPEx+Ly3NcnuPyvPuY+Jj4mPi48HHhY3F53j3c
+LgffUOxfRjWsVsHbB2ldWjW8VgHUZ5j7+G8x/Ac2HM0zyHcx7kOdh3he9gc
+yzPcXmOy3NcnuPyvPs48HHgY+Bj4GPg48THiY/F5Tkuz3F53n1MfEx8THxc
+Ljwsbg87z5uPNyPvjf7huy7sG7dul/rJq07s24nLs/eG3vv5r2F576em3nu
4L7Nda/rBt+75jb2WZ7j8hyX57g87z4OfBz4GPgY+Bj4OPFx4mNxeY7Lc1ye
dx8THxMfEx8XPi58LC7Pu48bH/ejb9O+N/uG7Luwbt26X+smrTuLy7N1D94b
e+/mvYXnvp6bee7gvs11r+sG37vmNvZZnuPyHJfn3ceBjwMfAx8DHwMfJz5O
fCwuz3F5jsvz7mPiY+Jj4uPCx4WPxeV593Hj4370Hdu3ad+bfUP2XVi3bt2v
dZNxebZux7oH7429d/PewnNfz808d3Df5rrXdYPvXXMb+yzPcXnefRz4OPAx
8DHwMfBx4uPEx+LyHJfnuDzvPiY+Jj4mPi58XPhYXJ53Hzc+7kffvH3H9m3a
92bfkH0X1q1b9xuXZ+vOrNux7sF7Y+/dvLfw3NdzM88d3Le57nXd4HvX3MY+
y/Pu48DHgY+Bj4GPgY8THyc+FpfnuDzH5Xn3MfEx8THxceHjwsfi8rz7uPFx
P+Y+2Ddv37F9m/a92Tdk34V163F5tm7SujPrdqx78N7YezfvLTz39dzMcwf3
ba57XTf43jW3sc/yvPs48DHwMfAx8HHi48TH4vIcl+e4PO8+Jj4mPiY+Lnxc
+FhcnncfNz7ut78355g4B8I+evuQ7eO0D84+Ivsw9nkyzzpg6yitQ7OOxzoI
75G9h/Mew3Ngz9E8h3Af5zrYdYTvYXPsc58ns/K8+xj4GPg48XHiY/E+T+Zg
nszBPJmV593HxMfEx4WPCx+Ly/Pu48bHzd/Tc26Jcx/sm7fv2L5N+97sG4r3
eTLPOnbrgK2jtA7NOh7rILxH9h7OewzPgT1H8xzCfZzrYNcRvofNsc99nszK
8+5j4OPEx4mPxfs8mYN5MgfzZFaedx8THxMfFz4ufCwuz7uPGx83/58/5+44
t8S5D/bN23ds36Z9b/E+T2b1VVi3bt2vdZPWnVm3Y92D98beu3lv4bmv52ae
O7hvc93rusH3rrndfQx8DHwMfJz4OPGxeJ8nM5gnM5gnM97yvPuY+Jj4uPBx
4WNxed593Pi4+XfqOTfKuTvOLXHug33z9h3btxnv82SefUT2YVjHbh2wdZTW
oVnHYx2E98jl2XsLz309N/PcwX2b617XDb53ze3uY+Bj4OPEx4mPxfs8mcE8
mcE8mZXn3cfEx8THhY8LH4vL8+7jxsfNOus598y5Uc7dcW6Jcx/sm7fvON7n
yTz74Owjsg/DOnbrgK2jtA7NOh7rIMqz927eW3ju67mZ5w7u21z3um7wvWtu
dx8DHyc+Tnws3ufJDObJDObJrDzvPiY+Jj4ufFz4WFyedx83Pm72Cc+5fc49
c26Uc3ecW+LcB/vm432ezOrLtO/NviH7Lqxbt+7Xuknrzqzbse7Be2Pv3by3
8NzXczPPHdy3ue513eB719zuPk58nPhYvM+TOZknczJP5nzL8+5j4mPi48LH
hY/F5Xn3cePjZp/7nDvp3D7nnjk3yrk7zi1x7kO8z5N59iHbx2kfnH1E9mFY
x24dsHWU1qGVZ+sevDf23s17C899PTfz3MF9m+te1w2+d83t7uPEx+J9nszJ
PJmTeTIrz7uPiY+JjwsfFz4Wl+fdx42Pm3Oa59xU5046t8+5Z86Ncu6Oc0vi
fZ7Ms4/ePmT7OO2Ds4/IPgzr2K0Dto6yPFu3Y92D98beu3lv4bmv52aeO7hv
c93rusH3rrndfaznPk/mZJ7MyTyZlefdx8THxMeFjwsfi8vz7uPGx80543Pu
r3NTnTvp3D7nnjk3yrk78T5PZs11sG/evmP7Nu17s2/Ivgvr1q37tW7SujPr
dqx78N7YezfvLTz39dzMcwf3ba57XTf43jW3+xyZ9dznyXxinsyntzzvPiY+
Jj4ufFz4WFyedx83Pu7H3HXnVjv317mpzp10bp9zz5wbFZdn55Y498G+efuO
7du0782+IfsurFu37te6SevOrNux7sF7Y+/dvLfw3NdzM88d3Le57nXd4HvX
3MY+y/PuY+Jj4mPi48LHhY/F5Xn3cePjfnw3wLnrzq127q9zU5076dw+557F
5dm5O84tce6DffP2Hdu3ad+bfUP2XVi3bt2vdZPWnVm3Y92D98beu3lv4bmv
52aeO7hvc93rusH3rrmNfZbn3cfEx8THhY8LH4vL8+7jxsfNPeXzuwHOXXdu
tXN/nZvq3Enn9sX7PJnJPJnJPJk1l8S5D/bN23ds36Z9b/YN2Xdh3bp1v9ZN
Wndm3Y51D94be+/mvYXnvp6bee7gvs11r+sG37vmdvcx8THxMfFx4ePCx+Ly
vPu48XFzz/787oXfDXDuunOrnfvr3FTnTsb7PJnnHDTnSDmHxzkmzoGwj94+
ZPs47YMrz/ZdWLdu3a91k9adWbdj3YP3xt67eW/hua/nZp47uG9z3eu6wfeu
ud19THxMfFz4uPCxuDzvPm583NSJPL/b4ncv/G6Ac9edW+3cX+emxvs8mecc
P+egOUfKOTzOMXEOhH309iHbx1me7Ruy78K6det+rZu07sy6HesevDf23s17
C899PTfz3MF9m+te1w2+d83t7mPi48LHhY/F5Xn3cePjps7p+d0hv9vidy/8
boBz151b7dzfeJ8nczFP5mKezJpr5two5+44t8S5D/bN23ds36Z9b/YN2Xdh
3bp1v9ZNWndm3Y51D94be+/mvYXnvp6bee7gvs11r+sG37vmdvdx4ePCx+Ly
vPu48XFTp/f8bpbfHfK7LX73wu8GOHfdudXxPk/mOUfVOZTO8XMOmnOknMPj
HBPnQNhHX57t27Tvzb4h+y6sW7fu17pJ686s27HuwXtj7928t/Dc13Mzzx3c
t7nudd3ge9fc7j4ufCwuz7uPGx83dabP77753Sy/O+R3W/zuhd8NcO56vM+T
ec4Bdo6qcyid4+ccNOdIOYfHOSbOgSjP9h3bt2nfm31D9l1Yt27dr3WT1p1Z
t2Pdg/fG3rt5b+G5r+dmnju4b3Pd67rB96653X2sZ3nefdz4aB7H+s5mvM+T
Wd95i/d5Mus7Q/E+T2Z95yLe58nczJO5mSdzM09mzUmN93kya07f17Z/p37z
xvs8mTVnJ97nyaw5D3F5jstzvPfVrj63eO/rWn0Wu48DHwc+Bj4GPgY+Tnyc
+Fi83yutc954P9dc5wy7j4mPiY8LHxc+Fn/cvNxved59rP++z5N5fofT7xj6
HTi/o+V3iPyOi9/B2OfJPOewO8faOcDOUXUOpXP8nIPmHCnn8JTnuDzH9tHb
h2wfp31w9hHZh2Edu3XA1lFah2Ydj3UQ3iN7D+c9hufAnqN5DuE+znWw6wjf
wx/Jsc/y3HOfJ/P+d2Tj975jGL/3Ha3Y77js82Te/47Afm7+nGO9n9s856ju
+4bnHL/9363nHKn97+05xyR+r48+fq+Pc/fx7CPafTzr2HcfzzrK3cezjid+
7x45fu8eY/fxPEfbfTz3ca6D44/vvIfN8f8DdRx69A==
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
VXurDPf9YFrhK1fFN21XBpvRT94vlakVpqc1+Kq+aTUT9SpgVJe+dVZ0ZjqQ
a0P+IZ6pEhx3+UnNK67m7BHftCpfmpaOH8XX2tbZY77psDi91fykvu+G4xG+
X6hz+TXYS1H28zg8j6XwFmdWW/ws9EnTJehp56w9zyhdZqVeE7uHnhD3IHsv
ynxhatEnzUgjMT95vzxOPZufvDtq+6atEvCKsw652mBq4Xdgb5o9x1kPZ0/w
XVTr6Gyks/XORpHvyF6k57rO6rEqls6lQemqM9hO4BWXIe6EXxpsGerdma9z
rztImq4Pd72UOBfxUGfDfLuzZjjrynzxSEvdnI1w9oxvulddOpaeG1FrjD+c
uAu4UPNd4XnWN92Lqymx3k1DehuRb0LtGfzG8HRjT8/zjdvwnBXY73jyqlfi
PfTgvUu/0vRz+MpJx6N90+YT9IT3hfqkoZ6sPfB7+abdpuy9GRxj4GnBjNH4
zYlHMrMZHOEdIM2O41mU6+2bxpUfS60Pud5geuFrZivmtsZXT1Xw6uvrm2ar
UmtFXzVq/VJwVZn3PPupRl36fpJV8Qy+8XTy/X3TfPUUrHQzydlk3/T9KN9n
oG+aHEBeuQnYRN/uhRrUa8LzOFw1mBX2TgDfn1p1OB4nXwsOzZRWn/JNx9rT
FN80O4haLWZNJj/VN/1OoX+Qn9T8ILimgBG+Iz3TnA1mjjB18cOc4hzgO9Az
iT1PBDcEnLhe8E3retediaXbp33T8QvkhZGGVvumwXrwCDcUrPxXnK3yTfN7
nM3kew7xk/fQCHjW8J07M78BPEPpUW9X8MJKr9KRtDjbN70KM4v6WjBaQ313
5Dm1/3Xk1/KOsvPOZsLVFd7ucMqfw8xu5FTTXbvBN72NhHc9/rPE0l6o7x7w
zHV2wdl/zi6SnwtGen7V2UZn88ip9rpvunqNmc8xdzS+enqBV99837Tbix71
jiGn2ospuF7Mew3MaOIQL6y0u8U3HW32Tb+bfNPwOPi1xwXOFvqm83HkNmGb
waveD8wK387LEHKqLYKnD7M3M/d5MKpL+y+xLoKrD30T2OtW3zQbYieQ0/mX
thc7W8I6AOzLzpb6pj1ht4F/wzf9bMMmkZ+M/wYzFsOj/oHwDWBOGA8knsBz
aa/bnb3pm9aX8170Tnb4pl3VpPNlvmn3TfJT2MN2/KfY/zJ4BuNPg2sntss3
TS+lZxCYneSnwb+DfQyGb28iEnnL2RcJ+27a50r4ptMr7Q8lP4P8bmdnnZ3z
7V6QTqWBtXz/lX7yd4ShcOyhfzf+W75pVOssfHFchOc2tT3wn6e+Gn8NfcLs
9U2r7/mmJ+lSOt8HZi+xMJfAac46Zq3Hv0TP23Ds5nl30XMZ/kvgL4Kd6yfv
AsX7nV3xTceXsVfpnUtdej3Aqliaet/ZB77pOKxfdXbNNz1vhOcK/lXy7/im
rfAuUHyQvtfBHCAfYlRfwMzXwR4idxD+K8zYBOZ9MId90/ZC8IfY93Xf9L2J
eDPYRX7yLlB8xLdzLp3prH/om26ug1Fd+ttK7SNqW+Dciq/aUbDqWYx/lPf0
HO9c8THqW+GT7m+wh4990/Bx3zT9MXlhTvqmuaVgjoE7AfY4zyCuT7Cbvmla
Ojjj2/nfTu1N/DfoWQrPCeykn9S8/FPOTsMlfb7rm3aVl76l6U/xtd5i3cE+
loEN76HlcLwLb6j50+z1Jr3a5+e+aeAzeLXuYtYtfJ2PWNT9GSlq9d3kv/Ht
zP3PtztC70B3RhaH+8I3fcv2MMeLmq70f7C/Bx7lpfl/ffv5eh5fOXFI19L/
387+8e0+2kvtS/i/APMf3BfZxys8b4S5F3kOnflo1PR+iX195davfdO2THfE
V8z6kvg9sD4mjsvkffwo/Jfp30f/ft7TAebs95P3yNfU9J6vsMd3wOod/8b3
1Vn51jftvgNe30S6/t7ZD75pT7mAvOJD1L+hP7w75H/nm46l+4TrSeMsbdS0
eJD6IWrCBHDLv0Zv2Cc/Db3Sn7SbLmq61d5+9I1b+evUPiT3k28a/hHsET95
j/xI7SN67gD/s29aPUb9JzCqf0w+/H1BufTkv+eZvoPjuJ/UvOJfnP3qm1bl
S9PScYao+VozOrszajq8Se8vflLfJ+D4le8X6lz+777tRZzaTyZ47kzhvcnc
jPin6JOmb9Fzl7O7o6Yh6fI09T+wd+kJcZ+x9xvMF+ZP+j5iL9v85P2iGaqf
8ZN3x1++aesWvOL8m9xfYP7Ez8zeNFt/xxT+96uiLi4WTer5LBzSb3GXfyBq
d8g93CP/klc9G1rN6tYaYLLQUyJqWhfuAXzlPPycznJF7dx/CYe4xKE4vFMU
q/YgvSXQu+KS8EhLOYhLcRdkj5qOpWefWpRej/5s4ELNyxdP6ajpvhT3rOIy
4L7iueNgSoOLwf8/9qI9PRS1b5ye51RO+32YvOo693oPuZ2VjZp+pely+GXR
c3nuglz0hPeF+qShe1kVy88TNe3G2XsARwV40jCjPH6CuAwzAzjCO0CarcSz
KJc3ahpXviK1fOTyglF/XmamY+4d+Or5mXtCffmjplnlKoKpQE61+6JJnDCV
eH/pwagufRdgVVybb1wravmCUdP8b34SK91UdVYtavrOwPfRf7eRJguRV64y
ViVq98Lv1P9Af5ngUl6zwt7K4AtS0/wq4JX/kztCM6XVIlHToPb0SNQ0W5ja
n8yqRr561LT9CHsuHE1qXn4RapnBP+qsbdQ0X5Q5wvyD7pWrz3nUWctCb3We
LRPPX4Oa8gOc1ST3uLN2UdOpctKuNPwANeWz811q01MzmtR5Tb5X+6hpVFwl
iTtE7e55DL6SYNqDexD+rHCEM+owsyQcpXg2abFe1PQqTF3qHcFoDfX9AHP1
DJ3Iqy5thPqrA1d2eHPCWY93mot6XWqdnXWJmt7KwNsZvzSx3vFt7u8y1IVv
4ay5s+f4Vg2itgfpuauzbs4aklPtiajpqjszy8FTHl89ecCrr1HUtKuczm8v
Z73JqdY4BZeHeeKuAGc3/O7MrQCHdNQzavqtyL6aOGsaNW3L8pHLy5x84IXt
gYnjIfI98HvC/xD9+ejXXdAsanpvShzeKU2p6dtO5Ps2B9uMWPlJPH+fqJ1/
vX/puyDvpzd5aU46bAVPi2jyLpCv/xbcN2paElc14n7gCtBXDUxfcFXhLwTH
/cx9mPeqea2ZH2pbWi9Cvo2zJ6OmV90H/fGfZPaT5FvTE94dbVK4ihJL7zXg
qEa/epc4G0h9vLMJUbtrajCrPzVhavJOJ0dNu3P4vrOdTYmaplWrBX5Q1LQ5
NWq6G0itJrlp5B+Htx394d3wlLPBUdOo1rr4HZg3FT7NqQ2+NnGdlFxd+oc4
e9rZ0KhpW/M7sQfl64Gpy6q4M5gXsE70dSaeDlc9ODqT68I6A78Bc4dFTbfl
yA+lVp/nas+zzQQ3A+sKvhu+6sOdjYianmUNyT0bNS09A17YWZi+VXfys/Bn
8x2709+QfTaGowlzGkeT98gIatKxzsHcqOmyCfN1x0kTo6jNi5rWezBLPSOj
ptemvINhzO5Bj/C5eTcN4B0Jfn7UNCTe3sQvwjeSub3BzAfXC85m1LU/3dOf
c1drz6Ojpvn9zt529nXUtKv8GGcLokl9L8RXTnpaFDVNjqYnvDvUJ62PZR2D
Py5q2tXZfyNqZ18cL0WTGl9Irh+zFtLTKoWjTQrPNriUez5qd8AWZ1ujpu3x
5J4HMw5fM/szdwD+4qjdBY/SNxH+SdT606c75OWo6XsJ/aofJ6/c6qidrVXs
bzvPO4zccHJTyC+LmnaXRk3PS4mly+XOVjh7E7z6phLvwJ9CPJXcNHhehms5
XIOxp5i5jNpgsIN4rl1R0/tO9vwK+55ObXfUtKw7YCX5F6jtxJ9G7Wn2vxKe
ofTviZrW34qaZvewxxX07CE/A/7d+K+wJ/HMon8v/kxinaEjfK9Z1Gez7sOX
bqSxdXyvNVHTubQovb5NPDyl/kwKRvX99K+Hbx+9s8GqZy3YOdTXMXct/Qei
plfp+R1nB+EbBady88GNorYBX+tz7Gc/PAeiyTvgVerCjcZ/lVnzU+Ydipqu
b0btHH0CbiN9z7DfZ+k9CF71MdHkffFa1HSq93+Yb/A6OdWORU0rR5m5EJ5F
+OoZB159m6Km13HUFtL3PLXNKbhxzDvKdz/KLPm6E8aDv8HzSUdLwByDczO4
49SO8Vwb2X94p4hPOtNZ1zn/0NlHUbt3pPePmfMGq2b94uwE3FqlS2luG/g3
UmrK9+Zd9wGr/ElyC8jv4Jt9GjUdS8+nyL9JTXo6HTX9nQJzEv9d+tR/i+f5
LGo6Vqzzq7N/njjU9w56dsKxIpq8p95l3hlmytfdcQ4u5c9GTcfS9OdR07rW
2/i72cfn4Fam9K2KJu+js/Ceh/scvbvol96/cPYl61vMuI2vWT9E7Wx9D/4t
sPreV51dc3Yhaudf70M/I6Xnr8ipdtHZ/5x9EzX97WXmPnBv468FG94ZWi+B
/QqM4veoXwKjnv3M/h/Pe4H97Cenud/xHIfYyzvkr0RNz5ejdhdcJn6PWLO+
Ba++g8Tf4b9DfJDcIfreg+sq72sj9iozr1DbyL4O0/sa71Xa1fn4k++7idz7
UdPyYb6P9CXNXSev3I9R0+t1au/Tew3/A/h+ipqOdR/cETOdpotZfTOYH8Ed
hf9H/J/pVe04vnLSdIaY3SO/UAvz6WNWu8/Zr9Rl8qXhrexXz/Qx+JAvI5wn
wf/GepJe1aVpYZaSl57vJK/6Zp79OnVxSOu/s/6G/0fUtCodZ4qZvrXehS/t
SUN3xwx3KqXvdDSp8z/4fn/xDf+E8yb7+hyOzDFbxXkXc+Rr1ll6xSFclphp
NNTtPS7+O2r6Pgvub3zVhFHPp8zUc5wD8w/vS/fhdp4rM/znqId60vovXOK8
Tfwf9X/B/MPeNDsrli1mGlY+K776LtIrnfguHwUrLQvjxUzn+n8qnZ286tK0
4hz4XxNLc5foUy1nzDR7EQ7VhM9BXjifPq3ah3zpJIiZVhKsAXXtUdoVt3Qv
Huk+l4tzx0zTqsdiZlfokR+nLty9MdP9d8TfM1cYzcoFv+bkiZmu74VDuKvE
yoc837IPaVQ9edFagRS9SYv5Y/ZcadC68ML+hD7C51b9ejSpGcVpY9YvnnzU
lfsQjnzwpCOXlpzwyms/v7AHncUqzqqy5x/YdzP2LGylmN1NFWN2HzzEHfKw
s8rcCxnIP5xSywhHeE9oVVyQvjvB6M77kP0Ko7q0XAWMsIXIFWTPd7Jv6Vv5
QmDuJ5eJZ5KOpXnlC1NXLEwR5xdFu8JWA/9IzO6Catjd5MM7QvXqzmrETIt/
o/kicGtOGP9FnDmlLzOreos7eyBmWpQuazqrxXoPM6TnYjHTt3ztuRi9/1LL
Cr4mZ0Znpxy8whTnWf/h3tGM2jHTclZmZmMvEfoixCWc1YmZvmtj2cFLV6Vi
pq0c4OrGTMvS9oOYB4/8ktSFqxczfeUgzglnSXhzMEu89WOmrXrUo/DUI5+T
vZdgXmn2JZ7cYOrja20QMy3HwMrKkFOtYcz0nZtYvvQlfTQCG4BvRL4hubJ8
gwBcWb5HAr8h+JBT/Y353vdwNoQvz/fsTJ+4RjlrHjONqp4WTNOYaboJnOLL
R5wfX9gKMdNaRVbFd6Tk0sKr/BPOesTsDrgPnqZYM3ItnbWKmbb6OusXM900
Y5/SvO6GnjG7F2S9YqbrgmBakOtNvk/M9N0bq5KCF1ZarwquL5w94agKvg97
K0TP/fgtmVmQvVWFQ3uWDgY6G+Ts0ZhpS7p5Mmb61bNJz61jpu/CPLviNuTk
V6enP/4jxG3gLQrXI8wVbgDfvyg8bejtT/6pmOmgNjPD+0x9NcEMxFfusZjp
vm0seacM5JnaxpJ3T3GwssfJDWJebXIlyBdj/23JqdYO/kHgB7PPp8CoLt23
Z1VcF9yQmGk5rCt+OmaaVtyBuvQ31NkweuvQX5eeemBLxZJ3R8eYaVq99env
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
           
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1:eJzt3HswlXkcx3G5xC6rjGo126q0acemtJOlNr67pdSwtoQhudSmVGJrrei2
tY1SSRdK6UIX5VaD2lZ0sbqSURFyP8dBjnOcR9NsG+1sy5n99xnzzLD9zjkf
/xivGWb8zvO85/v7PYfxy8Pcg7S1tLSk+lpaOr2fZ257N7+rSk7BAdyr5V0S
Wln3t5V9WTlpKT+6aKXyQ/Hf1+1wOBxOTpe4hOSzzeSw+MGmPU4iCto7qaj4
10ZyLjcf7rlfTlcXTp98o1BCF9u+VfTUoCdwOLyd9oW8eJv+sojGRssW5ZlX
0nzxphGXncVknxf/SfaEZvory82782MRHSm/7apv1oSewOFw3m7wOeYTOBwu
tBtC55P+zk+GupSOvHmuk7KMmmK049uYWx84HD543UjKNWvUv/GA9G27Twf+
VEX1fXlY2UzuZ12MD4yX0M5uOjVxvYhsZx+wi+1s6LcnF6Z+ec9ULCfv0bdM
9CxbmVs3OFyTfaC6wec9+2aUnOgsodce2ls3e1VTwoqUHntLCe9+p7+e7Lb0
yLBJkZPDQz/yzWphbj3hcE3wwe4Gn6e/WVAYtKuUFC1D5QYPqynMrM5XEc3f
k/7OT5xHHAtfYy4nPctTSfrXJcytMxyuTv6+usHnPkFLrk0dW0Zt4Ya+R2c8
J+XxR6uEd7/TX08mGeb77G6QkfTZrN4JBT2Bw9WxG3xuUL4mq/v3x9SoO7xk
QuZzmrR9obnP3BbB5ydh+9ePK+zkKCQ6Nm5Nuow2fBXfu3NqZu51gcNZdtb6
MOg9aSg6GmQsp9CMgg/GJUioekptpH1YBR2xMvo8qoYj197vuh4ho6RPY5ff
LUBP4HB17AafL012eLos7QlVJYyYkTOmhnSm7/vFOFX4fIKewOGa0w0+v1o5
t/R++FMq+2x0mmNcDTW9uCe6o9sq+Dy24EHfk2KOrBIPXdV3ktFd3ejA9i3o
CVwznLX7mrWeCN3viFd8ayfL5ujDcQnOXiYyksu2+hs5oidw9XLW7l/WnK8n
/okXd29LkVBxct7tP06JSK/ndZabN/9+R1+73vH8SY7a047Wnm/soFEVEUtt
3omZux7gcHRj8PxMj73llXXlZPYmtbpVWkPdG/KjrR/xn5/w7XfQE7gqOmv3
o6o7X0+EzifWyRHz/GI4ejjt+LpXmR3kmB+2xKMQPYGz4azdd+rq+S1dZofX
VtB5p8Qx5nNqSewWWhi3XXhPFs8ycRsVztGF/BNas6M6KPhMsHfkDvQEjm5o
kgudT/j2O+gJHN2APytLM1y/+hnZHIpZ5nWyloqtLN5yti0UEqszJHRsCw2b
N63Zr0RElTn+FiZ36jGfwNENuOCeCJ1PomoyPR8HcLRrzun4g/M66GDfj5uN
nsDRDU1y9ASObsAHyg3Omb2cElRFzlZrZffd6uh4854fc3s7InS/o3y848JR
UGmKZZNpBykf7+igJ5rqrF3ncDbPT/jmk3umfe+Q5cjJ89x1a7GUJF6L3Vvu
ipi7zuED66xdz/D364q8wH++X1VJNxqiLsT9WUs5Q6tsF8n45xP0RDOdtesW
zqYL7Qnffgc9UQ9n7fqEq5YPVE9k2ZtDeiw4mtCY6rrlspSMHF0XGuxCT1h1
1q5DuHq40PNY7HdUy1m73uDq7QPVE8wn6AYcPlDPi9ETdAMOt9j/RPLRD9Wk
/PcCF+toxy2HTFMvCUXuCNjkd7qFPOXpuj2vRZS6+n5ihTV6gm7A4fz+9caY
Knngcwq4893PdkPqaXXSy9ZwQ+E96fvrnSvGHGmvSmsq2Swl24lz3SY7oyfo
BlyTnK8nQvc76Am6AYcL7QnfeSx6gm7A4ULPT/h64hfjsnNim4IKIy/pBY+S
kvGLdQnth5uYu9/RDTic/fnETnkgqyAxl7Fh9AIp+SsPZFV/PmHt9YLDWfaB
6omqzyesvS5wuCq60Oc7fD3pjcnexqcKSh6SfeyapJ0Cfws4aDOSvZ6wtv5w
uDq5us4nrK0zHK4J7rHsm+JH/jUkG9b3L5DqyT0idVxVYbPKzCesrSccrsmu
Kj1hbd3gcDj7PWFtfeBw+P/fk/Si7YcTbypo297cL/Ry2il356LYyMRGdAMO
1yAf7J6w9vvC4fDB81CXNwUZS2tpY9/bY6/U00x3H1+7COE9+Rd5IEWw
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(m\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(r\\)]\\)\"", 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {{0.55, 0.99}, {0.55, 0.99}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1:eJxFlwmcjvUWxyV3YmZsZbtJ9i1q7q2spR9ZrrJUuLYUQiEx1iRRdmNwiySk
kEtlS8qSUYYwxjIz774/27svM7JV0r3P/zznmff9fHx4/6/3Of/fOd/zO+dt
/tqMIZPurVKlSpH+5x79j/j3mmnhO19dK0TT5fGXjj1sQ395Qb0D/5LxUFzp
/ODPZ/Br2aDX6oy0YeIr3n73zpexf4p/Zt66s/il2aFZkz+04X1Xj3dG7pXx
TMS1748xv2Dz9PuX/nzRhm3//vyb/U4ZV1+3had2OIc3T87Z0KiaHUdLq/ir
1lAwLljSwvP7OTyT6diV28MOiwjTTcG1CZdeGXDhPOqO7Hbkwjw7yovOPLt/
ioIlyvnNP266AG331rPNDtmR1a/13KpbFDww/oylw6QiHL1+1zo/akfbwhV7
RlxU8GXgVK1tT1xEXi8RyYHedEEFnV898Vx21WKMWV94s90YB+htBxXnvN8v
W1hSjH/4WmV88LEDCzp/88yIl1WMfPnbnxLbL6Fqh5UNXFcc2HQ4e+a+NSpI
7luXYZsfbfPP6k4cfmz6rntOqlgwcm+ny09dwd5zA7qs7uXEla+v2oYnVJDM
zKt4V2R3gRMx/Vv7HtI4T1cxWMg/4kTGro+63zNIQ4Opg66vG1qC5iLNSSda
NL0xbfh7Gsa2L65z/kQJbgi5bVzosVU8QMPeSP/H/te8FOdF2HEujGooMq2h
Yo+4SCm2fCpeLszVqzC8VhDtFuUff7NGGR49/Fn5nnMu2LaEmuyJaBg/bEjb
L1aX4fTFHX1/uO7CkzuPdPmtUMOWRxp9bK1hwTBVFMCNDV8teem5zzSUiXLm
WRDRKSob5Mb1Qy++ueVtjfVaWa8bQ449rBOmoTcBZEVtCuzGYT27T3fUsHBp
zsD/ZtqwU4961+pG3fMnjq3N0HBk1M3j7jwb182D3CuryvySikTOj21rZ9lR
NO/U5w/meFCiZznnRxWt9er1XmPn+nqQQ/VU8arAN8vB+fBgvfZr07IZKtfT
AR1aXbAHqfjP3Vo+r+KqCJPlREPXldtDVQ8G69WY00pF9bGbB9bPd+Lra6Ix
vNivU/DLXwp6dhIXdDHPXmQTMArmZ7XSU+1CqU77oqleTKvx+xdvfKfgkBz9
+HC2G5OeCryw9hMvLtURghXEjh68N5zvxm9DRaK96CDSPllBi3VzZzau6UE+
9asXeU0npEY/q2D0RPEAD/evj7lSsEGnaFlNL6i8A3x4Tqfj7i0ZxRTHi34i
zfN9+EqndXCpjGrh/HbJmj6Q3N0+VCewZDxdMGRT83U+vCXClvkwuc+UGRXL
ZebIjyr08jN3Mg6QP/ixUXz8qB9thv5NJ1pGiDoygLbieqP9WDHaclKtJ+Nh
Aj0AasOVfgTH77A/WS6h461PfBvuk7gv/OgrwhZJ7E8SFLIpP77UKXPskjBR
2MZKie8VQDVKvIT3j/bUrUOCiKqnChMWC8OSsG1ny+N/3idj21lhZAGQbTwu
4fjajIoG/WX2gQDnXYJd9PkqGWd0qtYXBtgPAviV/EqGLlZPdQCndXreXRpA
rRcObpxUXeH76Pfo/9N7TboG8Ej3j4oX91cgqPW1ktBzhDAYP8jOVil8Twl/
Tbqtjd/hB8m/oHD/SCgQNjrcj0V3uudeqa7y/SXuHz+2ijbur4LsVddP4X7y
Gb67WuV+kPCHTmFstg9WvQpNilS8I2xsn4RjAr92PqNPamisV8LbdGGda2p8
jfmW0Fng86HX8JPVGudBwg2P44PZ/bwgXIo0fCHkZsg4Epv9ff07HsNnagSZ
Vxmzfq8dPXrQg/cgGimIJ+gl43FKiMfwn9VB/lyGXqQX/2zkwQ/17xSnioKV
/B1srS3dftlt+FJmCJS+eTKmPylIcHN/h7hvZHTsLSad2/CrvBDzJEN00/K4
i+dJCKmFIrCMr8eJi7vQR/hYZhhdV4sBI4NkDnNhnLCH58MQLjQtLLPPuoz6
5IVRLGz1rgxqt1NOnpdh1Bc2WU8BjbdZTsP3MiM8nxRMpMBOlPZxVtx4PsLz
RYFO8Uo910gKP1wT4XmtgMblfxyo3nj7q+2LIyCbma5gp95dXfs6ICjonRUF
2cZyBeMJGDt60QCO4qqwga0Kmomxc8AOGv9roqC2PqwgoLt+0wl2vHO+vY5Y
tJLT7XV3F5xuaDd8NSsGo+0UjGkmnmxjP4rhlsDqpoLGBKQNZOtrYuyjKtxi
rehkQ1zgUhwDpbmFik9FemNW3Cd8ODvOe4M5p60Q3ZczMI4mVGCV56jVeG5+
HK/TS+W5beV7xUFjdqGKjSuX685kMXw7O4E/Fk3VNxcVQ3UXnDvTgo23MvTI
CfShxUnF/UJuGwu+FX6en4CeZL2gKkq+EwUsw+VL4pUAjUOHChpL68v4fQIz
BW4VKvtJGYz1K8HzUwO1ey0LEsRjwuCzpQay40EWzmOC547GXFvYl5NGnBEa
38PCz00acXM1UDtlW5m/JPeBxnWy8lxJcl9oPF+taE8DNmnELdCYYyv3Lcd1
mHuAje/HcSs07mNz3+S4mUGezzb2O47bMogJxJeN5zrH7RHkOtrxBtXV1Bvk
59pZZxJ0/dwgjtOcsfNeYuoNoiMJtnM/mHqDIJvOcHDdkqDHFARxPy0MDt6r
TL1BLKPvO/j7HLciCGqnsw5Qmg+YekOYSnuxEyT3mKk3BC81qJP9l+P2COEF
AszJ9TT1hkDXK3TyPcz6hozyVnUxV8lKnzP8w8VcmXpDILkfuJgrs74h5trF
XKU4Tojfs39mpri+IVA7wc1cpfjzMM8lN3OVYr1hkE2fcjNXKa5vGLSG3nUz
Vxx3RJg/9/DfHDc3zH3s4fpzXN13W4r166SHueK4u8LYJGxan0cGVxy3IMxz
2MtcpeAkvWHmxsvxUlzfMBI0H7z8uak3grEk2MtcmXojIJvu5mOuUlzfCPrw
XmZwZeqNMB8+vjfHzY3gEWEbt33Mlak3AmrfLn7+nqk3wvPQz1yZeiNYQvuv
n7ky6xsB/bebfn5v6o2AytspwFyZeqNwizTPCTBXpt4oSO6RAHNl1jcKCns9
wByVs94oSP7fJX5uOec7yn4vMVflrDdq7COjJOaqnPVGec+VmKty1hvFYtF4
myXmiuM6opwvie/HcSuixlx1mvsnx82MgWz7tsRccdyWMZANN5SZK47bI4bt
VBeZuSo3uBoRY90y6zT1xir3F4MrU28MZGObZObK1BvjOsrMVTn7VQzGz2+Z
uTL1xri+Mn+/nOsbw2PCBuorzJWpN851VzhPpt648bttmMJcmXrjzIPCXJn1
jYPkbFT4Hhw3N877vsJcmXrjWCHSbFGYK1NvnPlRmCuzvnFjbj+gMlcVHCfO
9U6fG/WLc77T58RHowTrT58b/CX4Hulz43dNgjnTKs+NuiW43ulzY79KVM5V
89zwqQT/vkmfG/t3gvkOVp4b+2QCr1DB0+fm3DbqnT6fTQVMsp+lz2kcjEsa
dakXqjw35kESJPel9DmN+x1J5ix9Xsjzisp9KX3egH5YJivngHluzL8U91X6
3Ph9lGK+0+fG3E1xnPT56+zTxvsI/g9eITvj
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -56.25}, 
                    Offset[{2.5, 0.}, {7.5, -56.25}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 
                    11.250000000000014`}, 
                    Offset[{2.5, 0.}, {7.5, 11.250000000000014`}]}, {{7.5, 
                    33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 56.25}, 
                    Offset[{2.5, 0.}, {7.5, 56.25}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", "1.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8327627713138514`*^9, 3.8327627889617853`*^9}},
 CellLabel->
  "Out[963]=",ExpressionUUID->"72a5a64b-57b5-4cc6-9472-d3f7a40bb20d"]
}, Open  ]],

Cell["Finally, the linear tradeoff: ", "Text",
 CellChangeTimes->{{3.8326843645232563`*^9, 
  3.8326843739877357`*^9}},ExpressionUUID->"d08d4f2a-80fe-4aeb-861d-\
52d728722c65"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"\[Alpha]", "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "c"}], ")"}]}]}], ")"}], "^", "c"}], ")"}], "/.", 
    
    RowBox[{"{", " ", 
     RowBox[{"c", "\[Rule]", " ", "1"}], "}"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", " ", "Automatic"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<f(\[Alpha])\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.832684392598888*^9, 3.832684426555423*^9},
 CellLabel->
  "In[964]:=",ExpressionUUID->"2267a589-1249-4c6e-a1ed-98de7f2e0cce"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw1lGs0lAkYxwfTydISbZhK0iqSSoii9i/aFLqQVu0qkqKpRKHaU5OxJrqI
NumCmlxaccxoXY4yZZY52uZMkUtD6R2mMcbM8OasabCVffuwH57znN/5P//z
fPvZRx8LPWBIo9G2UPN1Bx5QvRIO7fzhhp2pbmqKBN1/ToKM4YH6TxaiM59J
uN+9WVDN2IDuHptrE5Mkgl5I/yxkhIGRu3jlPzoS4TH6J78zYlBg7HdUqSHx
bkWGfxYjCdzRUwMSKQnu7G3nLzLSUd6s7LrFJ8E2rna8wMiFILapzj2SxK7d
9/gfRkvAVE/T9VWNwHSKHREwnw/zPq+Lc81GsChkRNV8qQZvV8nTMuKHcfLl
Gtwce4SVLTbjR/7SwrrGgjAwaMTZ5+tEMjst6uT+kta1TQidTs6QJGjQxCyc
u1srwvZSm0dDIjV0i9eZVx59Bv86V0GugxqGExUz5y4SQ2jQ5fMoZQieU1F1
O3gSuAljLQ93qiBJ93jZ4tyKF8Tx4K2rVLDL0Uw8GGnDBy8To4rMQWj0MqLL
tR0m9JyZ1weVKFE3iM2udIBnUnR7fLUSZrZ/kApFJ04numRmZQ3g8qHag1yH
1/AOKpXwhxX46FuhiDsnBSeyPCvIV4EkN1GNVXM3WpSFpUl33kPGE116Zf8G
OWW23takHP8yO/OX/PoWaeLZbho/OZaun/7lYEMvmJGfUoOL+hFQZB/70JpA
7/JjwY5jfThpG7mwP0KGDYlt8dkhfXDR7jSVbulDmWPYUEiMDLPMPxiLJvvw
pt9u5KQJAXpjPv/7gn6Ms//m1j/rxWGPhp5vguRwvnEhWHvoLSo2R3OffpSj
/IhPY5rlG+g0c2Yq897Dykksc2/vRu2OAKPcDQrk7UqckKZIcW4T526NUgHD
Yzphnttr2L8L7C7mDODpj8xt9WOd8PZKz2W4KXH5qv61JL8DEfNbJww6lNjU
vG/Gp93t0Imz5AnsQVgxFd7zP7fhJn1vUqiDCtzhjOV18a2YRdQWGYpUqMlw
StaREkw7yw5bkzgErelk5RwfMWgP9vLllmrQIjh+yTXPcPw2P8uySY3Veeuf
1+pFeLI009giXoMZIbJ3DQFNsAg87pJmpsUp/tGCkUuN6F3W1nFaoMWCq6x9
K+c9RtUdOCj2DiPVxIggjGuxh+9pYftlGDacwBRr8yqkcu6xe8tHQCsbHPAK
LUWlyjbfLJhElNqvwIWVh8xCThSxlQRtWzDp7pCHmNDhRbwQEqnVO/18xNcx
TyCo2hJO8Zk41War67iY/UvL5WgSQrMrHrG8a4jzvDVqcprqu/dI7hE5WJj+
3abp96l7PTG5jHUeX1af+VZaRrFwlLtWzEHP8Pv2+xVU/wI9IMiKg5zw6j0b
H1L9ec7X4ni/Yco59ARHQMLXN3lpMZGK3lfZd4w6qNzSut6VlYL68/r9HV0U
l6ylb7VKRq5P5JLiboo9o7cf5p1AUOnyGj+C+vdzpaqUSMDjUy+es4eofGOG
myfrIPKWrcoO0VLMbBcn8PYjUV4QZk9SnG27v4KIglPwEZlwjOKqWMf1rJ9A
N+gsydFTPP45vI7Yjr5aH2YU5R1aqpNFOGsjBMziFa6Ul2gLyhVpLE/87y1K
Ze1fPfYfknBtcA==
       "]]},
     Annotation[#, "Charting`Private`Tag$4669125#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Alpha]\"", TraditionalForm], 
    FormBox["\"f(\[Alpha])\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.9999999795918367}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.832762793413254*^9},
 CellLabel->
  "Out[964]=",ExpressionUUID->"4d60902f-c48e-4aeb-8916-b4b02e057714"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"difference2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"pi1", "+", 
         RowBox[{"pi1", "'"}]}], ")"}], "/", "2"}], ")"}], "-", "pig"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", " ", "0.5"}], ",", 
      RowBox[{"c", "\[Rule]", " ", "1"}], ",", " ", 
      RowBox[{"\[Alpha]g", "\[Rule]", " ", "0.3"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"difference2", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", " ", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Pi]\), \(g\)]\)\>\"", ",", 
      "\"\<Specialist \!\(\*OverscriptBox[\(\[Pi]\), \(_\)]\)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.832684398167387*^9, 3.8326844298745737`*^9}, {
  3.832762802146883*^9, 3.832762802249443*^9}},
 CellLabel->
  "In[967]:=",ExpressionUUID->"91ba0b8f-2322-46cb-ae28-1394fb5a3fcf"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2s2aCwE77BaL+bV2SLfYwfiPHZvVO
ySlwfkTkwvUfPi6B87n/N8a4y62H81UD37043L0Fzi8/Z2k/48tOOF98i+A9
Rsb9cP62R85nztscgvMPZc2VjnxzBM7/qmbLvzb3OJzP9HO1gLTqKTjf7H/C
tuB1Z+D8My0m545pnYfz5Se8/rny3QU4//X3+/euGlyC85e82n2Kr+8ynM8n
u/z9kydX4PyezK1pC1SuwfnfHFY/yai/DueXGB3ZInb4Bpx/f92R7ouKt+D8
31lXZmtW3YbztR3Z/6XtvgPnuy9STN8ofg8RXrLxSg9j7sP5Om9Cua/7PoDz
hfk/cBz5heCz7J+9XnnOQzg/22T3TU7vR3D+as+kBfu+IfhfX0sJPJv2GM7f
GuzOPMXlCZxf79E6f8szBF/xrteNxa1P4Xwr85YpkkbP4PwYufM/GS8j+F9P
9T4qaHwO589giSsJUnmBcP+9rYuYjiD4rLWNIZaFL+F8hpVx6x8JvYLzi2at
7xU6hODv1e7gEMx7DecLehXpNPG9gfPv6F64XLkHwd8wz17lSdxbOD92vZmg
7D8Ev6F1YeOdVe/g/LUvZGfz+byH85VaRDzYlyH40+W5v/7/j+ADAFIywQc=

       "]]},
     Annotation[#, "Charting`Private`Tag$4669224#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Pi]\\), \\(g\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"Specialist \\!\\(\\*OverscriptBox[\\(\[Pi]\\), \\(_\\)]\\)\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.832762798791007*^9, 3.832762803064639*^9}},
 CellLabel->
  "Out[968]=",ExpressionUUID->"d2c1f89f-b99d-462f-b271-531127460d12"]
}, Open  ]],

Cell["Fir this range we\[CloseCurlyQuote]ll check the fit of our non-linear \
model: ", "Text",
 CellChangeTimes->{{3.8326844774728518`*^9, 3.832684484607101*^9}, {
  3.832684517481052*^9, 
  3.83268451874257*^9}},ExpressionUUID->"cf59fea0-1cf1-422f-bfa5-\
dc128f8abfe1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LIPeriods", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]r", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Establish", " ", "a", " ", "Resident", " ", 
         RowBox[{"Population", ":"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"System", "[", 
            RowBox[{
            "\[Alpha]r", ",", "0", ",", "0.3", ",", "1", ",", "0.5", ",", 
             "0.25", ",", "0.28", ",", "0.24", ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "v1", ",", "v2", ",", "m1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "30000"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", 
            RowBox[{"{", "\"\<StiffnessSwitching\>\"", "}"}]}], ",", 
           RowBox[{"MaxSteps", "\[Rule]", 
            RowBox[{"10", "^", "6"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"uans", ",", "v1ans", ",", "v2ans", ",", "m1ans"}], "}"}], 
         "=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], ",", 
            RowBox[{"v1", "[", "t", "]"}], ",", 
            RowBox[{"v2", "[", "t", "]"}], ",", 
            RowBox[{"m1", "[", "t", "]"}]}], "}"}], "  ", "/.", 
          RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"t", "-", "8000"}], ",", "v1ans"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "8000", ",", "9100", ",", "0.1"}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Fit", " ", "a", " ", "sinusoidal", " ", "function", " ", "to", " ", 
          "the", " ", "cycle", " ", "of", " ", "the", " ", "resident", " ", 
          "host", " ", "and", " ", "determine", " ", "its", " ", 
          RowBox[{"period", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Parameters", " ", "=", 
         RowBox[{"FindFit", "[", 
          RowBox[{"data", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{"b", "*", 
                RowBox[{"(", 
                 RowBox[{"t", "+", "c"}], ")"}]}], "]"}]}], "+", "d"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "t", ",",
            " ", 
           RowBox[{"Method", "\[Rule]", "\"\<NMinimize\>\""}]}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"T1", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "*", 
             RowBox[{"\[Pi]", "/", "b"}]}], ")"}], "/.", 
           RowBox[{"Parameters", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "T1"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]r", ",", "0.51", ",", "0.99", ",", "0.01"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.832684569526977*^9, 3.8326845790474167`*^9}, {
  3.8327628093161783`*^9, 3.832762809608762*^9}, {3.832762843688431*^9, 
  3.832762844067362*^9}, {3.832762917910385*^9, 3.832762917995509*^9}, {
  3.832762957635324*^9, 3.832762976140629*^9}, {3.832763063408914*^9, 
  3.832763063525228*^9}},
 CellLabel->
  "In[976]:=",ExpressionUUID->"e698ca09-09e0-4845-b5c1-52a307434ece"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{"LIPeriods", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<Period\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2000"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Try", " ", "using", " ", "fourier", " ", 
    RowBox[{"analysis", "."}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.83276290707638*^9, 3.832762910270699*^9}, {
  3.832778232484357*^9, 3.832778245601088*^9}, {3.832778297971307*^9, 
  3.832778307315497*^9}},
 CellLabel->
  "In[1033]:=",ExpressionUUID->"3f4267bd-1791-446a-bbb1-d7505b37a0b0"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwt0WtIk1EYwPEZJLFC/WAgsrxEloYJlZHotufxtqlddGZpujStqTmtKWVM
LSjzkpS3ysgyUMtkui2TbEF2WX4QukhoKlm0m7rt3eWDTSTJ2vt2Hjicb3+e
c37BBefSJetYLNZu96HvdE1AHSXSgQ87RpPmdwcfyXjsmV4djFjHKZZ/HS6H
ilu0Lh3s+eyM8w+pwSR9la9KqIeKZL+JZ4EXsPMePXrg/KxNKaNkaBPRQT3c
PhOV5R1Tinx3TcYzgPz0sCkvuhhbtS530QA2e9/x1mgJGpicAVSNQYa3pgKM
3EuPEZqK8i1Cz3x0L+cOGqHL0u0x+icX6Rp7xgjOnDZtuUyMYfR6oSYoHs15
sVOYjdV0rsoEAQK54K80Cz99pMcETtbv/a6JYxjIBOdBOa2Ubi06iuX0c2Xz
oJ6kplJCM/A9vZ52HuQ7apWKTUdwM53zXYBfnRxFh1c6FjKzABfrh1XvwkTI
fJ9mAeLXr1WXZKch81z2IjT05iT0xKQis554Ecaml87+MBxCJqdahJLr7aUv
+w4iixkz7MOH19pqD+B/DzN03JQ2DlemEA8zVFeMzDVfSiYeZniV5LklqCOJ
eFjgcrOEJ38tJB4WqHnu8OG4BMTDApoHXsHqKAHxsMIHHfZbGhKJhxUOD95I
ntInEA8rZMGbLyWJCcSDgq6QWyL7UDzWMx4U5H2bedK8PR5nGQ8KZk95d6t7
4oiHDZYV99eGQuKIhw2CV68K/dWxxMMGEZ0RTYX8WOJhh9VtvIHwSSQedlgR
j2VsKEPiYYcrd4NS+zciMjlfB8wFSpbSTgDxcIDu8dNd0gE+8XBAZPv3r5ke
fOLhhMqT49zzuTzi4YRBY1d5ppZLPJzAXelVtIRz8R9WmXrZ
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Alpha]\"", TraditionalForm], 
    FormBox["\"Period\"", TraditionalForm]},
  AxesOrigin->{0.5000000000000003, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5000000000000003, 0.99}, {0, 2000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.832762911404832*^9, 3.832762953748312*^9, 
  3.8327630565056047`*^9, 3.832763105680889*^9, 3.832778246295452*^9, 
  3.832778598871381*^9},
 CellLabel->
  "Out[1033]=",ExpressionUUID->"53126283-9468-438b-bb2b-b31bd2bca887"]
}, Open  ]],

Cell["Great! Now we\[CloseCurlyQuote]ll generate our plot: ", "Text",
 CellChangeTimes->{{3.8326846077839117`*^9, 
  3.8326846229684687`*^9}},ExpressionUUID->"24125194-db01-40fa-95d9-\
77b843cd0cc2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PIPLIN", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]r", ",", "\[Alpha]m", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Establish", " ", "a", " ", "Resident", " ", "Population", " ", 
         "with", " ", "arbitrary", " ", "initial", " ", 
         RowBox[{"frequencies", ":"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sol", "=", 
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"System", "[", 
            RowBox[{
            "\[Alpha]r", ",", "0", ",", "0.3", ",", "1", ",", "0.5", ",", 
             "0.25", ",", "0.28", ",", "0.24", ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "v1", ",", "v2", ",", "m1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "30000"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", 
            RowBox[{"{", "\"\<StiffnessSwitching\>\"", "}"}]}], ",", 
           RowBox[{"MaxSteps", "\[Rule]", 
            RowBox[{"10", "^", "6"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"uans", ",", "v1ans", ",", "v2ans", ",", "m1ans"}], "}"}], 
         "=", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], ",", 
            RowBox[{"v1", "[", "t", "]"}], ",", 
            RowBox[{"v2", "[", "t", "]"}], ",", 
            RowBox[{"m1", "[", "t", "]"}]}], "}"}], "  ", "/.", 
          RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"t", "-", "8000"}], ",", "v1ans"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "8000", ",", "9100", ",", "0.1"}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Fit", " ", "NDSolve", " ", "output", " ", "to", " ", "sin", " ", 
          "function", " ", "and", " ", "find", " ", "the", " ", "period", " ",
           "for", " ", "the", " ", "resident", " ", 
          RowBox[{"population", ":"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Parameters", " ", "=", 
         RowBox[{"FindFit", "[", 
          RowBox[{"data", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{"b", "*", 
                RowBox[{"(", 
                 RowBox[{"t", "+", "c"}], ")"}]}], "]"}]}], "+", "d"}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", "t", ",",
            " ", 
           RowBox[{"Method", "\[Rule]", "\"\<NMinimize\>\""}]}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"T1", "=", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "*", 
             RowBox[{"\[Pi]", "/", "b"}]}], ")"}], "/.", 
           RowBox[{"Parameters", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "T1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Introduce", " ", "mutant", " ", "invaders", " ", "at", " ", "each", 
         " ", "0.1", "*", "T1", " ", "of", " ", "the", " ", 
         RowBox[{"cycle", ":"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SampleInvasion", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"st", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"uf", ",", " ", "v1f", ",", "v2f", ",", "m1f"}], 
                "}"}], "=", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"u", "[", "st", "]"}], ",", 
                  RowBox[{"v1", "[", "st", "]"}], ",", 
                  RowBox[{"v2", "[", "st", "]"}], ",", 
                  RowBox[{"m1", "[", "st", "]"}]}], "}"}], "/.", 
                RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", 
              "                   ", 
              RowBox[{"sol2", "=", 
               RowBox[{"NDSolve", "[", 
                RowBox[{
                 RowBox[{"System", "[", 
                  RowBox[{
                  "\[Alpha]r", ",", "\[Alpha]m", ",", "0.3", ",", "1", ",", 
                   "0.5", ",", "uf", ",", "v1f", ",", "v2f", ",", "0.05"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"u", ",", "v1", ",", "v2", ",", "m1"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "0", ",", 
                   RowBox[{"7", "*", "T1"}]}], "}"}], ",", 
                 RowBox[{"Method", "\[Rule]", 
                  RowBox[{"{", "\"\<StiffnessSwitching\>\"", "}"}]}], ",", 
                 RowBox[{"MaxSteps", "\[Rule]", 
                  RowBox[{"10", "^", "6"}]}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"uans", ",", "v1ans", ",", "v2ans", ",", "m1ans"}], 
                "}"}], "=", " ", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"u", "[", "t", "]"}], ",", 
                  RowBox[{"v1", "[", "t", "]"}], ",", 
                  RowBox[{"v2", "[", "t", "]"}], ",", 
                  RowBox[{"m1", "[", "t", "]"}]}], "}"}], "  ", "/.", 
                RowBox[{"Flatten", "[", "sol2", "]"}]}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Average", " ", "mutant", " ", "frequency", " ", "several", 
                " ", "Periods", " ", "after", " ", "they", " ", 
                RowBox[{"invade", ":"}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"m1avg", "=", 
               RowBox[{"FindAverage", "[", 
                RowBox[{"m1ans", ",", 
                 RowBox[{"4", "*", "T1"}], ",", 
                 RowBox[{"7", "*", "T1"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"m1avg", ">", "0.05"}], ",", "1", ",", "0"}], 
               "]"}]}]}], 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "If", " ", "mutant", " ", "average", " ", "frequency", " ", 
               "has", " ", "increased", " ", "from", " ", "its", " ", 
               "initial", " ", "low", " ", "frequency"}], ",", " ", 
              RowBox[{
              "we", " ", "deem", " ", "this", " ", "a", " ", "successful", 
               " ", "invasion"}]}], "*)"}], "}"}], "\[IndentingNewLine]", ",",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"st", ",", "8000", ",", 
             RowBox[{"8000", "+", "T1"}], ",", 
             RowBox[{"0.01", "*", "T1"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Determine", " ", "if", " ", "on", " ", "average", " ", "the", " ", 
          "mutants", " ", "successfully", " ", 
          RowBox[{"Invade", ":"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"FlattenedSample", "=", 
         RowBox[{"Flatten", "[", "SampleInvasion", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AvgResult", "=", 
         RowBox[{"Mean", "[", 
          RowBox[{"Take", "[", 
           RowBox[{"FlattenedSample", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "This", " ", "is", " ", "the", " ", "average", " ", "frequency", " ",
           "with", " ", "which", " ", "the", " ", "mutant", " ", 
          "successfully", " ", 
          RowBox[{"invaded", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        "AvgResult"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Finally", ",", " ", 
         RowBox[{
         "this", " ", "is", " ", "a", " ", "bindary", " ", "definition", " ", 
          "of", " ", "successful", " ", 
          RowBox[{"invasion", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"AvgResult", ">", "0.5"}], ",", "1", ",", "0"}], "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]r", ",", "0.51", ",", "0.99", ",", "0.01"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]m", ",", "0.51", ",", "0.99", ",", "0.01"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.832684626232181*^9, 3.832684638583927*^9}, {
  3.832762810935437*^9, 3.832762831437499*^9}, {3.832763113382139*^9, 
  3.832763121835684*^9}, {3.832763167307304*^9, 3.832763169934963*^9}, {
  3.832763201641762*^9, 3.832763202450466*^9}},
 CellLabel->
  "In[979]:=",ExpressionUUID->"19879522-de03-4bd1-b434-fd38c1f85a95"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<LinearInvasionFinal.csv\>\"", ",", "PIPLIN"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.832766321499197*^9, 3.832766385401635*^9}, {
  3.8327741069600554`*^9, 
  3.83277411781343*^9}},ExpressionUUID->"b525d9d1-e826-4cb7-93a2-\
491d7f0904d2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PIPLINF", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"PIPLIN", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotLIN", "=", 
   RowBox[{"PIPLINF", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"PlotLIN", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(r\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(m\)]\)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
       RowBox[{"Rescale", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "]"}], "&"}], 
     ")"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.832766321499197*^9, 3.832766385401635*^9}, {
  3.8327741069600554`*^9, 3.83277411781343*^9}, {3.832774331895121*^9, 
  3.832774378620574*^9}, {3.832774418444421*^9, 3.8327744186709623`*^9}, {
  3.832774481843956*^9, 3.832774497678211*^9}},
 CellLabel->
  "In[1029]:=",ExpressionUUID->"c371568c-c85d-4523-8ab4-490a48c844a9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJx13SHQZNldQPEtHNGLhcIFDRYiwRKNgSqwBBs0WLBgQaOjBws6yOzMBt7r
fn2vCpqdIadv3d+rHUHnpMJXu3P69Pf6vnv/73f/4q9//Je/8dVXX/35b371
1efXH//st//u+ae/+JGv//qTP/zBz/9l8f/+8M/+4cOvFv/JNz/9+t/++Js3
//M/ff6z+PrTz/9h8R9999N+8ocf3/yPH3713U9c/P8/bvHvf/nz6c3f/Z/v
/tPizz/tBz9f/Huf//F++O2b//bzj/vp4v/8j89/Fv/Olx/4yzf/zed/3Z8s
/vfP/3gfFn/5cV//95v/6sufxV9efrb4y7/uD/7nzV/+8f5s8Zcf92+Lv/ry
58DDgY8DHwc+Tnyc+Djx8cDH4o9ffCz+gy8+nm/++y8+nvh44uPCx4WPCx8v
fCz+8o/34YWPgY+Bj4GPiY+Jj3l738e+1kNcD3E9xPUQ10NcD3E9xPUQ10Nc
D3E9xPUQ10NcD3E9xPUQ10NcD3E9xPUQ10NcD3E97D4OPBz4OPBx4uPEx4mP
Bz4W10NcD3E97D6e+LjwceHjwscLH4vrYfcx8DHwMfAx8THxMW+f+77vY1/r
Ia6HuB7ieojrIa6HuB7ieojrIa6HuB7ieojrIa6HuB7ieojrIa6HuB7ieojr
Ia6H3ceBjwMPBz5OfJz4OPHxwMfieojrIa6H3ccTHxc+Lnxc+HjhY3E97D4G
PgY+Bj4mPiY+5u26x8993/exr/UQ10NcD3E9xPUQ10NcD3E9xPUQ10NcD3E9
xPUQ10NcD3E9xPUQ10NcD3E9xPWw+zjwceDjwMOJjxMfJz4e+FhcD3E9xPWw
+3ji48LHhY8LHy98LK6H3cfAx8DHwMfEx8THvF33e93j577v+9jXeojrIa6H
uB7ieojrIa6HuB7ieojrIa6HuB7ieojrIa6HuB7ieojrIa6HuB52Hwc+Dnwc
+DjxcOLjxMcDH4vrIa6HuB52H098XPi48HHh44WPxfWw+xj4GPgY+Jj4mPiY
t++9Xvd73ePnvu/72Nd6iOshroe4HuJ6iOshroe4HuJ6iOshroe4HuJ6iOsh
roe4HuJ6iOshrofdx4GPAx8HPk58nHg48fHAx+J6iOshrofdxxMfFz4ufFz4
eOFjcT3sPgY+Bj4GPiY+Jj7mbd3H771e93vd4+e+7/vY13qI6yGuh7ge4nqI
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
YO+DeR/AdVDXgfweXA9e9/i57/s+9rUe4nrYfRz4OPBx4OPEx4mPEx8PfCyu
h7ge4nrYfTzxceHjwseFjxc+FtfD7mPgY+Bj4GPiYeJj3uaexM6B8By854A9
B+k5MM/BeA6gHuJ6iOshrofYfRDeB/Y+mPcBXAd1HagevO73usfPfd/3sa/1
sPs48HHg48DHiY8THyc+HvhYXA9xPcT1sPt44uPCx4WPCx8vfCyuh93HwMfA
x8DHxMfEw7zN/XHuiXMfPPfuuV/PPXruy3MvcT3E9eC+T/e9ue/HfQ/e9/W+
l+v+rnvG9eD3Xq/7ve7xc9/3fexrPew+Dnwc+DjxceLjxMcDH4vrIa6HuB52
H098XPi48HHh44WPxfWw+xj4GPgY+Jj4mPiY779352A5B8g5KM6B8By854A9
B+k5sHqI68F9z+77dN+b+37c9+B9X+97ue4f14PrPn7v9brf6x4/933f7z4O
fBz4OPBx4uPEx4mPBz4W7/PIVg/xPo9s9bD7uPBx4ePCxwsfi+th9zHwMfAx
8DHxMfEx+Xu+z71y7o9zT5z74Ll3z/167jGuh7ge3Pfvvmf3fbrvzX0/7nvw
vq/3veJ6cN3TdR+/93rd73WPn/u+73cfBz4OfJz4OPFx4uOBj8X7PLLVQ7zP
I1s97D4ufFz4uPDxwsfieth9DHwMfAx8THxMfEw+Z+5z35x75dwf554498Fz
7577jeshrgfPvbjv333P7vt035v7ftz34H3fuB5c93fd03Ufv/d63e91j5/7
vu93Hwc+Tnyc+Djx8cDH4n0e2eoh3ueRrR52Hxc+Lnxc+HjhY3E97D4GPgY+
Bj4mPiY+Jr9n73MPnfvm3Cvn/jj3xLkPnnuP6yGuB899ee7Fff/ue3bfp/ve
3Pfjvoe4Hrzv5bq/656u+/i91+t+r3v83Pd9v/s48XHi48THAx+L93lk57uH
eJ9Hdr572H1c+LjwceHjhY/F9bD7GPgY+Bj4mPiY+JhcZ97nfjr30Llvzr1y
7o9zT5z7ENdDXA+ee/Tcl+de3Pfvvmf3fbrvzX0/cT1439f7Xq77u+7puo/f
e73u97rHz33f97uPEx8nPh74WLzPI1s9xPs8stXD7uPCx4WPCx8vfCyuh93H
wMfAx8DHxMfEx+R71n3urXM/nXvo3DfnXjn3x7kncT3E9eC5X889eu7Lcy/u
+3ffs/s+3fcW14P7Hrzv630v1/1d93Tdx++9Xvd73ePnvu/73ceJjwc+Fu/z
yFYP8T6PbPWw+7jwceHjwscLH4vrYfcx8DHwMfAx8THxMVlnuM99du6tcz+d
e+jcN+deOfcnroe4Hjz37rlfzz167stzL+77d9+z+z7jenDfj/sevO/rfS/X
/V33dN3H771e93vd4+e+7/vdxwMfi/d5ZI93D/E+j+zx7mH3ceHjwseFjxc+
FtfD7mPgY+Bj4GPiY+Jjss52n3vu3Gfn3jr307mHzn1z7lVcD3E9OPfBc++e
+/Xco+e+PPfivn/3Pcf14L439/2478H7vt73ct3fdU/Xffze63W/1z1+7vu+
332s130e2eoh3ueRrR52Hxc+Lnxc+HjhY3E97D4GPgY+Bj4mPiY+JuvM97n/
zj137rNzb5376dxD577F9RDXg3NPnPvguXfP/Xru0XNfnntx339cD+77dN+b
+37c9+B9X+97ue7vuqfrPn7v9brf6x4/933f73PI1us+j+zBPLLVw+7jwseF
jwsfL3wsrofdx8DHwMfAx8THxMfkPsv9uRfO/XfuuXOfnXvr3E/nHsb1ENeD
c3+ce+LcB8+9e+7Xc4+e+/LcS1wP7nt236f73tz3474H7/t638t1f9c9Xffx
e6/X/V73+Lnv+36fQ7Ze93lkz3cPu48LHxc+Lny88LG4HnYfAx8DHwMfEx8T
H/P23COf++JzL5z779xz5z4799a5n3E9xPXg3Cvn/jj3xLkPnnv33K/nHj33
FdeD+/7d9+y+T/e9ue/HfQ/e9/W+l+v+rnu67uP3Xq/7ve7xc9/3fexrPew+
Lnxc+Ljw8cLH4nrYfQx8DHwMfEx8THzMH/3Xdp/9F2+uh7ge4nqI6yGuh7ge
/mu7zlxcD3E9xPUQ10NcD3E9xPUQ10NcD3E9xPUQ10NcD3E9xPUQ10NcD7uP
Ax8HPg58nPg48XHi44GPxfUQ10Pc+2j38cTHhY8LHxc+XvhYXA+7j4GPgY+B
j4mPiY/JPpP7c7987pHPffG5F879d+65c5/jeojrwbmHzn1z7pVzf5x74twH
z7177jeuB899ee7Fff/ue3bfp/ve3Pfjvgfv+3rfy3V/1z1d9/F7r9f9Xvf4
ub/7eOLjwseFjwsfL3wsrofdx8DHwMfAx8THxMdkn9X9uXc+98vnHvncF597
4dx/557H9RDXg3M/nXvo3DfnXjn3x7knzn3w3HtcD5579NyX517c9+++Z/d9
uu/NfT/ue/C+r/e9XPd33dN1H7/3et3vdc/u44mPCx8XPi58vPCxuB52HwMf
Ax8DHxMfEx+TfYb35z763Duf++Vzj3zui8+9cO5/XA9xPTj31rmfzj107ptz
r5z749wT5z7E9eC5X889eu7Lcy/u+3ffs/s+3ffmvh/3PXjf1/tervu77um6
j997ve7ffTzxcX/f7z4ufLzwsbgedh8DHwMfAx8THxMfk3229+ee7vusfsE+
k/tzv/b7jN9wn+X+3Iu4HuJ6iOshrof99+x97uH+97zYOVjOAXIOSj147t1z
v5579NyX517c9+++Z/d9uu/NfT/ue/C+r/e9XPd33dN1H7/37j6e+Lh/7vu+
33288LG4HnYfAx8DHwMfEx8TH5N95vfn/vrcU5/76HPvfO6Xzz3yuS9xPcT1
4Nxz5z4799a5n849dO6bc6+c+xPXg3MfPPfuuV/PPXruy3Mv7vt337P7Pt33
5r4f9z1439f7Xq77u+7pus/u44mP+3WPn/u+73cf67Uedh8DHwMfAx8THxMf
zWNaPcT7PLLVQ7zPI1s9xPs8stVDvM8jezGP7MU8stVDXA/xPo9s9fDv2+/Z
xfs8stVDvM8jWz3E9RDXQ1wPcT3E9RDXw+7jwMeBjwMfJz5OfJz4eOBj8X5f
cvUQ7+vSq4fdx4WPCx8XPl74WPxh87J62H0MfAx8THxMfEzOGd2f+x7XQ1wP
cT3E9RD7HDyfA1YPcT3E9RDXw77OcJ/7vF9nfsvv2fvcw/3veXE9xPUQ10Nc
D3E9xPUQew7Sc2Ceg/EcgPug3QfqPjj3AbkPwvvA3gfzPkA97D7u33u97ve6
x8/9+AMd+FoPu4+Bj4mPiY/5/jn7PLLVQ7zPI7s/B3ufR3Z/DqrPgfQ5ePUQ
10NcD3E97Ots97nn+/esb7nOvM/93D9nfsnf833uVVwPcT3E9RDXQ+w5YM9B
eg7MczCeA3AftPtA3QfnPiD3QXgf2Ptg9bD7uK/77D4ufNyve+IP/B6wA1/r
Yfcx8THxMd//f/s8stVDvM8juz8Hfp9Hdn8O8D6P7P4cyHqI6yGuh7ge9nXm
+9z/fZ3hW75n3efe7r9nf8nnzH3uW1wPcT3E9RDXQ+w5eM8Bew7Sc2Ceg/Ec
gPug3QfqPjj3AbkPwvvA9eC6v+uervv4vdfr/vgD10H+HrADX+th9zHxMd//
u30e2Xz3EO/zyOa7h3ifR7aecx3v88jWc07jeojrIa6HuB72+yz3517s62zf
ss5wn/u8X2f+kt+z97mH+9/z4nqI6yGuh9g5EJ6D9xyw5yA9B+Y5GM8BuA/a
faDug3MfkPsg6mH3cV/3331c+Lh/740/8D3A6yB/D9iBr/Ww+1j//T6PbPUQ
7/PIVg/xPo/s/hz4fR7Z/TnA9RDXQ1wPcT3EPgfJ58D4HIx9Htl9DrpzoOth
/z17n3u4/z3f517F9RA7B8U5EJ6D9xyw5yA9B+Y5GM8BuA/afaDug3MfUD3s
Pu73vXYfFz7u6z5xPXjd73WPn/u+73cfEx/rdZ9HtnqI93lkq4d4n0e2eoj3
eWT352DXQ1wPcT3E9RB/33PA4u97Dkz8fc8B2Ncd7nOg9+vO+xzQ/XPnPgcu
/r45QLuP+xyI3cf9HPDu434ObPdxPwcQf98+0N3HfR/Q7uN+H3j3cb8PENfD
7uP+PdjvAV4H+XvADv4PYNKQOw==
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
DPkFyP4Z7ga4PxE7xnoc2+t1LXUe+0zj0qNmvbT4q8+0fpL9X7Glzc8cboLN
xH6D/yv+Rnifsm6k/im4J+j7MfHfOPtzh1s+my9bWeXr9+cMvW2Gt4V1M714
f6fKRK7yvnBI4b5lFb/9/exLn2n+C1b50r90/sRn80H2n/g72P+K2Bl60V3/
xuFbanwFT3q/4zNt38ZXDc0OzZC/gey/4O6E+4TYOdbz2Duof5s6//hM49Lj
/3ymxX99dk8vsP8vtu7q1w53wR5iT+H/i78L3h3WXdS/CPcD+v6H+FPOvsd7
8PT/Lv5/PtPjh5x5j717+Orlgb6V+yaZ/VbrP/jPOj+n3+7sfZ9p/ltW+dK/
dO7z2xyRrf/wqPwD7H9H7DJ1r9CPYvfZF0+61/y4Rj+aOQeIlXYo47f4Q/ay
+W02NOY8Pz1oVa2P4nrV+/iBHGn8J55Nz5Xdb1r/kf3scKTNoLND4BNiOeCL
J/8aPPUZpH/VfwRX56pP1f6JmM4OO0T8sd8brRHet/So3nRmGE6YHkK82+94
TzfIi/rtW6Z1azqHRL9pPsoqX/qXznP7bT7IzuU3X7rVfhK/xdSDetFdT+XW
1NRMQh3pPZnftJ3Ub75qaHZohuT1G2Tn8Rv3c7g6Lw895IHzK/mqL47q5POb
xqXHgn7TYn6/6f8P9vPD0RxJ7rcZk4L5olgB+OLJvwVP/SSnf9X/E+7v9K7a
T4jp7JR+ew+e/r/ivRTymx7Vm85MCSclPagXvedfeNcFyfkr7tvoG6bxm+ZT
s8qX/qXzIn6bD7IL+83Xt/6a712YHlRXnL/hqUZa6kjv6f02E3Q/5KuG9K4Z
UsxvkF3Ub9x7cHVeUXooCuffuF5vU6e43zQuPZZCkyX8pvX/2C+BLW1mcPYz
4D6xkvDFk/8NPPWTgf59cMT9H72rto+Yzs7ot5nm6USr/NJo1c+ZGeFkxFcv
+t05w50oRY7fH/ut0m9aE7/NngnU03yS/qVz7WXHbowfYr+s3+ZsFr/NMt31
5x0qUaMsPOn9Ob9puxy+amh2aIY0A7Kbwg3DbUIsO2sO7BD1y1Gnud80Lj22
8psWW/jtnuZkvwW27mp5hwogkVhL+C3wI/CeY41QPxfcZ+m7OfGWnF2R9+Dp
Pwl+a7/pMQ9nVmSvIn4F3ltPh17Uag3/BYfOfruzlf2m+Uqs8qV/6byt3+aD
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
JMbukOyucTlFiBdjrwT73Rz+D3p5dCc=
           "]]}]}, {}, {}, {}, {}}}, 
     VertexColors -> CompressedData["
1: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
z3Dy3/q/ADr8awM=
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(m\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(r\\)]\\)\"", 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {{0.51, 0.99}, {0.51, 0.99}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {
       Charting`ScaledTicks[
       Automatic, {Identity, Identity}, "Nice", WorkingPrecision -> 
        15.954589770191003`][Automatic, {6, 6}], 
       Charting`ScaledTicks[
       Automatic, {Identity, Identity}, "Nice", WorkingPrecision -> 
        15.954589770191003`][Automatic, {6, 6}]}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
NKqz
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -71.21559633027523}, 
                    Offset[{4., 0}, {7.5, -71.21559633027523}]}, {{
                    7.5, -29.93119266055047}, 
                    Offset[{4., 0}, {7.5, -29.93119266055047}]}, {{7.5, 
                    11.353211009174299`}, 
                    Offset[{4., 0}, {7.5, 11.353211009174299`}]}, {{7.5, 
                    52.63761467889907}, 
                    Offset[{4., 0}, {7.5, 52.63761467889907}]}, {{7.5, 
                    93.92201834862384}, 
                    Offset[{4., 0}, {7.5, 93.92201834862384}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -104.24311926605505`}, 
                    Offset[{2.5, 0.}, {7.5, -104.24311926605505`}]}, {{
                    7.5, -95.9862385321101}, 
                    Offset[{2.5, 0.}, {7.5, -95.9862385321101}]}, {{
                    7.5, -87.72935779816514}, 
                    Offset[{2.5, 0.}, {7.5, -87.72935779816514}]}, {{
                    7.5, -79.47247706422019}, 
                    Offset[{2.5, 0.}, {7.5, -79.47247706422019}]}, {{
                    7.5, -62.958715596330286`}, 
                    Offset[{2.5, 0.}, {7.5, -62.958715596330286`}]}, {{
                    7.5, -54.701834862385326`}, 
                    Offset[{2.5, 0.}, {7.5, -54.701834862385326`}]}, {{
                    7.5, -46.44495412844038}, 
                    Offset[{2.5, 0.}, {7.5, -46.44495412844038}]}, {{
                    7.5, -38.188073394495426`}, 
                    Offset[{2.5, 0.}, {7.5, -38.188073394495426`}]}, {{
                    7.5, -21.674311926605515`}, 
                    Offset[{2.5, 0.}, {7.5, -21.674311926605515`}]}, {{
                    7.5, -13.417431192660562`}, 
                    Offset[{2.5, 0.}, {7.5, -13.417431192660562`}]}, {{
                    7.5, -5.160550458715609}, 
                    Offset[{2.5, 0.}, {7.5, -5.160550458715609}]}, {{7.5, 
                    3.0963302752293576`}, 
                    Offset[{2.5, 0.}, {7.5, 3.0963302752293576`}]}, {{7.5, 
                    19.610091743119252`}, 
                    Offset[{2.5, 0.}, {7.5, 19.610091743119252`}]}, {{7.5, 
                    27.866972477064206`}, 
                    Offset[{2.5, 0.}, {7.5, 27.866972477064206`}]}, {{7.5, 
                    36.123853211009155`}, 
                    Offset[{2.5, 0.}, {7.5, 36.123853211009155`}]}, {{7.5, 
                    44.38073394495411}, 
                    Offset[{2.5, 0.}, {7.5, 44.38073394495411}]}, {{7.5, 
                    60.89449541284402}, 
                    Offset[{2.5, 0.}, {7.5, 60.89449541284402}]}, {{7.5, 
                    69.15137614678898}, 
                    Offset[{2.5, 0.}, {7.5, 69.15137614678898}]}, {{7.5, 
                    77.40825688073393}, 
                    Offset[{2.5, 0.}, {7.5, 77.40825688073393}]}, {{7.5, 
                    85.66513761467888}, 
                    Offset[{2.5, 0.}, {7.5, 85.66513761467888}]}, {{7.5, 
                    102.17889908256879`}, 
                    Offset[{2.5, 0.}, {7.5, 102.17889908256879`}]}, {{7.5, 
                    110.43577981651377`}, 
                    Offset[{2.5, 0.}, {7.5, 110.43577981651377`}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.1\"", 0.1, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -71.21559633027523}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -29.93119266055047}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.3\"", 0.3, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 11.353211009174299`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 52.63761467889907}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 93.92201834862384}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Rainbow\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
f2N26fc=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Rainbow\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
f2N26fc=
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "Rainbow", "Gradients", {0, 1}, Blend["Rainbow", #]& ], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", "#1", "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", "0.5445544554455446`"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8327663501219883`*^9, 3.832766386151129*^9, {3.832774112189744*^9, 
   3.832774119078438*^9}, {3.8327744107264214`*^9, 3.832774423225212*^9}, 
   3.832774498925655*^9},
 CellLabel->
  "Out[1031]=",ExpressionUUID->"6d599de5-aacd-414e-896e-1567e750c242"]
}, Open  ]]
},
WindowSize->{808, 847},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1ee56960-0ac7-4de4-ae2f-be42bf10c1ff"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 565, 10, 104, "Text",ExpressionUUID->"3e5a4f7b-6ab0-4889-8ba7-e113de837522"],
Cell[1126, 32, 3192, 84, 220, "Input",ExpressionUUID->"5362dee0-5f0a-4060-acde-cd5edcc5ab5b"],
Cell[4321, 118, 1936, 49, 136, "Input",ExpressionUUID->"d017ceb6-bc74-49a7-89ff-71aeac02662f"],
Cell[6260, 169, 196, 3, 35, "Text",ExpressionUUID->"56ea5d71-2349-48b5-9351-ac7956b03b94"],
Cell[6459, 174, 3198, 83, 178, "Input",ExpressionUUID->"429bcba3-195c-4448-a7e9-3b7633c9d65b"],
Cell[9660, 259, 288, 7, 35, "Text",ExpressionUUID->"16489ecc-22d2-42cf-87c5-4dea55eff119"],
Cell[9951, 268, 1364, 40, 115, "Input",ExpressionUUID->"f15ef93a-ffd8-419f-a5b8-6e1e4e8d2bf3"],
Cell[11318, 310, 197, 3, 35, "Text",ExpressionUUID->"925cac77-4409-47ca-8cea-d71a6c8002b6"],
Cell[11518, 315, 669, 18, 30, "Input",ExpressionUUID->"eecff2c4-9759-4249-9695-622921d689ac"],
Cell[12190, 335, 288, 7, 35, "Text",ExpressionUUID->"55663f9c-8366-4bf2-80ad-2fbc8661252b"],
Cell[12481, 344, 16842, 470, 976, "Input",ExpressionUUID->"1184ef11-acfd-45a6-80b6-efc4d0e1aaba"],
Cell[29326, 816, 690, 12, 104, "Text",ExpressionUUID->"a103c7ac-02d8-4877-827b-b8f93b339d43"],
Cell[CellGroupData[{
Cell[30041, 832, 938, 26, 52, "Input",ExpressionUUID->"d61a09b4-66fd-4236-82be-27ff8778b473"],
Cell[30982, 860, 5938, 117, 249, "Output",ExpressionUUID->"c1538453-0c24-4231-ad8a-3f5ebc42bd7e"]
}, Open  ]],
Cell[36935, 980, 230, 5, 35, "Text",ExpressionUUID->"deffadf4-3eea-45a3-b728-b59b492f7231"],
Cell[CellGroupData[{
Cell[37190, 989, 1153, 32, 54, "Input",ExpressionUUID->"6e6417a9-2d07-48a1-88ca-b1dde445ca99"],
Cell[38346, 1023, 9268, 173, 233, "Output",ExpressionUUID->"a9511d9a-b5d0-4346-9a4a-78d578547be8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47651, 1201, 281, 7, 30, "Input",ExpressionUUID->"94cc3e38-c868-4de8-a0a8-1e03c8a46ba3"],
Cell[47935, 1210, 388, 10, 34, "Output",ExpressionUUID->"e2d04af2-5106-41d1-89a2-a9266de47000"]
}, Open  ]],
Cell[48338, 1223, 302, 7, 35, "Text",ExpressionUUID->"2480b604-c548-4bda-8787-d7909434f3c3"],
Cell[48643, 1232, 238, 6, 35, "Text",ExpressionUUID->"811405fc-f07f-4291-89c5-d872440d2341"],
Cell[48884, 1240, 3708, 87, 283, "Input",ExpressionUUID->"328633c5-39d6-4d42-8049-219aacdafe93"],
Cell[CellGroupData[{
Cell[52617, 1331, 395, 9, 30, "Input",ExpressionUUID->"105db8d4-54f0-46e6-bbb2-e36424f95f59"],
Cell[53015, 1342, 3012, 66, 251, "Output",ExpressionUUID->"a1ee9fb9-caf5-409c-bf90-9489d2c8cc58"]
}, Open  ]],
Cell[56042, 1411, 294, 7, 35, "Text",ExpressionUUID->"134889cf-0654-45a2-8c30-eaf0beedf9be"],
Cell[56339, 1420, 996, 27, 73, "Input",ExpressionUUID->"d67e3c71-3d19-44ef-9806-c26784512df2"],
Cell[57338, 1449, 9924, 221, 766, "Input",ExpressionUUID->"bc616b68-f661-4dad-901c-823e45216ba5"],
Cell[CellGroupData[{
Cell[67287, 1674, 982, 26, 73, "Input",ExpressionUUID->"d616297b-72b8-4ee1-9621-44f9caf5c1be"],
Cell[68272, 1702, 103905, 1769, 378, "Output",ExpressionUUID->"bb0d994f-ce94-4ef1-a1b4-db8a55c706a1"]
}, Open  ]],
Cell[172192, 3474, 288, 7, 30, "Input",ExpressionUUID->"5575d1b5-0108-4a45-a068-fbd9584229f2"],
Cell[172483, 3483, 327, 7, 58, "Text",ExpressionUUID->"a5c3e1c1-1fa7-40b8-8f43-0c8e529c3a6d"],
Cell[CellGroupData[{
Cell[172835, 3494, 803, 23, 52, "Input",ExpressionUUID->"0fb1313a-429d-4539-86cf-c5d8b7892047"],
Cell[173641, 3519, 6395, 125, 249, "Output",ExpressionUUID->"5562d7e6-267f-4ae8-921f-a65135ed7c42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180073, 3649, 1167, 32, 75, "Input",ExpressionUUID->"3fbc541f-8b8b-4467-a41c-027f62df78c5"],
Cell[181243, 3683, 9132, 172, 233, "Output",ExpressionUUID->"423d0627-099f-49ed-b9fb-efca9d287e7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190412, 3860, 257, 7, 30, "Input",ExpressionUUID->"44eec0df-bd60-48a4-ba24-df4a03307e08"],
Cell[190672, 3869, 361, 10, 34, "Output",ExpressionUUID->"21727200-47c4-4735-a39e-1e8ea35d8e60"]
}, Open  ]],
Cell[191048, 3882, 473, 9, 58, "Text",ExpressionUUID->"30153f6a-426b-4760-bca6-1048deb1eef2"],
Cell[191524, 3893, 3688, 87, 283, "Input",ExpressionUUID->"7b57c01a-fb54-457d-a42a-be44531c8cad"],
Cell[CellGroupData[{
Cell[195237, 3984, 386, 10, 30, "Input",ExpressionUUID->"c065fd9d-9de1-46d8-a46f-0eb0ac326a39"],
Cell[195626, 3996, 2587, 61, 257, "Output",ExpressionUUID->"b50452bc-56ad-417e-82e4-c42fed9a2426"]
}, Open  ]],
Cell[198228, 4060, 294, 7, 35, "Text",ExpressionUUID->"a36f9de3-a7f6-4839-a557-61042ba0cfd5"],
Cell[198525, 4069, 9656, 218, 766, "Input",ExpressionUUID->"cf167ddf-ae54-413b-8ae2-a6ff17caab6e"],
Cell[CellGroupData[{
Cell[208206, 4291, 1017, 28, 94, "Input",ExpressionUUID->"bdd19863-2142-4457-b05f-5acbefb3bd8b"],
Cell[209226, 4321, 45455, 809, 378, "Output",ExpressionUUID->"72a5a64b-57b5-4cc6-9472-d3f7a40bb20d"]
}, Open  ]],
Cell[254696, 5133, 176, 3, 35, "Text",ExpressionUUID->"d08d4f2a-80fe-4aeb-861d-52d728722c65"],
Cell[CellGroupData[{
Cell[254897, 5140, 806, 23, 52, "Input",ExpressionUUID->"2267a589-1249-4c6e-a1ed-98de7f2e0cce"],
Cell[255706, 5165, 3495, 78, 249, "Output",ExpressionUUID->"4d60902f-c48e-4aeb-8916-b4b02e057714"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259238, 5248, 1052, 29, 54, "Input",ExpressionUUID->"91ba0b8f-2322-46cb-ae28-1394fb5a3fcf"],
Cell[260293, 5279, 2613, 65, 239, "Output",ExpressionUUID->"d2c1f89f-b99d-462f-b271-531127460d12"]
}, Open  ]],
Cell[262921, 5347, 271, 5, 35, "Text",ExpressionUUID->"cf59fea0-1cf1-422f-bfa5-dc128f8abfe1"],
Cell[263195, 5354, 3740, 88, 283, "Input",ExpressionUUID->"e698ca09-09e0-4845-b5c1-52a307434ece"],
Cell[CellGroupData[{
Cell[266960, 5446, 723, 17, 52, "Input",ExpressionUUID->"3f4267bd-1791-446a-bbb1-d7505b37a0b0"],
Cell[267686, 5465, 2603, 58, 254, "Output",ExpressionUUID->"53126283-9468-438b-bb2b-b31bd2bca887"]
}, Open  ]],
Cell[270304, 5526, 199, 3, 35, "Text",ExpressionUUID->"24125194-db01-40fa-95d9-77b843cd0cc2"],
Cell[270506, 5531, 9315, 212, 745, "Input",ExpressionUUID->"19879522-de03-4bd1-b434-fd38c1f85a95"],
Cell[279824, 5745, 315, 8, 30, "Input",ExpressionUUID->"b525d9d1-e826-4cb7-93a2-491d7f0904d2"],
Cell[CellGroupData[{
Cell[280164, 5757, 1687, 44, 115, "Input",ExpressionUUID->"c371568c-c85d-4523-8ab4-490a48c844a9"],
Cell[281854, 5803, 68780, 1214, 378, "Output",ExpressionUUID->"6d599de5-aacd-414e-896e-1567e750c242"]
}, Open  ]]
}
]
*)

