(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    413064,       7975]
NotebookOptionsPosition[    405232,       7869]
NotebookOutlinePosition[    405627,       7885]
CellTagsIndexPosition[    405584,       7882]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"First", " ", 
    RowBox[{"we", "'"}], "ll", " ", "clear", " ", "the", " ", "Kernel", " ", 
    "of", " ", "any", " ", "unwanted", " ", "definitions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Quit", "[", "]"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8200711906854563`*^9, 3.820071251179772*^9}, {
  3.820103678341564*^9, 3.820103680443611*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"453339f7-e866-44b8-873d-6a274a1697c7"],

Cell["\<\
Here, I consider the result of mutant invasion in a cycling population. This \
occurs when average specialist payoff exceeds average generalist payoff. \
First I\[CloseCurlyQuote]ll consider the outcome of  an invading alpha mutant \
along a cycle\[CloseCurlyQuote]s period. Below is our system of equations \
denoting the frequency of each strategist. \
\>", "Text",
 CellChangeTimes->{{3.82006710923592*^9, 3.820067179285782*^9}, {
  3.820071034386458*^9, 3.820071060311796*^9}, {3.820071537366403*^9, 
  3.820071564001191*^9}},ExpressionUUID->"f6175b1b-87e9-4352-ba8d-\
3cab4ef8015a"],

Cell["\<\
First we\[CloseCurlyQuote]ll create expressions for the frequency of the two \
specialist host phenotypes, and potential mutants in each phenotype. Each \
Strategist will have their own associated payoffs:\
\>", "Text",
 CellChangeTimes->{{3.8200732495920677`*^9, 3.8200733074900618`*^9}, {
  3.820073346509691*^9, 
  3.8200733592215548`*^9}},ExpressionUUID->"cc8502a2-57a9-4962-9923-\
61c2daa8dd50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"x", " ", "\[Rule]", " ", 
    RowBox[{"the", " ", "proportion", " ", "of", " ", "a", " ", 
     RowBox[{"host", "'"}], "s", " ", "resource", " ", "that", " ", "is", " ",
      "shared"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\[Alpha]", " ", "\[Rule]", " ", 
    RowBox[{"the", " ", "matched", " ", "exchange", " ", "rate"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"\[Alpha]", "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "c"}], ")"}]}]}], ")"}], "^", "c"}], " ", 
     "\[Rule]", " ", 
     RowBox[{"the", " ", "mismatched", " ", "exchange", " ", "rate"}]}], ",", 
    " ", 
    RowBox[{"f", 
     RowBox[{"(", "\[Alpha]", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\[Alpha]g", " ", "\[Rule]", " ", 
    RowBox[{"the", " ", "generalist", " ", "exchange", " ", "rate"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"payoffs", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "\[Minus]", "x"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"\[Alpha]", "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "c"}], ")"}]}]}], ")"}], "^", "c"}], 
         "\[Minus]", "x"}], ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]g", "\[Minus]", "x"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "\[Minus]", "\[Alpha]"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "\[Minus]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"\[Alpha]", "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "c"}], ")"}]}]}], ")"}], "^", "c"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"x", "*", 
       RowBox[{"(", 
        RowBox[{"1", "\[Minus]", "\[Alpha]g"}], ")"}]}]}], "}"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{"Payoffs", " ", "for", " ", "hosts", " ", 
     RowBox[{"(", 
      RowBox[{"1", " ", "through", " ", "3"}], ")"}], "and", " ", "symbionts",
      " ", 
     RowBox[{"(", 
      RowBox[{"4", " ", "through", " ", "6"}], ")"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{
  3.8200733256350183`*^9, {3.8200733628427477`*^9, 3.82007337995478*^9}, {
   3.820073569657474*^9, 3.8200736480791483`*^9}, {3.8200737949187517`*^9, 
   3.820073831755643*^9}, {3.820074070570157*^9, 3.820074248049464*^9}, 
   3.820074278672884*^9, {3.820075729413348*^9, 3.820075760985618*^9}, {
   3.8200761244975777`*^9, 3.820076195902012*^9}, {3.820076240204764*^9, 
   3.820076293478219*^9}, {3.8200777030420723`*^9, 3.820077727485458*^9}, {
   3.820077780583953*^9, 3.820077792665119*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"2eafe670-dae8-4fc9-9809-0c456fd6ceea"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pi1", ",", 
       RowBox[{"pi1", "'"}], ",", "pig", ",", "\[Psi]1", ",", 
       RowBox[{"\[Psi]1", "'"}], ",", "\[Psi]g1"}], "}"}], "=", "payoffs"}], 
    ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Host", " ", "1", " ", "payoffs", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"pi1", " ", "-", " ", "match"}], ",", " ", 
        RowBox[{
         RowBox[{"pi1", "'"}], " ", "-", " ", 
         RowBox[{"msimatch", " ", "and", " ", "pig"}], " ", "-", " ", 
         "generalist"}]}], ")"}], " ", "and", " ", "payoffs", " ", "for", " ",
       "a", " ", "symbiont", " ", "interacting", " ", "with", " ", "host", 
      " ", "1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Psi]1", " ", "-", " ", "match"}], ",", 
        RowBox[{
         RowBox[{"\[Psi]1", "'"}], "-", " ", "mismatch"}], ",", 
        RowBox[{"\[Psi]g1", " ", "-", " ", "generalist"}]}], ")"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pi1m", ",", 
       RowBox[{"pi1m", "'"}], ",", "pig1m", ",", "\[Psi]1m", ",", 
       RowBox[{"\[Psi]1m", "'"}], ",", "\[Psi]g1m"}], "}"}], "=", 
     RowBox[{"payoffs", "/.", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", "\[Rule]", " ", "\[Alpha]m"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pi2", ",", 
       RowBox[{"pi2", "'"}], ",", "pig2", ",", "\[Psi]2", ",", 
       RowBox[{"\[Psi]2", "'"}], ",", "\[Psi]g2"}], "}"}], "=", 
     RowBox[{"payoffs", "/.", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", "\[Rule]", "\[Alpha]2"}], " ", "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pi2m", ",", 
       RowBox[{"pi2m", "'"}], ",", "pig2m", ",", "\[Psi]2m", ",", 
       RowBox[{"\[Psi]2m", "'"}], ",", "\[Psi]g2m"}], "}"}], "=", 
     RowBox[{"payoffs", "/.", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]", "\[Rule]", "\[Alpha]2m"}], " ", "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Payoffs", " ", "for", " ", "interactions", " ", "with", " ", "and", " ",
       "by", " ", "host", " ", "1"}], ",", " ", 
     RowBox[{"the", " ", "host", " ", "1", " ", "mutant"}], ",", " ", 
     RowBox[{
     "host", " ", "2", " ", "and", " ", "the", " ", "host", " ", "2", " ", 
      "mutant"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{
  3.8200733256350183`*^9, {3.8200733628427477`*^9, 3.82007337995478*^9}, {
   3.820073569657474*^9, 3.8200736480791483`*^9}, {3.8200737949187517`*^9, 
   3.820073831755643*^9}, {3.820074070570157*^9, 3.820074211118384*^9}, {
   3.8200742831140623`*^9, 3.820074471169529*^9}, {3.820074506184278*^9, 
   3.8200745081022787`*^9}, 3.820075486431525*^9, {3.820075535277357*^9, 
   3.820075543990532*^9}, 3.820075717497724*^9, {3.820075764138115*^9, 
   3.820075913333853*^9}, {3.8200764300860033`*^9, 3.8200764329085712`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"6f04f191-6665-4099-bf36-18513111ef43"],

Cell["Next we find the average payoffs of each strategist:", "Text",
 CellChangeTimes->{{3.820076037863706*^9, 
  3.8200760481300507`*^9}},ExpressionUUID->"b40c5a95-a5fe-490f-8a98-\
fd92e89d6748"],

Cell[BoxData[
 RowBox[{
  RowBox[{"S1", " ", "=", " ", 
   RowBox[{
    RowBox[{"v1", "*", "\[Psi]1"}], "+", 
    RowBox[{"v2", "*", 
     RowBox[{"\[Psi]2", "'"}]}], "+", 
    RowBox[{"m1", "*", "\[Psi]1m"}], "+", 
    RowBox[{"m2", "*", 
     RowBox[{"\[Psi]1m", "'"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "\[Minus]", "v", "\[Minus]", "p", "-", "m1", "-", "m2"}], 
      ")"}], "*", "\[Psi]g1"}]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Symbiont", " ", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"S2", " ", "=", "  ", 
   RowBox[{
    RowBox[{"v1", "*", 
     RowBox[{"\[Psi]1", "'"}]}], "+", 
    RowBox[{"v2", "*", "\[Psi]2"}], "+", 
    RowBox[{"m1", "*", 
     RowBox[{"\[Psi]1m", "'"}]}], "+", 
    RowBox[{"m2", "*", "\[Psi]2m"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "\[Minus]", "v", "\[Minus]", "p", "-", "m1", "-", "m2"}], 
      ")"}], "*", "\[Psi]g1"}]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Symbiont", " ", "2"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"H1", "=", 
   RowBox[{
    RowBox[{"u", "*", "pi1"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "u"}], ")"}], "*", 
     RowBox[{"pi1", "'"}]}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"H2", " ", "=", " ", 
   RowBox[{
    RowBox[{"u", "*", 
     RowBox[{"pi2", "'"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "\[Minus]", "u"}], ")"}], "*", "pi2"}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "2"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"HM1", "=", 
   RowBox[{
    RowBox[{"u", "*", "pi1m"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "u"}], ")"}], "*", 
     RowBox[{"pi1m", "'"}]}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "1", " ", "mutant"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"HM2", "=", 
   RowBox[{
    RowBox[{"u", "*", "pi2m"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "u"}], ")"}], "*", 
     RowBox[{"pi2m", "'"}]}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "2", " ", "mutant"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"HG", " ", "=", " ", "pig"}], ";", 
  RowBox[{"(*", 
   RowBox[{"Generalist", " ", "Host"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Hbar", " ", "=", " ", 
   RowBox[{
    RowBox[{"v1", "*", "H1"}], "+", 
    RowBox[{"v2", "*", "H2"}], "+", 
    RowBox[{"m1", "*", "HM1"}], "+", 
    RowBox[{"m2", "*", "HM2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "v1", "-", "v2", "-", "m1", "-", "m2"}], ")"}], "*", 
     "HG"}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "Payoff", " ", "received", " ", "by", " ", "a", " ", "host", " ", "on", 
    " ", "average"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.820074540790298*^9, 3.820074650592514*^9}, {
  3.820074704049736*^9, 3.820074717162568*^9}, {3.8200751483683453`*^9, 
  3.82007516640654*^9}, {3.820075284605606*^9, 3.820075470716382*^9}, {
  3.820075518414898*^9, 3.820075521414131*^9}, {3.8200755663574*^9, 
  3.820075568724152*^9}, {3.820075641858447*^9, 3.820075656545648*^9}, {
  3.820075978882987*^9, 3.820076018347522*^9}, {3.82007605048739*^9, 
  3.820076100443137*^9}, {3.8200764591376963`*^9, 3.820076478707473*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"635e88c1-6499-4462-8f96-f8850316fcf5"],

Cell["\<\
Finally, we\[CloseCurlyQuote]ll find expressions for the frequency of each \
strategist: \
\>", "Text",
 CellChangeTimes->{{3.820076105824135*^9, 3.820076115462105*^9}, {
  3.820076499431931*^9, 
  3.820076500609165*^9}},ExpressionUUID->"899206d0-b70a-4f9b-bbf4-\
1ba7f73cc059"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"S", " ", "=", " ", 
    RowBox[{"u", 
     RowBox[{"(", 
      RowBox[{"1", "-", "u"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"S1", "-", "S2"}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Symbiont", " ", "1"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V1", "=", 
    RowBox[{"v1", 
     RowBox[{"(", 
      RowBox[{"H1", "-", "Hbar"}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "1"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V2", "=", 
    RowBox[{"v2", 
     RowBox[{"(", 
      RowBox[{"H2", "-", "Hbar"}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "2"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M1", "=", 
    RowBox[{"m1", 
     RowBox[{"(", 
      RowBox[{"HM1", "-", "Hbar"}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "1", " ", "Mutant"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M2", "=", 
   RowBox[{"m2", 
    RowBox[{"(", 
     RowBox[{"HM2", "-", "Hbar"}], ")"}]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Host", " ", "2", " ", "Mutant"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.820075578568108*^9, 3.8200756540991077`*^9}, {
  3.8200756978737497`*^9, 3.820075710614533*^9}, {3.820076391596644*^9, 
  3.820076593781057*^9}, {3.820076680443733*^9, 3.8200766827389517`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"42a772f9-a9e5-4928-8fa5-f71dd13e47b2"],

Cell["Now we can put these equations together in a system: ", "Text",
 CellChangeTimes->{{3.8200766040599537`*^9, 
  3.820076611912072*^9}},ExpressionUUID->"f9cae45d-5370-401a-a3b8-\
c13d67c30b56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"replicators", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S", ",", "V1", ",", "V2", ",", "M1", ",", "M2"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v1", "\[Rule]", " ", 
       RowBox[{"v1", "[", "t", "]"}]}], ",", 
      RowBox[{"v2", "\[Rule]", " ", 
       RowBox[{"v2", "[", "t", "]"}]}], ",", 
      RowBox[{"m1", "\[Rule]", " ", 
       RowBox[{"m1", "[", "t", "]"}]}], ",", 
      RowBox[{"m2", "\[Rule]", " ", 
       RowBox[{"m2", "[", "t", "]"}]}], ",", " ", 
      RowBox[{"u", "\[Rule]", " ", 
       RowBox[{"u", "[", "t", "]"}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.820076620185747*^9, 3.8200769072845497`*^9}, {
   3.820076939671936*^9, 3.820077112049193*^9}, 3.8200774908225594`*^9, 
   3.820077599097251*^9, {3.820077988107574*^9, 3.8200779916857357`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"1d9d94f3-f1d9-4ee9-80ac-3922591cd7b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"u", "'"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{"replicators", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"v1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{"replicators", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"v2", "'"}], "[", "t", "]"}], "==", 
     RowBox[{"replicators", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"m1", "'"}], "[", "t", "]"}], "==", 
     RowBox[{"replicators", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"m2", "'"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{"replicators", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"u", "[", "0", "]"}], "\[Equal]", "u0"}], ",", 
    RowBox[{
     RowBox[{"v1", "[", "0", "]"}], "\[Equal]", 
     RowBox[{"v10", "-", "m10"}]}], ",", 
    RowBox[{
     RowBox[{"m1", "[", "0", "]"}], "\[Equal]", "m10"}], ",", 
    RowBox[{
     RowBox[{"m2", "[", "0", "]"}], "\[Equal]", "m20"}]}], "}"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.820076620185747*^9, 3.8200769072845497`*^9}, {
  3.820076939671936*^9, 3.820077109575203*^9}, {3.820077164056706*^9, 
  3.820077284264411*^9}, {3.820077434724482*^9, 3.820077437506111*^9}, {
  3.820077499648258*^9, 3.82007758687038*^9}, {3.820077623381263*^9, 
  3.820077663964994*^9}, {3.820077743409766*^9, 3.8200777515183353`*^9}, {
  3.82007780552614*^9, 3.820077825731173*^9}, {3.820077996573312*^9, 
  3.820078008695033*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"ba9df848-0b30-484b-b4c0-6caff1897d85"],

Cell[BoxData[
 RowBox[{
  RowBox[{"System", "[", 
   RowBox[{
   "\[Alpha]_", ",", "\[Alpha]m_", ",", " ", "\[Alpha]2_", ",", "\[Alpha]2m_",
     ",", "\[Alpha]g_", ",", "c_", ",", "x_", ",", "u0_", ",", "v10_", ",", 
    "v20_", ",", "m10_", ",", "m20_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["u", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"u", "[", "t", "]"}]}], ")"}], " ", 
      RowBox[{"u", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}], " ", 
         RowBox[{"m1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]m", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"m1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]2m"}], ")"}], " ", 
         RowBox[{"m2", "[", "t", "]"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]m", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"m2", "[", "t", "]"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"v1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"v1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]2"}], ")"}], " ", 
         RowBox[{"v2", "[", "t", "]"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]2", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"v2", "[", "t", "]"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["v1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"v1", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]"}], ")"}], " ", 
         RowBox[{"u", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"m2", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]2m", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]2m"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"m1", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]m", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]m"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]g"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"m1", "[", "t", "]"}], "-", 
           RowBox[{"m2", "[", "t", "]"}], "-", 
           RowBox[{"v1", "[", "t", "]"}], "-", 
           RowBox[{"v2", "[", "t", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]2"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]2", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v2", "[", "t", "]"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["v2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"v2", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]2"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]2", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"u", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"m2", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]2m", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]2m"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"m1", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]m", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]m"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]g"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"m1", "[", "t", "]"}], "-", 
           RowBox[{"m2", "[", "t", "]"}], "-", 
           RowBox[{"v1", "[", "t", "]"}], "-", 
           RowBox[{"v2", "[", "t", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]2"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]2", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v2", "[", "t", "]"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["m1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"m1", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]m", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]m"}], ")"}], " ", 
         RowBox[{"u", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"m2", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]2m", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]2m"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"m1", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]m", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]m"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]g"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"m1", "[", "t", "]"}], "-", 
           RowBox[{"m2", "[", "t", "]"}], "-", 
           RowBox[{"v1", "[", "t", "]"}], "-", 
           RowBox[{"v2", "[", "t", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]2"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]2", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v2", "[", "t", "]"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["m2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"m2", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["\[Alpha]2m", 
               FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]2m"}], ")"}], " ", 
         RowBox[{"u", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"m2", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]2m", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]2m"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"m1", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]m", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]m"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]"}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v1", "[", "t", "]"}]}], "-", 
        RowBox[{"x", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Alpha]g"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"m1", "[", "t", "]"}], "-", 
           RowBox[{"m2", "[", "t", "]"}], "-", 
           RowBox[{"v1", "[", "t", "]"}], "-", 
           RowBox[{"v2", "[", "t", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", "\[Alpha]2"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"u", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"x", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "x"}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["\[Alpha]2", 
                  FractionBox["1", "c"]]}], ")"}], "c"]}], ")"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], " ", 
         RowBox[{"v2", "[", "t", "]"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"u", "[", "0", "]"}], "\[Equal]", "u0"}], ",", 
    RowBox[{
     RowBox[{"v1", "[", "0", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"-", "m10"}], "+", "v10"}]}], ",", 
    RowBox[{
     RowBox[{"v2", "[", "0", "]"}], "\[Equal]", "v20"}], ",", 
    RowBox[{
     RowBox[{"m1", "[", "0", "]"}], "\[Equal]", "m10"}], ",", 
    RowBox[{
     RowBox[{"m2", "[", "0", "]"}], "\[Equal]", "m20"}]}], "}"}], 
  RowBox[{"(*", 
   RowBox[{"Here", ",", " ", 
    RowBox[{
    "we", " ", "format", " ", "this", " ", "system", " ", "appropriately", 
     " ", "for", " ", "our", " ", "simulations", " ", "note", " ", "that", 
     " ", "we", " ", "begin", " ", "from", " ", "initial", " ", "conditions", 
     " ", "for", " ", "u"}], ",", " ", 
    SubscriptBox["v", "1"], ",", " ", "v2", ",", " ", 
    RowBox[{
    "v1m", " ", "and", " ", "v2m", " ", "given", " ", "by", " ", "u0"}], ",", 
    " ", "v10", ",", " ", "v20", ",", " ", 
    RowBox[{"v1m0", " ", "and", " ", "v2m0", " ", "respectively"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.820077613777912*^9, {3.820077667327895*^9, 3.820077668618091*^9}, 
   3.820077756879919*^9, 3.820077815826428*^9, 3.820078005063295*^9, {
   3.820079127099118*^9, 3.82007913948002*^9}, {3.82010140137175*^9, 
   3.820101415505237*^9}, {3.820101451532885*^9, 3.820101491100531*^9}, 
   3.82010161101751*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"efb4714d-27a5-4c14-81cb-fa6f19ff033a"],

Cell["\<\
Now we will set up our system with reasonable initial parameters, the \
tradeoff between matched and mismatching will be concave up.  For now the \
mutant hosts will be absent. The only hosts present will be host 1 and hosts \
2. First we\[CloseCurlyQuote]ll observe the normal cycling of this \
population: \
\>", "Text",
 CellChangeTimes->{{3.820078794922841*^9, 3.820078826867312*^9}, {
  3.820078870363222*^9, 3.820078881390521*^9}, {3.820078948579644*^9, 
  3.820078990222575*^9}},ExpressionUUID->"cbf4d816-ac44-4688-a5ff-\
542f18b894d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "First", " ", "we", " ", "test", " ", "the", " ", "system", " ", "to", " ",
     "make", " ", "sure", " ", "no", " ", "inappropriate", " ", "characters", 
    " ", "remain"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"System", "[", 
    RowBox[{
    "\[Alpha]_", ",", "\[Alpha]m_", ",", " ", "\[Alpha]2_", ",", 
     "\[Alpha]2m_", ",", "\[Alpha]_", ",", "c_", ",", "x_", ",", "u0_", ",", 
     "v10_", ",", "v20_", ",", "m10_", ",", "m20_"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"System", "[", 
    RowBox[{
    "0.6", ",", "0", ",", " ", "0.6", ",", "0", ",", "0.3", ",", "2", ",", 
     "0.5", ",", "0.6", ",", "0.4", ",", "0.34", ",", "0", ",", "0"}], "]"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.8200773392396297`*^9, 3.820077411420702*^9}, {
   3.820077444977874*^9, 3.820077453223187*^9}, 3.820077881585555*^9, {
   3.8201015218598957`*^9, 3.820101554527413*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"17923676-2212-439c-89de-cfde1e9ec669"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Next", " ", "we", " ", "solve", " ", "this", " ", 
    RowBox[{"system", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"System", "[", 
        RowBox[{
        "0.6", ",", "0.9", ",", " ", "0.6", ",", "0.9", ",", "0.3", ",", "2", 
         ",", "0.5", ",", "0.25", ",", "0.28", ",", "0.24", ",", "0", ",", 
         "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v1", ",", "v2", ",", "m1", ",", "m2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "3000"}], "}"}], ",", 
       RowBox[{"Method", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}],
          "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8200778841439323`*^9, 3.820077911391017*^9}, {
   3.820078328566712*^9, 3.820078329872385*^9}, 3.820078776489026*^9, {
   3.820096672554236*^9, 3.82009667274153*^9}, {3.820101556619596*^9, 
   3.820101568449052*^9}, 3.820103855434948*^9, {3.82010389053207*^9, 
   3.8201038988540173`*^9}},ExpressionUUID->"508a3694-b983-4c54-b9ea-\
76167aa58024"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Store", " ", "the", " ", "functions", " ", "for", " ", "u", 
     RowBox[{"(", "t", ")"}]}], ",", " ", 
    RowBox[{
     SubscriptBox["v", "1"], 
     RowBox[{"(", "t", ")"}]}], ",", " ", 
    RowBox[{
     SubscriptBox["v", "2"], 
     RowBox[{"(", "t", ")"}]}], ",", 
    RowBox[{
     SubscriptBox["v", "1"], "m", 
     RowBox[{"(", "t", ")"}]}], ",", " ", 
    RowBox[{
     SubscriptBox["v", "2"], "m", 
     RowBox[{"(", "t", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "uans", ",", "v1ans", ",", "v2ans", ",", "m1ans", ",", "m2ans"}], "}"}],
      "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", "t", "]"}], ",", 
        RowBox[{"v1", "[", "t", "]"}], ",", 
        RowBox[{"v2", "[", "t", "]"}], ",", 
        RowBox[{"m1", "[", "t", "]"}], ",", 
        RowBox[{"m2", "[", "t", "]"}]}], "}"}], " ", " ", "/.", 
      RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.820078431710244*^9, 3.820078449185339*^9}, {
  3.8200787499809427`*^9, 3.820078765821282*^9}, {3.820101570979348*^9, 
  3.820101606102663*^9}, {3.820101643115839*^9, 3.82010165096978*^9}, {
  3.8201017466230993`*^9, 3.820101756650633*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"fc20b590-ddf3-4ef0-83eb-906b640f8f5c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Plot", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "uans", ",", "v1ans", ",", "v2ans", ",", "m1ans", ",", "m2ans"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1000", ",", "1200"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
     RowBox[{"Background", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"{", 
        RowBox[{
        "\"\<u (Symbiont 1)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(v\), \(1\)]\) (Specialist Host 1)\>\"", 
         ",", "\"\<\!\(\*SubscriptBox[\(v\), \(2\)]\) (Specialist Host \
2)\>\"", ",", "\"\<mutant Specialist 1\>\"", ",", 
         "\"\<mutant Specialist 2\>\""}], "}"}], "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Reviewing", " ", "the", " ", "plot", " ", "below"}], ",", " ", 
     RowBox[{
     "note", " ", "that", " ", "these", " ", "initial", " ", "parameters", 
      " ", "predispose", " ", "our", " ", "system", " ", "toward", " ", 
      "having", " ", "an", " ", "especially", " ", "large", " ", 
      "amplitude"}], ",", " ", 
     RowBox[{
     "which", " ", "will", " ", "make", " ", "invasion", " ", "more", " ", 
      "difficult", " ", "for", " ", "mutants", " ", "that", " ", "extract", 
      " ", "more", " ", "than", " ", "residents", " ", "since", " ", "if", 
      " ", "they", " ", "invade", " ", "at", " ", "a", " ", "trough"}], ",", 
     " ", 
     RowBox[{
     "the", " ", "population", " ", "will", " ", "be", " ", "largely", " ", 
      "composed", " ", "of", " ", "the", " ", "symbiont", " ", "they", " ", 
      "prefer", " ", 
      RowBox[{"less", "."}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.8200712230815697`*^9, {3.8200713616462517`*^9, 3.820071388382255*^9}, {
   3.8200714401908627`*^9, 3.820071442818894*^9}, {3.820071491186555*^9, 
   3.82007152362317*^9}, {3.820071610177971*^9, 3.8200717798302193`*^9}, {
   3.820071866401003*^9, 3.8200718703916283`*^9}, {3.8200719227179213`*^9, 
   3.820071982027236*^9}, {3.8200720147451057`*^9, 3.820072019329997*^9}, {
   3.82007208416026*^9, 3.820072215034031*^9}, {3.820072288744814*^9, 
   3.820072310307372*^9}, {3.8200769091423683`*^9, 3.820076910147409*^9}, 
   3.820077329006268*^9, {3.820078142391265*^9, 3.820078144925589*^9}, {
   3.8200783323554487`*^9, 3.820078352343083*^9}, {3.8200783851480513`*^9, 
   3.8200784114681883`*^9}, {3.8200784729274683`*^9, 
   3.8200784954985943`*^9}, {3.820078583348803*^9, 3.820078708502349*^9}, {
   3.820078762151143*^9, 3.820078763838608*^9}, {3.8200788933364477`*^9, 
   3.820078896487705*^9}, {3.820079182029969*^9, 3.820079206037171*^9}, {
   3.820101763364376*^9, 3.820101768312553*^9}, {3.820103900899835*^9, 
   3.820103981368751*^9}},ExpressionUUID->"83d75afc-c8d5-4f25-92c2-\
458c556aa55b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
kTuZwJsg+eqmFJV8e2oo3C3NhJcn/VmV6I3zGddAlAm+a6YEuNZQSXrBJ28V
PibMxT83D0LHPczmRHxiQKX1upsN6L+7Fy4UnGDALSnKw6XSVCJYtk1raT8D
fsbZ4jqgEr26tmuR9Qwotmrg70Jn9j8H6WoGXFm9ZfMqGSrJNhjN3VjKALX+
WDNrtO3nkqzKfAZ8iuVxT0S/ziiUbM1kQO4J5/hR9OVj9ybPP2aAs2RntaIs
xr/W4o//QwYo92lPnEcbu4fsWxvNAHZM2pIctPSa5CLdCAakHRdS/fTf50VX
aLLDGXBmlbvpFjkqOZN4uVLoLgPW9g5fv4YutVi+u/wOA0aiD8aVok9/7spi
BTDgkWVh1Sx6UiF2/oEfA2wkVo/vWUsljcUPNjF8GSDV47/YD/2lv27LbR8G
9D2YUnmDztkUL1DuzQA3e5kmHnl8Hm/01uvoZZtML+qgh9LMVVLQaTMBwrfR
l/aJ/NDF68nLZwVV6I8P9tOO4v17w96bzqMTi5cv7L2N83dszffdClTS9eSh
eZM/A5auNbnvgS64zxWgEcSA1Ck/zXL0+IxrjGAIA/Y8e9r9C33Jsi/heBgD
em6z3bcrUklRT0CCGJUBlw1XS15H98XkJ++PZAC/+OGKYjSvaebTSZzPlBFf
62/oqW7v8d8439o5RXPq66jkVIgu+GA8Lu1dRfLQ5ePHyobz8PqlhiPT6CVf
N/+uLGHA4y5vP5X1VFIloZ8p8IIBXU7jrzPRzP4jBVxNDLioKe7ARt+42bMt
vYsBixcYLFq/gUpOPFjjWz3EgF1ReQdT0KVlDzoPfWNAh+3o+1F059anK1/M
McB148owOSUqqXHlCn68mAmPqm81JaAlgqPd6mWYwPdhv1mMMpVEl3zp9zLD
vz91/96NPng0cuE9Oybs9M2+L7YR42Ftaid8iQnOK0V6ItBqdVO73cKZ0AoD
1uEqmP86q8KKW5jgyC80z0SX0b8YXBjF/dS5N1FgE5UEr5w6F/GdCZqO6SPB
aKsji+z0cb/HR15x8FelEgV+3zc7nRpB81Tqopfos41TXx76NkKzUk8G12aM
37bbte5RjcBdpf3BC91xYHxZxKtGOMdZfMldjUqezFSl2Mg3wZY9iTddtlDJ
sTPLHlz73QS89idPF6CZ218VMCWaoTtwtdEP9Jm4DFK4oxk8Gx/Iem2lkofv
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
sWh6ElJuea/uQ3PvGeR9NDwJKk/KiK0jjbQGFCtdqJuEPaJqd52daMTB5ri9
VQRePyAlG+iC+Sx5+c42Bbz+0s+DJZdp5PzGf2IfVCeAvSTS+jcaDiub+EhP
gMpj9Yu7r9CIOE+f3A+sl087nSNfoit1Iu8ETY1DrdbYYNNVGlH7Y1mnlzEO
HN6Wq6xrmN8+61cGSI6DakzmQ4lbNPKudBPdaGoUDmuLbDqGNns9Z8/bNwou
I+6V99FRjnzxWXWjkKOk3y/qQSObBgvrapNHQal8UmKZJ87vnvYJfctRUOiX
j1zgTSMXTZxlm6pHQHJNQuj72zRCbdm8tC90GBYl0W9UhuB6yHJUmNsxALYJ
gcZcoTQSr5iwpkpoAErj3NfvQ1/5aFsTP9kPjlE23Qy0+LuyA3mR/cC8q7y9
/y6NsBulXx7+2gfU6y9//r6H9TEiJPR4cS9IGH69tp1OI6cH86SWnOiGSwcn
jDzQ2xfcn5DU7IaGAz2KVegCOdH0M6LdcGvvi84DEXh+KB/KSmZ0wYBmqIZF
JO5/l/DdfaQLHsmt/eEWhevda9ePp5qdoDRzxK0wFvdj1ZC5iVk7WP8TbPiC
Fq6xZGnubAfqIuYa9TjcD55Zu0/ItMMv8QN1eeiwiHVjx6baoHaHluSTeBo5
m8Z3aWtIG5y+tbY6PQHn4+ozTlBTK0T5Da1gofdzd7cfLG2Ft6HxF9Yl0shq
WX+jQ8mtsCVObHkqWiFaWJ7/RitwVfI7JD/C84O5h567fCs8nPsq8DCZRo7x
rh1ZFdwCLQvzbQfQHzsrvOuvtQCvoMvT1Y8x31koNz493QLO0iybWLTKmvlj
hqQFtKC/4EEKxmM0QLrlVzO46kXzdaNbo0U3i/U0Q5LxUSuxVBrJX1oz1fOs
GRbbNvPeR5sz/vxod2+Gbt9Xx+hpWG/lr6XGczUDf4hvTit6h0ME/fVYE+yh
aS8QScd8XAhS5+uaIC3pWRYF7TJ5wFWO2gRuL7PnwjJo5KXahhzL9U0gwhv5
+E4WjSywTFrx1LkRiDpf2Rv0JLXOavpYI7jauDfxZNOIU4fodIxuI7wttf7t
gzb898fAWKoR/FwUjd1zcD3vXRm3rp0J+bEPzpSgYbaq7W8NEwbrltz6jj69
/q/EgQImaK39mHLpCZ7PqqN3qtOY8LWr5M/5XIz/oAzjrAUTZHmVhNPR99YU
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
MbGP8//Qemc8Vn/ZOg7/AzhJ9fg=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78162#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
XrFuk0JrJRciWOcelaPXbeVoBLG5UF6+c9ZQj07sD+vbeDVzYcOrxmLLfZhf
a8prGzg4fxbsGY5Db32wYm7UEBdO5D5d0YWOuehboz7GhdBMt1vn99OJrMyI
07KfXFBKa09PR/OeyR01/cOFkuR9X4bRn9Zk8jlOc2EsfpmGywE6Ee5msLXn
8iDoodeFQnR0Q/Pcv/w8UIjqj/yDdrIMUaAJ8sCUWvDD5yC+r3eEhhXO30Oh
ckplaI+FZ7SpOJ8HBN8xFzhEJ6FGSSZJOL8X+B3NC0WndIcnncf53sjnbU81
2qAsbVxS8v/v2yiJL9XH53PYcipFigc+7mHax9AXs1NHJaR5sNztx9UY9Jbx
lnRbGR68uHbqURtacN1dOmUFD/QdP1XLG+DnbbiSFSvLg55LW2Zt0Zl7dKYC
5XjgceGBcgp63vYwP5P/vy9z9t8pHjonKkBvCp1lcy5ssyE+n/o83QB5Huw7
xSp2Qvc39foMozssdw7noo+Jzk6rKvDgxrH4FT/RDFWzNyfQYmbzDXYdppNf
D9pf26DTjjjc8kRzt1Kn/v8+kLZhY/o79Marp7yE0Plmgsdm0J18Se4FeP/1
J3fN3WNEJx3lbyZ00XG2l7M90MJ3REcK/v++z6X4E6/RZjPz7RahA65VC/xB
Z7stMNfD9/vtPidP/QidNDPXltjg+1/xVT19Hc2gXEqwwfh03T23qAC9267w
my7Gz5wS9XIC/XVoOF8I41sRWWmnYoz1te5bXz7GXythSvQaeouXorcOrk/O
0y3FOWidoHmeebh+q5+dth9FvxWa/iK4lAeR+TSJLSZ0Ii7rEQ5LeOBd9uNK
BnrjBVEBS2EefK9aJ81Dr5adztNcxIPzdZaf1pnSSeXZ96mzCzAfut/KPUUz
FeceUsV8K+WOVfaiKUZs3uM5PFAbX3V9tRmdJGQ8KpyY4YLc7B12IlpkZ/RL
gvlMFSi61YF2PmrQvhvznV9kcK2cOZ24vrFdIjPBhWFZI5+H6CU2if4+w1wo
1pTc9uAonbjPJCePtHNhm87Btnr0xI7txnxfuZB86FaQ+DE6cdt9+OOPRtxP
xzu6KOgfok5dQSwunLyeQguxoJObf4QbjN7g/vdq2VOJ9k9fmXe9EOvRHaFB
weN0ktRgsej2Cy5sjHDUuYN+mjn5TyuVC39fqE34WOL6mchVGtO44PjKPrEE
/WTVU6N797jQ8/6hwT+0gbz039Q7XKisnkm6dYJO9oeoxty9yYXokXJzt5N0
MlxyoKXjNBfUN1gUXjpFJ6rcpLK+tVzoC5bIzEYHF2eei1yJ8RmsTfyO1qgd
2a0oyYXBTMPgW9Z0YuP33aqBnwsJyjpWIafppHxG1OtOFwcEdmyZm3GGTrxd
2/cr0TiQFzH4cwTtdrUoOzKQAzY/Uoe22+J51RY41uvBgdeFqxtfodfVzpkj
fp4DjruWp1Xa4ec3acQXa3Cgae88I9457C+acsRMmgfAP/G9zpbzdJJ229bM
r2oAtvF5q19Dx2pMjVDeDkDIh98Kf9AKFY+cSNIA7NUbnVhgj/Wg+9Hf31cG
IOXQl5j1l3A/3v6p0Inn33XznP4LjnSyabcsufe3D2beqVmkogNvXPBMH+yD
wE0lFQPo5Voc9Wdf+yByLivznBOd5EXtXX7+dR8UPh+8ZneVTpKlr+5Ndu+D
X4vXzlg74/qFG4aHjveC+6c4yWPX6cT0zmHjLdgfeKiFHNDzxvv3cjUn7Lpg
prz8ph86uvupqadxF/hazMt6j77wLChg3p4uCHT3FNvjg/X6xfBiEckuoL52
/LLTF88zDe5ybWonJO81u7zOD8/PuY5b9Cw7gLlfliIUiP3CktBDtydbwaj5
+IeD6Cc1Udmt7FaovfBgIhC9b1XpO6P0VmgKEjk+7y6dDO0WW+Nn3QpdVXyr
ptHO0pp7dlR9hUmj/tyRYDopXnd2jnPqF5C1yG6qCcP9Y6qaute7GVrIdROJ
+7ievWKB+ieaIXzjXqYF2l0hTCpMrRmEZlgfOtAJbe+ni7C/+5M8kjVMoZNH
LHGjt2eboOn7Zv8FdDqJKwmf99uyEehtk/8M0HsrG1YW7mqEw+XF7hT013GP
t3nSjfAxxtBRMhzPT764DU5fGyCPXLFUjKCTE0cOjn+zbgDq/cytJJJOWJyY
HFfXejB0d8nwR/8a/Uo9drweBG13K31GO8uc3OqlVQ/eOxkyRlHYL84LDIuZ
Xw8ObYPzraIxXz1fbJKIrQP9jRvbbjykk+/1a7pV62tBQOL7sTdoysVfq66/
wX7636vaGXTcTtHzs0m1sKv20Oc7sXievjBT4bjVwnr3i7nhcXTS6GKyVliu
FuaXpwXlJGC/cTRftNC9BuJea/qOotnza97lna8BlRzmjS2J+DyPj9mOmdeA
TfT4+Uz0qQjOCQWVGnh9SWNf6iM6Ufe58qG6oxpMTldpDaCPlH34nlpSDVwz
qx1Kj+nkVtd+/amEali2x3dNEpq2lfZD/Ew1XBWtmJP4BPtpm39P5g6xQZD/
xJ929Hc1E5/nbDYk/B4al03C5wvVdG7JZQOjW7TrIVo+OIkv0pMNa/MtSiKT
6aRHweVa2TI2vE3jFTSipytNXuz5xwLzeI9nEk8xH89mlm/rZ8HtwMQ4Ovrh
zoMVvoUsnC85t+6n4PpUXgoss2aBy+Gbziz06MDv6tlDLBDSWXRpcSr2P5+t
4/J2skB901bLELSxKnPZbREW0P9dVw9Mw3gwdGazPzFhw/cFWz+hec4/G57k
M+H9wMO1/Ol0csfMpH9xMhNGqkuW+aGrk5PkdAOYcPCJwKRXBp4/VTyGqj4T
OiOjh4rRIwPNVo1aTLh+b2PvFDq289u84a1MSHI1qruZSSeGdbtF3KWYoHmx
q7IIbScZrjqyiAk1p5w//EKfbdYfb+Jjwsz+yOduWXSyYCe9UHCYAQ92r0/L
R8sfeRRk1MOAzdteJ06gr8Vs9lv4hQGW0h33rz3D+v6tMKD1MwPGha8GPkfz
Dl+1+v6OAYFz53qPoTfz5Kc9ixiQP6Tk4JCN+y25UXskgwHWix1e5qFb0iUD
FZMZILglf85f9D+uWvZQPAOeH54yIDk4D9R1PdWJZsAJR53IQLRwednxDeEM
4KcEdzHR82IpuYn3GfAsp2bj0ud0IhVo/+RpCAOO1Ui5WaKvvleW3X2XAXzf
rN8lotNaBCRsAhiQsSRl4QD67U0Rbwk/BpipjJhtfoHzxHF14+O+DJg23ZHg
jLa7cSpwkw8DUlw8uEXoTYbH5e57M8A4olRlFi1uOLvEF/0nf6HXvlzsv8RZ
Z+bgzz9pNP58D520e1pUHO9n+DNqSR36JW396tzbDPgp2XlyeR7OUyKj8d3+
DEhUX5tijf7jLBD8KJABB487jCejs7uuj4wGM+C7e77mEJpRefYLM4wBcTFT
Advz6eTxRsmTmnQG7HutU30D/UiU4asexYDRr8HSJej5/7ad/BjHgOipGjv+
Ajo5eP4oX/cTBujILs/WR4s87g4MS2fAkNbp31R0trz3/KrnDIg4laLTjG4Z
eRUeieu313skVK4Q39/2gdHEewZwE3Y026HvGmSYd1UygP7OY1UGmutO/3iq
ngH9fEKFai+xv2QpnBHiMuD+KhM+L/RexXtNuyYYoKETrV+G9vmgo/v3///v
5b+280gR9mPrbsYpL2eCWrLDhki0/Mz+9idKmO8f813a0Nt+ChanqTJBRUB3
wcVXdLKrvGP+JRMmtK0NMc1Bx57Uq1Y6w4Q7B2rjfqB5pywnXK4xoSXo9Ha/
13QyOPRoaUU4E7wXeZ6IfYP9EoS4Hu1kwvrNZcnd6BNn7crTJ5hQayg0tq4Y
z+MPKfL0BSxQvB/tn4+WXX6dLb+DBVViBVmst1gvtyu67qSzwHX79M+lJVj/
rh6w3JbJAjlTXe0TaC2fxOUfPrLganht4wBa5aGr+NM/LJDJX66w5R2dCM3v
Lf0twYayhtOXXNAuaaPqvdvYcOVHSv4r9NFNXRlnD7NBUnJ05r/9B/IjhThC
a7PO2QMAaQlF4g==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78162#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78162#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxN0G1Ik2EYBeBXKyea4gxE1FBzrq3cwEVuRS7nCofMRA2MkZqSDaW5xKWU
zgxBZ5qVWX4MG9I0FdHQN52pGYlhRtbSiRk0yhyIpsRqQop9QOw8NxwO168D
d2iWOjnblaKohL/517MzYa5UzK0Y6v8ZS+hWLeGC8JOSTcK+RRfKHBI4KaBz
e1UKT5/jb36Igye/iX70J8KjjFM2ZQYsnGf5aK7D0X4uBnErXGxW63Kew/Hc
6kHRFzh5wxK+SN12WtYx4rvFhBcaViMm9sECseGKSgDPCDjLSil89NOhakkK
HD2pU7zOgnUULX9UADetZ+ZnlcP2CJtJXQ8vd/TzeG1w28cdllc03HX2gME0
AV+un9FXWIi9gJThdhsstAa6F23A3QplJZtxx+lcVhWX4w+vGXnb7hzY+3wg
1SyEC/OtLK0MNh5mlxw/AwfKpI6UHJjf1NnifxVmtNYVjVTB3I0kTV8zzNxZ
/7CyC76XGEx5PYUzl8uufZ2C7UeyI/UL8PR8sJtxBVbz07xqNuHuF4sSlmed
04K2mCbvIFgrDgmbPwgz2XNv7cdgidzSOZYAC7mpA7lpcOHp3iVlHlwcdSPu
RCkclNoz9+4mvOtlh673AUyvhKtUPXD6btVgP2EGj3b5RViRF3u/ohemvqeP
GR7DckcD830fvER5DEQNwrWhSZSWsCi2MX6ccE0525poIv7lJnXPGYJLPUsU
+mGYEzFu/EzYLPdY3z8Cs2oby2nCUz5Put+MwprILceeZ/DeZKlEQfjSXbPF
RjiA9g/hjcHjsxm5BYQv/mynhwj7+a1t/yb8ByJ7HoQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78162#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxN0G1Ik2EYBeBXKyea4gxE1FBzrq3cwEVuRS7nCofMRA2MkZqSDaW5xKWU
zgxBZ5qVWX4MG9I0FdHQN52pGYlhRtbSiRk0yhyIpsRqQop9QOw8NxwO168D
d2iWOjnblaKohL/517MzYa5UzK0Y6v8ZS+hWLeGC8JOSTcK+RRfKHBI4KaBz
e1UKT5/jb36Igye/iX70J8KjjFM2ZQYsnGf5aK7D0X4uBnErXGxW63Kew/Hc
6kHRFzh5wxK+SN12WtYx4rvFhBcaViMm9sECseGKSgDPCDjLSil89NOhakkK
HD2pU7zOgnUULX9UADetZ+ZnlcP2CJtJXQ8vd/TzeG1w28cdllc03HX2gME0
AV+un9FXWIi9gJThdhsstAa6F23A3QplJZtxx+lcVhWX4w+vGXnb7hzY+3wg
1SyEC/OtLK0MNh5mlxw/AwfKpI6UHJjf1NnifxVmtNYVjVTB3I0kTV8zzNxZ
/7CyC76XGEx5PYUzl8uufZ2C7UeyI/UL8PR8sJtxBVbz07xqNuHuF4sSlmed
04K2mCbvIFgrDgmbPwgz2XNv7cdgidzSOZYAC7mpA7lpcOHp3iVlHlwcdSPu
RCkclNoz9+4mvOtlh673AUyvhKtUPXD6btVgP2EGj3b5RViRF3u/ohemvqeP
GR7DckcD830fvER5DEQNwrWhSZSWsCi2MX6ccE0525poIv7lJnXPGYJLPUsU
+mGYEzFu/EzYLPdY3z8Cs2oby2nCUz5Put+MwprILceeZ/DeZKlEQfjSXbPF
RjiA9g/hjcHjsxm5BYQv/mynhwj7+a1t/yb8ByJ7HoQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78162#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1000.0000040816326`, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1000.0000040816326`, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1000.0000040816326`, 1199.9999959183674`}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"u (Symbiont 1)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(1\\)]\\) (Specialist Host 1)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(2\\)]\\) (Specialist Host 2)\"", 
       "\"mutant Specialist 1\"", "\"mutant Specialist 2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.820078399330184*^9, 3.8200784120442247`*^9}, {
   3.820078476864304*^9, 3.82007852583002*^9}, {3.820078625844583*^9, 
   3.8200786339177322`*^9}, 3.820078714335011*^9, 3.820078768753364*^9, {
   3.820078887200089*^9, 3.820078897274891*^9}, 3.820079153012507*^9, 
   3.82007920784814*^9, 3.8200795197496367`*^9, 3.8200966764495296`*^9, 
   3.820103684825542*^9, 3.82010386074641*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"5317051d-e9c4-448b-8f5d-7b43fb14d080"]
}, Open  ]],

Cell["Next, we\[CloseCurlyQuote]ll add a mutant host at a point in the cycle: \
", "Text",
 CellChangeTimes->{{3.820079022906906*^9, 3.82007903682833*^9}, {
  3.820079211732085*^9, 
  3.820079215659602*^9}},ExpressionUUID->"6aa50446-aea7-413d-bedc-\
342c43a5d80e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"System", "[", 
      RowBox[{
      "0.6", ",", "0.9", ",", " ", "0.6", ",", "0.9", ",", "0.3", ",", "2", 
       ",", "0.5", ",", "0.25", ",", "0.28", ",", "0.24", ",", "0", ",", 
       "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v1", ",", "v2", ",", "m1", ",", "m2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "3000"}], "}"}], ",", 
     RowBox[{"Method", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"uans", ",", "v1ans", ",", "v2ans", ",", "m1ans", ",", "m2ans"}], 
    "}"}], "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], ",", 
      RowBox[{"v1", "[", "t", "]"}], ",", 
      RowBox[{"v2", "[", "t", "]"}], ",", 
      RowBox[{"m1", "[", "t", "]"}], ",", 
      RowBox[{"m2", "[", "t", "]"}]}], "}"}], " ", " ", "/.", 
    RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"uf", ",", " ", "v1f", ",", "v2f", ",", "m1f", ",", "m2f"}], 
    "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", "1257", "]"}], ",", 
      RowBox[{"v1", "[", "1257", "]"}], ",", 
      RowBox[{"v2", "[", "1257", "]"}], ",", 
      RowBox[{"m1", "[", "1257", "]"}], ",", 
      RowBox[{"m2", "[", "1257", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", "sol", "]"}]}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Find", " ", "the", " ", "value", " ", "of", " ", "the", " ", "function", 
     " ", "when", " ", "t"}], "=", "1257"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Add", " ", "a", " ", "new", " ", "host", " ", "1", " ", "mutant", " ", 
     "at", " ", "this", " ", "point", " ", "in", " ", "time", " ", "whose", 
     " ", "frequency", " ", "is", " ", "0.05"}], ":"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"System", "[", 
      RowBox[{
      "0.6", ",", "0.9", ",", " ", "0.6", ",", "0", ",", "0.3", ",", "2", ",",
        "0.5", ",", "uf", ",", "v1f", ",", "v2f", ",", "0.05", ",", "0"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v1", ",", "v2", ",", "m1", ",", "m2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "3000"}], "}"}], ",", 
     RowBox[{"Method", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"uans", ",", "v1ans", ",", "v2ans", ",", "m1ans", ",", "m2ans"}], 
    "}"}], "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], ",", 
      RowBox[{"v1", "[", "t", "]"}], ",", 
      RowBox[{"v2", "[", "t", "]"}], ",", 
      RowBox[{"m1", "[", "t", "]"}], ",", 
      RowBox[{"m2", "[", "t", "]"}]}], "}"}], " ", " ", "/.", 
    RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"uans", ",", "v1ans", ",", "v2ans", ",", "m1ans", ",", "m2ans"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "200"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
   RowBox[{"Background", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<u (Symbiont 1)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(v\), \(1\)]\) (Specialist Host 1)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(v\), \(2\)]\) (Specialist Host 2)\>\"", ",", 
       "\"\<mutant Specialist 1\>\"", ",", "\"\<mutant Specialist 2\>\""}], 
      "}"}], "]"}]}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.820079219485734*^9, 3.820079460587549*^9}, {
   3.820079506518652*^9, 3.820079540534601*^9}, {3.820096650306705*^9, 
   3.820096650552979*^9}, 3.820096961118079*^9, {3.820101782258525*^9, 
   3.8201018513844147`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"d3d3ca86-0e56-43e3-809e-63eeafb73c3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7743657892905119`", ",", "0.4068491131783485`", ",", 
   "0.5931507809573704`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.820079461545147*^9, 3.820079507374735*^9, 
  3.820079554675723*^9, 3.820096512827716*^9, 3.820096651726274*^9, 
  3.820096692557973*^9, 3.820096962925811*^9, 3.820097028902802*^9, 
  3.8201018568169737`*^9, 3.8201036848763103`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"a6e0a0db-c711-4119-961c-aa78f7d377f7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
cd2TIVhn3Dt8J9IGL2UvD5yL/Aa15Zb7z0bb4N4rvyU2a32DOKlWV5vrNpiT
0q8cvfEbCG6tHRWMs8H+LVzZyrEDgI1F4/lpNpi9Vhi04eFXiDx+d6K93AZl
ivzaVgr7gElPb4ZnxQZXz13VucHUA7XvKo8sM9ki20zDgkBNN8QdhMBBFlvU
k+79tHi7GwQ3KsxmcdjibiYJ8UT+bsDq/fPK/LY4WWaxkKDeBZFaawv2qrYY
++DHuqtxHcB0rHhd+nlbzLxIE719pRXstOj1PRG2GDHo6cuwaIVC3d0JOy7b
4pbSB8MtIq3gYRQqGhVji+ZdctXHq1ug1f7ocfeHtriOM2h0flsLPD1XnSBZ
ZosSdqfpGeGNsHz+r+NJqi3uXRUpMDrUCFYRYgdTq2zRctJSZ+e3BtgcHfNh
W5Mtdpw5V72k3QCBd40GZgZs8a3XvX5uoc+gldN18AOTHZaLN4Z6sddB6puN
09Msdih3YCwignjP/itQKpHYZIcc7wpbH8TVQs6HFMNHO+zw2u0mhwneWthZ
4+R/UdgO36ud+FWsVAN+9XdU3ovaIfn6/G86cw3UN1LWT0vYYThjrxh3UzVc
6BBOJMva4SHrWlGrU9UwPjReoq1lh3ve8fPrvqgCHOOJvqBnhxNs7dm7g6sg
haF34p2hHWq4/13o0K8Co18vv4lZ2qGakNLVDTM0eLd8hoXD3Q5jz7ZNsJ+g
ASdTeqOWpx0yuaqILxyggff61sSIM3ZIMfO/QVmrBMHNsuK/zhH5WElc6yyq
hOs8f0+0XbPDRfeQv9/+q4SE2tqRipt2mDRJ6o/ZUglp51POv71jhzp/g6bH
flVAcZ/6i4QkO3RUZ/LOKK6AsbToZatMO6z+2SwoalgBv02s4nVf2SHLUfbG
g7IVsLxOTEzpjR1G2X3KbeSrAG63z+a87+zQvNXyJNMPKmiIcb7qq7bDr59m
QvruU8Hoywg21Nuh2cpvh55LVLCNKer62GSHrd0DpWcIf+j3w4Y5tcsOm/Ij
/pH1qRD+WCI5ttcOD8je8i9XpMJ1o+VDFwfs0Psuc1yuKBXS8tJsSeN2eJGt
RUaPlQovXfx/mUzY4U9etQu/5ilQzKl55diUHbo0FiyKMijQdHY8T3jeDhkK
l0kaDRToPfBeh2vRDnva1h8TIfz7WNeN/vWrdqh8exfEFxB+WukQ29gGewy7
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
Qs9vIx+TjOshJ9fj99QUhQXkHvV9YfXwf8lMWns=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1634#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Dz+usHD3//9oQHKTaT6PzQ4/I5J5Vw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1634#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1634#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1634#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxNz30s1HEcB/Afk6vWTfQgdvNwPTmruVs3SXSyPIQ77iJPnbhz7ncewiHU
JQ9NHq48LdVwMY+xoZMku3TmIcpw+SdsaMvDaj146ELnqi2fb+/tvfdef74t
ebEcgS6GYcw//bvkAk21zGzsDPYvHdsp5jF4C2PLypTmGiu8G9xPjRfq4yPg
11KV+6pwGjxon9X5WfgVPFQ0Gb8g1II9FATWnNDAacvDRNsdelwLsHOBy6t6
byuwwGadSCNSwUyK4Pt+NzpYPn4jadDODnzayLpF76YDWLhRXFEb4ASO7Z8/
0cJ0BucF6R/WRJ8D8weuR9BwV7CSYMKOCnQH0wzTSxcTPcChy47HWNFe4CpZ
H0l9hwVuu2s/qeL4gBNfOPpUeLHB3UO1S7nBHLDI7ZRCFHABXN5Aa4+K9AUX
LSsy4pL9wHONSVdx8UVwr2vxg8xMf7CO98SHgvQAMHb2mU5laiA4x1jNVN0O
AscF8XvUWcHg2Qx6OOPeJfDekocTuVVccN1u69SBshCwUmzucrTpMlhmUUly
9A0FKyTrGD6KbOlJ+HXQPwz8dISS/34cWdq/SbXg8sAlCYuRoVPIkn1mBuRA
PvgxZdtQ4gyy/oqOiTIkHFxPfZImm0em8BpZmhgBePJ8p9zvE7Kq+tpxRkIE
+Gcb24G8hKx9Lm7PviIEe1JdXSSryANcG1FUAg424uNdFUnIIXgVcTQZ+Yd4
j5wuQT6Uo17X3EJOl3dLC0uR7Qk+re2dyNm7cnUXupDHDHt8TV8i4yT6WloP
8n3aAWf3N8grwTPvJqaQncJMjhCnkfMjOCmMWWRyfC+p5iMyO7tBEPMFuTx/
tuPRN+SFQtOdqqX//pRJm23VyG8r+zDRGrJx3SanbAOZ13SydliD3Nwap9Zq
kX8DV+EaCA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1634#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 199.99999591836735`}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"u (Symbiont 1)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(1\\)]\\) (Specialist Host 1)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(2\\)]\\) (Specialist Host 2)\"", 
       "\"mutant Specialist 1\"", "\"mutant Specialist 2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.820079461545147*^9, 3.820079507374735*^9, 
  3.820079554675723*^9, 3.820096512827716*^9, 3.820096651726274*^9, 
  3.820096692557973*^9, 3.820096962925811*^9, 3.820097028902802*^9, 
  3.8201018568169737`*^9, 3.820103684981228*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"2563e49f-04e2-4060-9402-17b59584bdea"]
}, Open  ]],

Cell["\<\
We see here that this host introduced at an arbitrary time point successfully \
invades. Now let\[CloseCurlyQuote]s more systematically consider the outcome \
of invasion across a cycle\[CloseCurlyQuote]s period. To do so first we need \
to find the length of a cycle\[CloseCurlyQuote]s period, and define a \
function to find the average of an NDSolve output. \
\>", "Text",
 CellChangeTimes->{{3.820101863612158*^9, 
  3.820101925729607*^9}},ExpressionUUID->"61a3aefc-3fc3-4e16-a896-\
ad35e95a8403"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.820079431857091*^9, 3.820079443470641*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"6bc315c4-fedd-4bd1-8a9e-e79580b0978b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "A", " ", "function", " ", "to", " ", "find", " ", "the", " ", "average", 
    " ", "of", " ", "an", " ", "interpolating", " ", "function", " ", "over", 
    " ", "a", " ", "given", " ", "period", " ", "in", " ", "time", " ", 
    "from", " ", "a", " ", "to", " ", 
    RowBox[{"b", ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindAverage", "[", 
      RowBox[{"fun_", ",", "a_", ",", "b_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}]}], ")"}], "*", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{"fun", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "a", ",", "b"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "4"}]}], "]"}]}]}], ";"}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{"Next", " ", 
     RowBox[{"we", "'"}], "ll", " ", "find", " ", "the", " ", 
     RowBox[{"cycle", "'"}], "s", " ", "period", " ", "by", " ", "comparing", 
     " ", "the", " ", "difference", " ", "in", " ", "time", " ", "between", 
     " ", "two", " ", "different", " ", 
     RowBox[{"extrema", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"System", "[", 
        RowBox[{
        "0.6", ",", "0.9", ",", " ", "0.6", ",", "0.9", ",", "0.3", ",", "2", 
         ",", "0.5", ",", "0.25", ",", "0.28", ",", "0.24", ",", "0", ",", 
         "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v1", ",", "v2", ",", "m1", ",", "m2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "3000"}], "}"}], ",", 
       RowBox[{"Method", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}],
          "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "uans", ",", "v1ans", ",", "v2ans", ",", "m1ans", ",", "m2ans"}], "}"}],
      "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", "t", "]"}], ",", 
        RowBox[{"v1", "[", "t", "]"}], ",", 
        RowBox[{"v2", "[", "t", "]"}], ",", 
        RowBox[{"m1", "[", "t", "]"}], ",", 
        RowBox[{"m2", "[", "t", "]"}]}], "}"}], " ", " ", "/.", 
      RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "uans", ",", "v1ans", ",", "v2ans", ",", "m1ans", ",", "m2ans"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1000", ",", "1200"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
     RowBox[{"Background", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"{", 
        RowBox[{
        "\"\<u (Symbiont 1)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(v\), \(1\)]\) (Specialist Host 1)\>\"", 
         ",", "\"\<\!\(\*SubscriptBox[\(v\), \(2\)]\) (Specialist Host \
2)\>\"", ",", "\"\<mutant Specialist 1\>\"", ",", 
         "\"\<mutant Specialist 2\>\""}], "}"}], "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Period", " ", "of", " ", "v1", 
      RowBox[{"(", "t", ")"}]}], ":"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"FindMinimum", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1ans", ",", 
       RowBox[{"1030", "\[LessEqual]", "t", "\[LessEqual]", "1060"}]}], "}"}],
      ",", "t"}], "]"}], 
   RowBox[{"(*", 
    RowBox[{"First", " ", "trough"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"FindMinimum", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1ans", ",", 
       RowBox[{"1070", "\[LessEqual]", "t", "\[LessEqual]", "1100"}]}], "}"}],
      ",", "t"}], "]"}], 
   RowBox[{"(*", 
    RowBox[{"Second", " ", "Trough"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Period", " ", "of", " ", "v2", 
      RowBox[{"(", "t", ")"}]}], ":"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"FindMinimum", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v2ans", ",", 
       RowBox[{"1005", "\[LessEqual]", "t", "\[LessEqual]", "1050"}]}], "}"}],
      ",", "t"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FindMinimum", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v2ans", ",", 
       RowBox[{"1055", "\[LessEqual]", "t", "\[LessEqual]", "1100"}]}], "}"}],
      ",", "t"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Period", " ", "of", " ", "u", 
     RowBox[{"(", "t", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"FindMinimum", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"uans", ",", 
       RowBox[{"1010", "\[LessEqual]", "t", "\[LessEqual]", "1050"}]}], "}"}],
      ",", "t"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"FindMinimum", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"uans", ",", 
       RowBox[{"1060", "\[LessEqual]", "t", "\[LessEqual]", "1100"}]}], "}"}],
      ",", "t"}], "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQHe6Y1+RY9sbxuNXKDhAt0Vo5E0TP+9AMprnrOjeC
aIsD+VtB9K0NJfdB9CtTm5cgetOUN99B9KNYsV8gOsG3n8sJSIecfqMAohsk
HqiB6DC+ORog+vriH4Yg+sGLCHsQ/a9rqxuIdpP+GwyiT/glRIFolVTbDBCd
E1i0C0S7iP8C01UM3GouQDqP46g+iHbhaHQG0VIZXWD62NHFUSB6MsO+BBAd
xDEnH0SHfFtZC6I5DiR2gOiOr+LTQPQpVbs5INpmsz+YfmhyezGIbrybtQlE
z7vXsw1E/03ftQNEH15zZB+InnRe9CaIBgCvZJ5z
  "],
 CellLabel->"In[26]:=",ExpressionUUID->"ab5b5e4b-a11f-46f8-8b80-5ef76cef6610"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
kTuZwJsg+eqmFJV8e2oo3C3NhJcn/VmV6I3zGddAlAm+a6YEuNZQSXrBJ28V
PibMxT83D0LHPczmRHxiQKX1upsN6L+7Fy4UnGDALSnKw6XSVCJYtk1raT8D
fsbZ4jqgEr26tmuR9Qwotmrg70Jn9j8H6WoGXFm9ZfMqGSrJNhjN3VjKALX+
WDNrtO3nkqzKfAZ8iuVxT0S/ziiUbM1kQO4J5/hR9OVj9ybPP2aAs2RntaIs
xr/W4o//QwYo92lPnEcbu4fsWxvNAHZM2pIctPSa5CLdCAakHRdS/fTf50VX
aLLDGXBmlbvpFjkqOZN4uVLoLgPW9g5fv4YutVi+u/wOA0aiD8aVok9/7spi
BTDgkWVh1Sx6UiF2/oEfA2wkVo/vWUsljcUPNjF8GSDV47/YD/2lv27LbR8G
9D2YUnmDztkUL1DuzQA3e5kmHnl8Hm/01uvoZZtML+qgh9LMVVLQaTMBwrfR
l/aJ/NDF68nLZwVV6I8P9tOO4v17w96bzqMTi5cv7L2N83dszffdClTS9eSh
eZM/A5auNbnvgS64zxWgEcSA1Ck/zXL0+IxrjGAIA/Y8e9r9C33Jsi/heBgD
em6z3bcrUklRT0CCGJUBlw1XS15H98XkJ++PZAC/+OGKYjSvaebTSZzPlBFf
62/oqW7v8d8439o5RXPq66jkVIgu+GA8Lu1dRfLQ5ePHyobz8PqlhiPT6CVf
N/+uLGHA4y5vP5X1VFIloZ8p8IIBXU7jrzPRzP4jBVxNDLioKe7ARt+42bMt
vYsBixcYLFq/gUpOPFjjWz3EgF1ReQdT0KVlDzoPfWNAh+3o+1F059anK1/M
McB148owOSUqqXHlCn68mAmPqm81JaAlgqPd6mWYwPdhv1mMMpVEl3zp9zLD
vz91/96NPng0cuE9Oybs9M2+L7YR42Ftaid8iQnOK0V6ItBqdVO73cKZ0AoD
1uEqmP86q8KKW5jgyC80z0SX0b8YXBjF/dS5N1FgE5UEr5w6F/GdCZqO6SPB
aKsji+z0cb/HR15x8FelEgV+3zc7nRpB81Tqopfos41TXx76NkKzUk8G12aM
37bbte5RjcBdpf3BC91xYHxZxKtGOMdZfMldjUqezFSl2Mg3wZY9iTddtlDJ
sTPLHlz73QS89idPF6CZ218VMCWaoTtwtdEP9Jm4DFK4oxk8Gx/Iem2lkofv
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
sWh6ElJuea/uQ3PvGeR9NDwJKk/KiK0jjbQGFCtdqJuEPaJqd52daMTB5ri9
VQRePyAlG+iC+Sx5+c42Bbz+0s+DJZdp5PzGf2IfVCeAvSTS+jcaDiub+EhP
gMpj9Yu7r9CIOE+f3A+sl087nSNfoit1Iu8ETY1DrdbYYNNVGlH7Y1mnlzEO
HN6Wq6xrmN8+61cGSI6DakzmQ4lbNPKudBPdaGoUDmuLbDqGNns9Z8/bNwou
I+6V99FRjnzxWXWjkKOk3y/qQSObBgvrapNHQal8UmKZJ87vnvYJfctRUOiX
j1zgTSMXTZxlm6pHQHJNQuj72zRCbdm8tC90GBYl0W9UhuB6yHJUmNsxALYJ
gcZcoTQSr5iwpkpoAErj3NfvQ1/5aFsTP9kPjlE23Qy0+LuyA3mR/cC8q7y9
/y6NsBulXx7+2gfU6y9//r6H9TEiJPR4cS9IGH69tp1OI6cH86SWnOiGSwcn
jDzQ2xfcn5DU7IaGAz2KVegCOdH0M6LdcGvvi84DEXh+KB/KSmZ0wYBmqIZF
JO5/l/DdfaQLHsmt/eEWhevda9ePp5qdoDRzxK0wFvdj1ZC5iVk7WP8TbPiC
Fq6xZGnubAfqIuYa9TjcD55Zu0/ItMMv8QN1eeiwiHVjx6baoHaHluSTeBo5
m8Z3aWtIG5y+tbY6PQHn4+ozTlBTK0T5Da1gofdzd7cfLG2Ft6HxF9Yl0shq
WX+jQ8mtsCVObHkqWiFaWJ7/RitwVfI7JD/C84O5h567fCs8nPsq8DCZRo7x
rh1ZFdwCLQvzbQfQHzsrvOuvtQCvoMvT1Y8x31koNz493QLO0iybWLTKmvlj
hqQFtKC/4EEKxmM0QLrlVzO46kXzdaNbo0U3i/U0Q5LxUSuxVBrJX1oz1fOs
GRbbNvPeR5sz/vxod2+Gbt9Xx+hpWG/lr6XGczUDf4hvTit6h0ME/fVYE+yh
aS8QScd8XAhS5+uaIC3pWRYF7TJ5wFWO2gRuL7PnwjJo5KXahhzL9U0gwhv5
+E4WjSywTFrx1LkRiDpf2Rv0JLXOavpYI7jauDfxZNOIU4fodIxuI7wttf7t
gzb898fAWKoR/FwUjd1zcD3vXRm3rp0J+bEPzpSgYbaq7W8NEwbrltz6jj69
/q/EgQImaK39mHLpCZ7PqqN3qtOY8LWr5M/5XIz/oAzjrAUTZHmVhNPR99YU
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
MbGP8//Qemc8Vn/ZOg7/AzhJ9fg=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1759#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
XrFuk0JrJRciWOcelaPXbeVoBLG5UF6+c9ZQj07sD+vbeDVzYcOrxmLLfZhf
a8prGzg4fxbsGY5Db32wYm7UEBdO5D5d0YWOuehboz7GhdBMt1vn99OJrMyI
07KfXFBKa09PR/OeyR01/cOFkuR9X4bRn9Zk8jlOc2EsfpmGywE6Ee5msLXn
8iDoodeFQnR0Q/Pcv/w8UIjqj/yDdrIMUaAJ8sCUWvDD5yC+r3eEhhXO30Oh
ckplaI+FZ7SpOJ8HBN8xFzhEJ6FGSSZJOL8X+B3NC0WndIcnncf53sjnbU81
2qAsbVxS8v/v2yiJL9XH53PYcipFigc+7mHax9AXs1NHJaR5sNztx9UY9Jbx
lnRbGR68uHbqURtacN1dOmUFD/QdP1XLG+DnbbiSFSvLg55LW2Zt0Zl7dKYC
5XjgceGBcgp63vYwP5P/vy9z9t8pHjonKkBvCp1lcy5ssyE+n/o83QB5Huw7
xSp2Qvc39foMozssdw7noo+Jzk6rKvDgxrH4FT/RDFWzNyfQYmbzDXYdppNf
D9pf26DTjjjc8kRzt1Kn/v8+kLZhY/o79Marp7yE0Plmgsdm0J18Se4FeP/1
J3fN3WNEJx3lbyZ00XG2l7M90MJ3REcK/v++z6X4E6/RZjPz7RahA65VC/xB
Z7stMNfD9/vtPidP/QidNDPXltjg+1/xVT19Hc2gXEqwwfh03T23qAC9267w
my7Gz5wS9XIC/XVoOF8I41sRWWmnYoz1te5bXz7GXythSvQaeouXorcOrk/O
0y3FOWidoHmeebh+q5+dth9FvxWa/iK4lAeR+TSJLSZ0Ii7rEQ5LeOBd9uNK
BnrjBVEBS2EefK9aJ81Dr5adztNcxIPzdZaf1pnSSeXZ96mzCzAfut/KPUUz
FeceUsV8K+WOVfaiKUZs3uM5PFAbX3V9tRmdJGQ8KpyY4YLc7B12IlpkZ/RL
gvlMFSi61YF2PmrQvhvznV9kcK2cOZ24vrFdIjPBhWFZI5+H6CU2if4+w1wo
1pTc9uAonbjPJCePtHNhm87Btnr0xI7txnxfuZB86FaQ+DE6cdt9+OOPRtxP
xzu6KOgfok5dQSwunLyeQguxoJObf4QbjN7g/vdq2VOJ9k9fmXe9EOvRHaFB
weN0ktRgsej2Cy5sjHDUuYN+mjn5TyuVC39fqE34WOL6mchVGtO44PjKPrEE
/WTVU6N797jQ8/6hwT+0gbz039Q7XKisnkm6dYJO9oeoxty9yYXokXJzt5N0
MlxyoKXjNBfUN1gUXjpFJ6rcpLK+tVzoC5bIzEYHF2eei1yJ8RmsTfyO1qgd
2a0oyYXBTMPgW9Z0YuP33aqBnwsJyjpWIafppHxG1OtOFwcEdmyZm3GGTrxd
2/cr0TiQFzH4cwTtdrUoOzKQAzY/Uoe22+J51RY41uvBgdeFqxtfodfVzpkj
fp4DjruWp1Xa4ec3acQXa3Cgae88I9457C+acsRMmgfAP/G9zpbzdJJ229bM
r2oAtvF5q19Dx2pMjVDeDkDIh98Kf9AKFY+cSNIA7NUbnVhgj/Wg+9Hf31cG
IOXQl5j1l3A/3v6p0Inn33XznP4LjnSyabcsufe3D2beqVmkogNvXPBMH+yD
wE0lFQPo5Voc9Wdf+yByLivznBOd5EXtXX7+dR8UPh+8ZneVTpKlr+5Ndu+D
X4vXzlg74/qFG4aHjveC+6c4yWPX6cT0zmHjLdgfeKiFHNDzxvv3cjUn7Lpg
prz8ph86uvupqadxF/hazMt6j77wLChg3p4uCHT3FNvjg/X6xfBiEckuoL52
/LLTF88zDe5ybWonJO81u7zOD8/PuY5b9Cw7gLlfliIUiP3CktBDtydbwaj5
+IeD6Cc1Udmt7FaovfBgIhC9b1XpO6P0VmgKEjk+7y6dDO0WW+Nn3QpdVXyr
ptHO0pp7dlR9hUmj/tyRYDopXnd2jnPqF5C1yG6qCcP9Y6qaute7GVrIdROJ
+7ievWKB+ieaIXzjXqYF2l0hTCpMrRmEZlgfOtAJbe+ni7C/+5M8kjVMoZNH
LHGjt2eboOn7Zv8FdDqJKwmf99uyEehtk/8M0HsrG1YW7mqEw+XF7hT013GP
t3nSjfAxxtBRMhzPT764DU5fGyCPXLFUjKCTE0cOjn+zbgDq/cytJJJOWJyY
HFfXejB0d8nwR/8a/Uo9drweBG13K31GO8uc3OqlVQ/eOxkyRlHYL84LDIuZ
Xw8ObYPzraIxXz1fbJKIrQP9jRvbbjykk+/1a7pV62tBQOL7sTdoysVfq66/
wX7636vaGXTcTtHzs0m1sKv20Oc7sXievjBT4bjVwnr3i7nhcXTS6GKyVliu
FuaXpwXlJGC/cTRftNC9BuJea/qOotnza97lna8BlRzmjS2J+DyPj9mOmdeA
TfT4+Uz0qQjOCQWVGnh9SWNf6iM6Ufe58qG6oxpMTldpDaCPlH34nlpSDVwz
qx1Kj+nkVtd+/amEali2x3dNEpq2lfZD/Ew1XBWtmJP4BPtpm39P5g6xQZD/
xJ929Hc1E5/nbDYk/B4al03C5wvVdG7JZQOjW7TrIVo+OIkv0pMNa/MtSiKT
6aRHweVa2TI2vE3jFTSipytNXuz5xwLzeI9nEk8xH89mlm/rZ8HtwMQ4Ovrh
zoMVvoUsnC85t+6n4PpUXgoss2aBy+Gbziz06MDv6tlDLBDSWXRpcSr2P5+t
4/J2skB901bLELSxKnPZbREW0P9dVw9Mw3gwdGazPzFhw/cFWz+hec4/G57k
M+H9wMO1/Ol0csfMpH9xMhNGqkuW+aGrk5PkdAOYcPCJwKRXBp4/VTyGqj4T
OiOjh4rRIwPNVo1aTLh+b2PvFDq289u84a1MSHI1qruZSSeGdbtF3KWYoHmx
q7IIbScZrjqyiAk1p5w//EKfbdYfb+Jjwsz+yOduWXSyYCe9UHCYAQ92r0/L
R8sfeRRk1MOAzdteJ06gr8Vs9lv4hQGW0h33rz3D+v6tMKD1MwPGha8GPkfz
Dl+1+v6OAYFz53qPoTfz5Kc9ixiQP6Tk4JCN+y25UXskgwHWix1e5qFb0iUD
FZMZILglf85f9D+uWvZQPAOeH54yIDk4D9R1PdWJZsAJR53IQLRwednxDeEM
4KcEdzHR82IpuYn3GfAsp2bj0ud0IhVo/+RpCAOO1Ui5WaKvvleW3X2XAXzf
rN8lotNaBCRsAhiQsSRl4QD67U0Rbwk/BpipjJhtfoHzxHF14+O+DJg23ZHg
jLa7cSpwkw8DUlw8uEXoTYbH5e57M8A4olRlFi1uOLvEF/0nf6HXvlzsv8RZ
Z+bgzz9pNP58D520e1pUHO9n+DNqSR36JW396tzbDPgp2XlyeR7OUyKj8d3+
DEhUX5tijf7jLBD8KJABB487jCejs7uuj4wGM+C7e77mEJpRefYLM4wBcTFT
Advz6eTxRsmTmnQG7HutU30D/UiU4asexYDRr8HSJej5/7ad/BjHgOipGjv+
Ajo5eP4oX/cTBujILs/WR4s87g4MS2fAkNbp31R0trz3/KrnDIg4laLTjG4Z
eRUeieu313skVK4Q39/2gdHEewZwE3Y026HvGmSYd1UygP7OY1UGmutO/3iq
ngH9fEKFai+xv2QpnBHiMuD+KhM+L/RexXtNuyYYoKETrV+G9vmgo/v3///v
5b+280gR9mPrbsYpL2eCWrLDhki0/Mz+9idKmO8f813a0Nt+ChanqTJBRUB3
wcVXdLKrvGP+JRMmtK0NMc1Bx57Uq1Y6w4Q7B2rjfqB5pywnXK4xoSXo9Ha/
13QyOPRoaUU4E7wXeZ6IfYP9EoS4Hu1kwvrNZcnd6BNn7crTJ5hQayg0tq4Y
z+MPKfL0BSxQvB/tn4+WXX6dLb+DBVViBVmst1gvtyu67qSzwHX79M+lJVj/
rh6w3JbJAjlTXe0TaC2fxOUfPrLganht4wBa5aGr+NM/LJDJX66w5R2dCM3v
Lf0twYayhtOXXNAuaaPqvdvYcOVHSv4r9NFNXRlnD7NBUnJ05r/9B/IjhThC
a7PO2QMAaQlF4g==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1759#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1759#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxN0G1Ik2EYBeBXKyea4gxE1FBzrq3cwEVuRS7nCofMRA2MkZqSDaW5xKWU
zgxBZ5qVWX4MG9I0FdHQN52pGYlhRtbSiRk0yhyIpsRqQop9QOw8NxwO168D
d2iWOjnblaKohL/517MzYa5UzK0Y6v8ZS+hWLeGC8JOSTcK+RRfKHBI4KaBz
e1UKT5/jb36Igye/iX70J8KjjFM2ZQYsnGf5aK7D0X4uBnErXGxW63Kew/Hc
6kHRFzh5wxK+SN12WtYx4rvFhBcaViMm9sECseGKSgDPCDjLSil89NOhakkK
HD2pU7zOgnUULX9UADetZ+ZnlcP2CJtJXQ8vd/TzeG1w28cdllc03HX2gME0
AV+un9FXWIi9gJThdhsstAa6F23A3QplJZtxx+lcVhWX4w+vGXnb7hzY+3wg
1SyEC/OtLK0MNh5mlxw/AwfKpI6UHJjf1NnifxVmtNYVjVTB3I0kTV8zzNxZ
/7CyC76XGEx5PYUzl8uufZ2C7UeyI/UL8PR8sJtxBVbz07xqNuHuF4sSlmed
04K2mCbvIFgrDgmbPwgz2XNv7cdgidzSOZYAC7mpA7lpcOHp3iVlHlwcdSPu
RCkclNoz9+4mvOtlh673AUyvhKtUPXD6btVgP2EGj3b5RViRF3u/ohemvqeP
GR7DckcD830fvER5DEQNwrWhSZSWsCi2MX6ccE0525poIv7lJnXPGYJLPUsU
+mGYEzFu/EzYLPdY3z8Cs2oby2nCUz5Put+MwprILceeZ/DeZKlEQfjSXbPF
RjiA9g/hjcHjsxm5BYQv/mynhwj7+a1t/yb8ByJ7HoQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1759#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxN0G1Ik2EYBeBXKyea4gxE1FBzrq3cwEVuRS7nCofMRA2MkZqSDaW5xKWU
zgxBZ5qVWX4MG9I0FdHQN52pGYlhRtbSiRk0yhyIpsRqQop9QOw8NxwO168D
d2iWOjnblaKohL/517MzYa5UzK0Y6v8ZS+hWLeGC8JOSTcK+RRfKHBI4KaBz
e1UKT5/jb36Igye/iX70J8KjjFM2ZQYsnGf5aK7D0X4uBnErXGxW63Kew/Hc
6kHRFzh5wxK+SN12WtYx4rvFhBcaViMm9sECseGKSgDPCDjLSil89NOhakkK
HD2pU7zOgnUULX9UADetZ+ZnlcP2CJtJXQ8vd/TzeG1w28cdllc03HX2gME0
AV+un9FXWIi9gJThdhsstAa6F23A3QplJZtxx+lcVhWX4w+vGXnb7hzY+3wg
1SyEC/OtLK0MNh5mlxw/AwfKpI6UHJjf1NnifxVmtNYVjVTB3I0kTV8zzNxZ
/7CyC76XGEx5PYUzl8uufZ2C7UeyI/UL8PR8sJtxBVbz07xqNuHuF4sSlmed
04K2mCbvIFgrDgmbPwgz2XNv7cdgidzSOZYAC7mpA7lpcOHp3iVlHlwcdSPu
RCkclNoz9+4mvOtlh673AUyvhKtUPXD6btVgP2EGj3b5RViRF3u/ohemvqeP
GR7DckcD830fvER5DEQNwrWhSZSWsCi2MX6ccE0525poIv7lJnXPGYJLPUsU
+mGYEzFu/EzYLPdY3z8Cs2oby2nCUz5Put+MwprILceeZ/DeZKlEQfjSXbPF
RjiA9g/hjcHjsxm5BYQv/mynhwj7+a1t/yb8ByJ7HoQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$1759#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1000.0000040816326`, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1000.0000040816326`, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1000.0000040816326`, 1199.9999959183674`}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"u (Symbiont 1)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(1\\)]\\) (Specialist Host 1)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(2\\)]\\) (Specialist Host 2)\"", 
       "\"mutant Specialist 1\"", "\"mutant Specialist 2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8201028833961973`*^9, {3.820102948309244*^9, 3.820103059813023*^9}, {
   3.820103099642964*^9, 3.8201031106194563`*^9}, {3.820103167940529*^9, 
   3.8201031977478313`*^9}, 3.8201032914120007`*^9, 3.8201033718251343`*^9, 
   3.8201036850944023`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"7e9bcc71-5cd4-4935-b272-cead30fcfee0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.21479628407399012`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "1045.3528308249681`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.8201028833961973`*^9, {3.820102948309244*^9, 3.820103059813023*^9}, {
   3.820103099642964*^9, 3.8201031106194563`*^9}, {3.820103167940529*^9, 
   3.8201031977478313`*^9}, 3.8201032914120007`*^9, 3.8201033718251343`*^9, 
   3.820103685196604*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"3af02675-57f6-4e86-a0b4-9ff9c0834236"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.2147964576492849`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "1095.7257693348422`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.8201028833961973`*^9, {3.820102948309244*^9, 3.820103059813023*^9}, {
   3.820103099642964*^9, 3.8201031106194563`*^9}, {3.820103167940529*^9, 
   3.8201031977478313`*^9}, 3.8201032914120007`*^9, 3.8201033718251343`*^9, 
   3.820103685217585*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"fc07b7d4-f1d5-4cdf-84f9-b562b55b0dcd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.2147961472723182`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "1020.1663561151629`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.8201028833961973`*^9, {3.820102948309244*^9, 3.820103059813023*^9}, {
   3.820103099642964*^9, 3.8201031106194563`*^9}, {3.820103167940529*^9, 
   3.8201031977478313`*^9}, 3.8201032914120007`*^9, 3.8201033718251343`*^9, 
   3.8201036852451773`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"54992ab4-11bc-4a5c-bec2-ce55cfc3076f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.2147963850817172`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "1070.5393028165583`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.8201028833961973`*^9, {3.820102948309244*^9, 3.820103059813023*^9}, {
   3.820103099642964*^9, 3.8201031106194563`*^9}, {3.820103167940529*^9, 
   3.8201031977478313`*^9}, 3.8201032914120007`*^9, 3.8201033718251343`*^9, 
   3.8201036852793503`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"22e4816c-77b7-4cff-8193-9f2360b44250"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.21479674294802675`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "1032.7595917080364`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.8201028833961973`*^9, {3.820102948309244*^9, 3.820103059813023*^9}, {
   3.820103099642964*^9, 3.8201031106194563`*^9}, {3.820103167940529*^9, 
   3.8201031977478313`*^9}, 3.8201032914120007`*^9, 3.8201033718251343`*^9, 
   3.8201036853130417`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"947a2e7a-7e62-4bd2-8874-694c66597823"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.2147966976406649`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "1083.132537374693`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.8201028833961973`*^9, {3.820102948309244*^9, 3.820103059813023*^9}, {
   3.820103099642964*^9, 3.8201031106194563`*^9}, {3.820103167940529*^9, 
   3.8201031977478313`*^9}, 3.8201032914120007`*^9, 3.8201033718251343`*^9, 
   3.820103685335308*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"616c05fe-9b81-4fe5-840b-0ff75fe2d20a"]
}, Open  ]],

Cell["\<\
A great sanity check! All of the functions have the same period of 50.4 \
timesteps. Now let\[CloseCurlyQuote]s consider what happens when we introduce \
a host 1 mutant with an increased value of alpha along the entirety of this \
period. First, we\[CloseCurlyQuote]ll see if the frequency of the mutant \
decreases shortly after the mutant is introduced: \
\>", "Text",
 CellChangeTimes->{{3.8201033809926357`*^9, 
  3.820103496906734*^9}},ExpressionUUID->"cba53069-edac-40dc-9fd3-\
f01c71c39ffa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"     ", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"sol", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"System", "[", 
          RowBox[{
          "0.6", ",", "0.9", ",", " ", "0.6", ",", "0.9", ",", "0.3", ",", 
           "2", ",", "0.5", ",", "0.25", ",", "0.28", ",", "0.24", ",", "0", 
           ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v1", ",", "v2", ",", "m1", ",", "m2"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "3000"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{
           "\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Note", " ", "that", " ", "in", " ", "order", " ", "to", " ", 
         "consider", " ", "the", " ", "most", " ", "extreme", " ", "scenario",
          " ", "that", " ", "would", " ", "lead", " ", "to", " ", "mutant", 
         " ", "extinction"}], ",", " ", 
        RowBox[{
        "mutants", " ", "have", " ", "a", " ", "value", " ", "of", " ", 
         "alpha", " ", "that", " ", "is", " ", "0.5", " ", "times", " ", 
         "greater", " ", "than", " ", "that", " ", "of", " ", 
         RowBox[{"residents", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"uf", ",", " ", "v1f", ",", "v2f", ",", "m1f", ",", "m2f"}], 
        "}"}], "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "[", "st", "]"}], ",", 
          RowBox[{"v1", "[", "st", "]"}], ",", 
          RowBox[{"v2", "[", "st", "]"}], ",", 
          RowBox[{"m1", "[", "st", "]"}], ",", 
          RowBox[{"m2", "[", "st", "]"}]}], "}"}], "/.", 
        RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", "\[IndentingNewLine]", 
      "                   ", 
      RowBox[{"sol", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"System", "[", 
          RowBox[{
          "0.6", ",", "0.9", ",", " ", "0.6", ",", "0", ",", "0.3", ",", "2", 
           ",", "0.5", ",", "uf", ",", "v1f", ",", "v2f", ",", "0.05", ",", 
           "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v1", ",", "v2", ",", "m1", ",", "m2"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "3000"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{
           "\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "uans", ",", "v1ans", ",", "v2ans", ",", "m1ans", ",", "m2ans"}], 
        "}"}], "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "[", "t", "]"}], ",", 
          RowBox[{"v1", "[", "t", "]"}], ",", 
          RowBox[{"v2", "[", "t", "]"}], ",", 
          RowBox[{"m1", "[", "t", "]"}], ",", 
          RowBox[{"m2", "[", "t", "]"}]}], "}"}], " ", " ", "/.", 
        RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"{", 
        RowBox[{"min", ",", "time"}], "}"}], "=", 
       RowBox[{"FindMinimum", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"m1ans", ",", 
           RowBox[{"10", "\[LessEqual]", "t", "\[LessEqual]", "100"}]}], 
          "}"}], ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"min", " ", "<", "0.05"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<t0 = \>\"", ",", " ", "st", ",", " ", "\"\<, min = \>\"", ",", 
          " ", "min"}], "]"}], ",", 
        RowBox[{"Unevaluated", "[", 
         RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ";"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"st", ",", "1255", ",", "1306", ",", "1"}], "}"}]}], "]"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.820100894348555*^9, 3.8201009559946632`*^9}, 
   3.820103422103723*^9, 3.820103470328063*^9, {3.820103559523849*^9, 
   3.8201035651724586`*^9}, {3.820104007052164*^9, 3.820104068620085*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"b69d6360-8128-47fc-be0d-1f3bb905e385"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1264", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.03834120208844508`"}],
  SequenceForm["t0 = ", 1264, ", min = ", 0.03834120208844508],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.8201040785588303`*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"1d32bfda-452c-448f-a8ca-dd17d2639a2d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1265", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.035330022478246036`"}],
  SequenceForm["t0 = ", 1265, ", min = ", 0.035330022478246036`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104078643342*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"f56088bf-2529-4da0-b4b5-13d86754c60a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1266", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.0326148607892178`"}],
  SequenceForm["t0 = ", 1266, ", min = ", 0.0326148607892178],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.8201040787327433`*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"cf3bfe5a-ae53-4e09-814f-4d3616d76dcc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1267", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.030201439981772812`"}],
  SequenceForm["t0 = ", 1267, ", min = ", 0.030201439981772812`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.82010407882055*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"63c3e592-3134-4be2-b629-9717d05315e4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1268", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.028086249159894855`"}],
  SequenceForm["t0 = ", 1268, ", min = ", 0.028086249159894855`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104078906294*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"08564c31-c197-461c-a83d-aa4c00df742b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1269", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.026259194593963416`"}],
  SequenceForm["t0 = ", 1269, ", min = ", 0.026259194593963416`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.8201040790054703`*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"bc74b370-fc63-4f42-bcc1-9a378d890ff8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1270", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.02470639953939236`"}],
  SequenceForm["t0 = ", 1270, ", min = ", 0.02470639953939236],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104079080799*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"a6b22330-7bfb-47a8-a077-6042797d5058"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1271", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.02341217379950782`"}],
  SequenceForm["t0 = ", 1271, ", min = ", 0.02341217379950782],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104079175066*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"2c59e846-d7bb-457b-8f9a-5cb4a291dc9e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1272", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.022360648156660976`"}],
  SequenceForm["t0 = ", 1272, ", min = ", 0.022360648156660976`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104079279525*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"be4de85e-4998-416c-9964-c84bf093f05f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1273", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.021537030343610136`"}],
  SequenceForm["t0 = ", 1273, ", min = ", 0.021537030343610136`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.82010407937296*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"078e3b0e-013d-420f-9bca-6e0d9477773d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1274", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.02092850046242569`"}],
  SequenceForm["t0 = ", 1274, ", min = ", 0.02092850046242569],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.82010407946596*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"43b52e62-aa9d-4916-9d6e-f479c24f0955"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1275", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.02052496620412441`"}],
  SequenceForm["t0 = ", 1275, ", min = ", 0.02052496620412441],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104079570858*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"6e79c320-1754-4d00-bbab-a6a307ad3ccb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1276", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.020319708832948456`"}],
  SequenceForm["t0 = ", 1276, ", min = ", 0.020319708832948456`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104079672917*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"43708ed7-5bbd-41b4-8eca-7d109c7124c6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1277", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.020309841207845722`"}],
  SequenceForm["t0 = ", 1277, ", min = ", 0.020309841207845722`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104079776774*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"40e7aa54-5121-474c-a8b3-3a899e9576bf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1278", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.020496735067634796`"}],
  SequenceForm["t0 = ", 1278, ", min = ", 0.020496735067634796`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104079830118*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"6452de0f-fb94-4905-bb72-286b06f47fb1"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"689.748732288435`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 44, 19, 
   27160686472002251850, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8201035009750843`*^9, 3.820103568087319*^9, 
  3.8201036876934023`*^9, 3.820104079866696*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"e6f9e8f1-0ab8-4221-b428-fb2a0841cdc3"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1279", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.020886257127348005`"}],
  SequenceForm["t0 = ", 1279, ", min = ", 0.020886257127348005`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.8201040799046707`*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"67863512-fb10-48fc-8b1c-d9a12ca854dd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1280", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.02148877109849212`"}],
  SequenceForm["t0 = ", 1280, ", min = ", 0.02148877109849212],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104079944606*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"f550ecda-c6b1-4b70-93e3-427935ed3d08"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1281", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.022318749643519865`"}],
  SequenceForm["t0 = ", 1281, ", min = ", 0.022318749643519865`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104079995554*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"878cf4a2-21e4-404b-a1f4-55243214e21f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1282", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.02339395081983788`"}],
  SequenceForm["t0 = ", 1282, ", min = ", 0.02339395081983788],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104080051156*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"adabc19b-9f5e-49bd-aa54-38bf65d02ecf"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"680.9824845076091`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 44, 20, 
   27160686472002251850, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8201035009750843`*^9, 3.820103568087319*^9, 
  3.8201036876934023`*^9, 3.820104080097704*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"6e1a8d6a-dcbc-4a4c-baa1-951c04bce6ed"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1283", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.024733809960431306`"}],
  SequenceForm["t0 = ", 1283, ", min = ", 0.024733809960431306`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104080130609*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"067727b1-cb84-439e-90b6-ff98ed4afd9e"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"391.36323290707475`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 44, 21, 
   27160686472002251850, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8201035009750843`*^9, 3.820103568087319*^9, 
  3.8201036876934023`*^9, 3.820104080161783*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"bb6713dd-8c1b-441a-901a-e51485e39962"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \
\\\"::\\\", \\\"ndsz\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 44, 22, 27160686472002251850, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8201035009750843`*^9, 3.820103568087319*^9, 
  3.8201036876934023`*^9, 3.820104080166379*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"e1dfcd16-2eb2-47ed-afc0-7ddca37c7eb3"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1284", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.02635677480443995`"}],
  SequenceForm["t0 = ", 1284, ", min = ", 0.02635677480443995],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104080197706*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"c316e761-b4b8-48b6-835d-5281caddfdbd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1285", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.02827918118447657`"}],
  SequenceForm["t0 = ", 1285, ", min = ", 0.02827918118447657],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104080243249*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"416ff9af-b20d-42d1-b1ac-52621ff78a1b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1286", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.030882301249989752`"}],
  SequenceForm["t0 = ", 1286, ", min = ", 0.030882301249989752`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.8201040803178577`*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"2f7d0cf3-dd04-4598-a69a-60c66b98f60d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1287", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.03459566076202297`"}],
  SequenceForm["t0 = ", 1287, ", min = ", 0.03459566076202297],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104080388476*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"84c6855c-b915-4df0-9679-ca363a8c6e15"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1288", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.039676963157908036`"}],
  SequenceForm["t0 = ", 1288, ", min = ", 0.039676963157908036`],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104080456704*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"267ce95f-9ec9-4e1b-8810-ff40a7ecda54"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"t0 = \"\>", "\[InvisibleSpace]", "1289", 
   "\[InvisibleSpace]", "\<\", min = \"\>", "\[InvisibleSpace]", 
   "0.0464389674160349`"}],
  SequenceForm["t0 = ", 1289, ", min = ", 0.0464389674160349],
  Editable->False]], "Print",
 CellChangeTimes->{3.820103499651622*^9, 3.8201035667970123`*^9, 
  3.820103686391734*^9, 3.820104080524803*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"632c9532-c0e4-485e-82aa-ddf42c9a5d80"]
}, Open  ]]
}, Open  ]],

Cell["\<\
This phenomenon is not uncommon. Let\[CloseCurlyQuote]s see if there are any \
particular points in the cycle where the mutant goes extinct: \
\>", "Text",
 CellChangeTimes->{{3.820103520221796*^9, 3.820103540595376*^9}, {
  3.8201035822447767`*^9, 
  3.820103588907406*^9}},ExpressionUUID->"ec104cdd-b07c-4c54-b5b4-\
0d987db553e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"     ", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"sol", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"System", "[", 
          RowBox[{
          "0.6", ",", "0.9", ",", " ", "0.6", ",", "0.9", ",", "0.3", ",", 
           "2", ",", "0.5", ",", "0.25", ",", "0.28", ",", "0.24", ",", "0", 
           ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v1", ",", "v2", ",", "m1", ",", "m2"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "3000"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{
           "\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "uans", ",", "v1ans", ",", "v2ans", ",", "m1ans", ",", "m2ans"}], 
        "}"}], "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "[", "t", "]"}], ",", 
          RowBox[{"v1", "[", "t", "]"}], ",", 
          RowBox[{"v2", "[", "t", "]"}], ",", 
          RowBox[{"m1", "[", "t", "]"}], ",", 
          RowBox[{"m2", "[", "t", "]"}]}], "}"}], " ", " ", "/.", 
        RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"{", 
        RowBox[{"uf", ",", " ", "v1f", ",", "v2f", ",", "m1f", ",", "m2f"}], 
        "}"}], "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "[", "st", "]"}], ",", 
          RowBox[{"v1", "[", "st", "]"}], ",", 
          RowBox[{"v2", "[", "st", "]"}], ",", 
          RowBox[{"m1", "[", "st", "]"}], ",", 
          RowBox[{"m2", "[", "st", "]"}]}], "}"}], "/.", 
        RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", "\[IndentingNewLine]", 
      "                   ", 
      RowBox[{"sol", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"System", "[", 
          RowBox[{
          "0.6", ",", "0.9", ",", " ", "0.6", ",", "0", ",", "0.3", ",", "2", 
           ",", "0.5", ",", "uf", ",", "v1f", ",", "v2f", ",", "0.05", ",", 
           "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", "v1", ",", "v2", ",", "m1", ",", "m2"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "3000"}], "}"}], ",", 
         RowBox[{"Method", "->", 
          RowBox[{"{", 
           RowBox[{
           "\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "uans", ",", "v1ans", ",", "v2ans", ",", "m1ans", ",", "m2ans"}], 
        "}"}], "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "[", "t", "]"}], ",", 
          RowBox[{"v1", "[", "t", "]"}], ",", 
          RowBox[{"v2", "[", "t", "]"}], ",", 
          RowBox[{"m1", "[", "t", "]"}], ",", 
          RowBox[{"m2", "[", "t", "]"}]}], "}"}], " ", " ", "/.", 
        RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"avg", "=", 
       RowBox[{"FindAverage", "[", 
        RowBox[{"m1ans", ",", "0", ",", "400"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "We", " ", "consider", " ", "the", " ", "average", " ", "frequency", 
        " ", "of", " ", "mutants", " ", "after", " ", "they", " ", 
        RowBox[{"invade", ".", " ", "If"}], " ", "this", " ", "number", " ", 
        "is", " ", "extremely", " ", "low", " ", "the", " ", "mutant", " ", 
        "does", " ", "not", " ", "successfully", " ", "invade"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"avg", " ", "<", "0.05"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<mutant goes extinct when mutants invade at t = \>\"", ",", " ", 
          "st"}], "]"}], ",", 
        RowBox[{"Unevaluated", "[", 
         RowBox[{"Sequence", "[", "]"}], "]"}]}], "]"}], ";"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"st", ",", "1255", ",", "1315", ",", "0.25"}], "}"}]}], "]"}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.820098458277676*^9, 3.820098463785267*^9}, {
   3.820098596358706*^9, 3.82009859798269*^9}, {3.820098851138894*^9, 
   3.8200990240435457`*^9}, {3.8200990589430847`*^9, 3.820099096999555*^9}, {
   3.820099159763151*^9, 3.820099279779254*^9}, {3.820099310931158*^9, 
   3.8200993155112457`*^9}, 3.820099381964094*^9, {3.8200994321580772`*^9, 
   3.8200995214468393`*^9}, {3.820099553336299*^9, 3.820099653924122*^9}, {
   3.820099687676009*^9, 3.8200998496571302`*^9}, {3.8200998880848513`*^9, 
   3.820099925858173*^9}, {3.820100060576672*^9, 3.820100205284009*^9}, {
   3.820100246583519*^9, 3.820100285359561*^9}, {3.820100344234112*^9, 
   3.82010040023587*^9}, {3.820100436210663*^9, 3.820100436768835*^9}, {
   3.820100475762761*^9, 3.820100643049107*^9}, {3.820100680202794*^9, 
   3.82010072723416*^9}, {3.8201011403664503`*^9, 3.820101140467565*^9}, {
   3.820102918568441*^9, 3.820102919275817*^9}, {3.8201035090701513`*^9, 
   3.8201035136525497`*^9}, {3.8201035975959997`*^9, 3.820103634968205*^9}, {
   3.820103746872794*^9, 3.820103781067686*^9}, {3.820104089825235*^9, 
   3.820104172837681*^9}, {3.820104325043511*^9, 3.820104338205572*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"34b68904-024d-44a9-b968-cc141e034737"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"689.7070267354729`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 64, 40, 
   27160686472002251850, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8201007001011*^9, 3.8201007299260178`*^9}, 
   3.820101143741919*^9, 3.820102922057094*^9, 3.820103644369359*^9, 
   3.8201036980682697`*^9, {3.8201037649458847`*^9, 3.8201037898707733`*^9}, {
   3.820104125395109*^9, 3.820104181801777*^9}, {3.8201043277894087`*^9, 
   3.820104347029696*^9}},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"521612a3-6958-41e7-8683-e5f00c1ace77"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"406.74551484214663`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 64, 41, 
   27160686472002251850, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8201007001011*^9, 3.8201007299260178`*^9}, 
   3.820101143741919*^9, 3.820102922057094*^9, 3.820103644369359*^9, 
   3.8201036980682697`*^9, {3.8201037649458847`*^9, 3.8201037898707733`*^9}, {
   3.820104125395109*^9, 3.820104181801777*^9}, {3.8201043277894087`*^9, 
   3.820104347176734*^9}},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"4952c59c-5980-479e-8e10-46dbc2736895"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"689.748732288435`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 64, 42, 
   27160686472002251850, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8201007001011*^9, 3.8201007299260178`*^9}, 
   3.820101143741919*^9, 3.820102922057094*^9, 3.820103644369359*^9, 
   3.8201036980682697`*^9, {3.8201037649458847`*^9, 3.8201037898707733`*^9}, {
   3.820104125395109*^9, 3.820104181801777*^9}, {3.8201043277894087`*^9, 
   3.820104347282961*^9}},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"f25ad057-3d44-411f-8ad8-0ded192a177b"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NDSolve\\\", \
\\\"::\\\", \\\"ndsz\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 64, 43, 27160686472002251850, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8201007001011*^9, 3.8201007299260178`*^9}, 
   3.820101143741919*^9, 3.820102922057094*^9, 3.820103644369359*^9, 
   3.8201036980682697`*^9, {3.8201037649458847`*^9, 3.8201037898707733`*^9}, {
   3.820104125395109*^9, 3.820104181801777*^9}, {3.8201043277894087`*^9, 
   3.820104347287552*^9}},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"06b164ab-6e06-4df9-a01a-ea8d6c0f0cc7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mutant goes extinct when mutants invade at t = \"\>", 
   "\[InvisibleSpace]", "1284.25`"}],
  SequenceForm["mutant goes extinct when mutants invade at t = ", 1284.25],
  Editable->False]], "Print",
 CellChangeTimes->{3.820104348300609*^9},
 CellLabel->
  "During evaluation of \
In[64]:=",ExpressionUUID->"c7e89915-d4ac-450f-8f1f-b4b6488a7579"]
}, Open  ]],

Cell["\<\
So on t whole, even in conditions that predispose mutants toward extinction, \
this phenomenon is relatively rare. In this case the mutant only successfully \
invaded at the absolute lowest frequency of their preferred symbiont. \
\>", "Text",
 CellChangeTimes->{{3.820103803817046*^9, 3.820103827364441*^9}, {
  3.820104187686699*^9, 
  3.8201042281014843`*^9}},ExpressionUUID->"db505c45-1cdb-43d3-baae-\
6bf32c67faf4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"System", "[", 
      RowBox[{
      "0.6", ",", "0.9", ",", " ", "0.6", ",", "0.9", ",", "0.3", ",", "2", 
       ",", "0.5", ",", "0.25", ",", "0.28", ",", "0.24", ",", "0", ",", 
       "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v1", ",", "v2", ",", "m1", ",", "m2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "3000"}], "}"}], ",", 
     RowBox[{"Method", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"uans", ",", "v1ans", ",", "v2ans", ",", "m1ans", ",", "m2ans"}], 
    "}"}], "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], ",", 
      RowBox[{"v1", "[", "t", "]"}], ",", 
      RowBox[{"v2", "[", "t", "]"}], ",", 
      RowBox[{"m1", "[", "t", "]"}], ",", 
      RowBox[{"m2", "[", "t", "]"}]}], "}"}], " ", " ", "/.", 
    RowBox[{"Flatten", "[", "sol", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"uf", ",", " ", "v1f", ",", "v2f", ",", "m1f", ",", "m2f"}], "}"}],
   "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "[", "1284.25", "]"}], ",", 
     RowBox[{"v1", "[", "1284.25", "]"}], ",", 
     RowBox[{"v2", "[", "1284.25", "]"}], ",", 
     RowBox[{"m1", "[", "1284.25", "]"}], ",", 
     RowBox[{"m2", "[", "1284.25", "]"}]}], "}"}], "/.", 
   RowBox[{"Flatten", "[", "sol", "]"}]}]}]}], "Input",
 CellChangeTimes->{
  3.820101180218399*^9, {3.820101223598439*^9, 3.820101295693001*^9}, {
   3.820101338081658*^9, 3.820101357187787*^9}, 3.820103656738452*^9, {
   3.8201042491925983`*^9, 3.820104310246787*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"9a983970-ac0b-4c7c-a2a6-65e27c8606a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.21505067336197298`", ",", "0.5146453894763351`", ",", 
   "0.4853545341678359`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.820104294507887*^9, 3.8201043169032097`*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"94590370-a627-4713-bcd1-97c98e9bae46"]
}, Open  ]]
},
WindowSize->{1061, 778},
WindowMargins->{{-3, Automatic}, {-1, Automatic}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9e8f2b02-90af-452b-b3f9-9039b9529f92"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 503, 11, 52, "Input",ExpressionUUID->"453339f7-e866-44b8-873d-6a274a1697c7"],
Cell[1064, 33, 597, 10, 58, "Text",ExpressionUUID->"f6175b1b-87e9-4352-ba8d-3cab4ef8015a"],
Cell[1664, 45, 410, 8, 58, "Text",ExpressionUUID->"cc8502a2-57a9-4962-9923-61c2daa8dd50"],
Cell[2077, 55, 3194, 83, 241, "Input",ExpressionUUID->"2eafe670-dae8-4fc9-9809-0c456fd6ceea"],
Cell[5274, 140, 3110, 74, 199, "Input",ExpressionUUID->"6f04f191-6665-4099-bf36-18513111ef43"],
Cell[8387, 216, 196, 3, 35, "Text",ExpressionUUID->"b40c5a95-a5fe-490f-8a98-fd92e89d6748"],
Cell[8586, 221, 3342, 90, 199, "Input",ExpressionUUID->"635e88c1-6499-4462-8f96-f8850316fcf5"],
Cell[11931, 313, 288, 7, 35, "Text",ExpressionUUID->"899206d0-b70a-4f9b-bbf4-1ba7f73cc059"],
Cell[12222, 322, 1473, 45, 136, "Input",ExpressionUUID->"42a772f9-a9e5-4928-8fa5-f71dd13e47b2"],
Cell[13698, 369, 197, 3, 35, "Text",ExpressionUUID->"f9cae45d-5370-401a-a3b8-c13d67c30b56"],
Cell[13898, 374, 931, 21, 30, "Input",ExpressionUUID->"1d9d94f3-f1d9-4ee9-80ac-3922591cd7b0"],
Cell[14832, 397, 1738, 46, 52, "Input",ExpressionUUID->"ba9df848-0b30-484b-b4c0-6caff1897d85"],
Cell[16573, 445, 21023, 579, 745, "Input",ExpressionUUID->"efb4714d-27a5-4c14-81cb-fa6f19ff033a"],
Cell[37599, 1026, 553, 10, 58, "Text",ExpressionUUID->"cbf4d816-ac44-4688-a5ff-542f18b894d0"],
Cell[38155, 1038, 1059, 23, 73, "Input",ExpressionUUID->"17923676-2212-439c-89de-cfde1e9ec669"],
Cell[39217, 1063, 1253, 28, 94, "Input",ExpressionUUID->"508a3694-b983-4c54-b9ea-76167aa58024"],
Cell[40473, 1093, 1438, 39, 73, "Input",ExpressionUUID->"fc20b590-ddf3-4ef0-83eb-906b640f8f5c"],
Cell[CellGroupData[{
Cell[41936, 1136, 3063, 62, 199, "Input",ExpressionUUID->"83d75afc-c8d5-4f25-92c2-458c556aa55b"],
Cell[45002, 1200, 93169, 1637, 256, "Output",ExpressionUUID->"5317051d-e9c4-448b-8f5d-7b43fb14d080"]
}, Open  ]],
Cell[138186, 2840, 264, 5, 35, "Text",ExpressionUUID->"6aa50446-aea7-413d-bedc-342c43a5d80e"],
Cell[CellGroupData[{
Cell[138475, 2849, 4415, 113, 283, "Input",ExpressionUUID->"d3d3ca86-0e56-43e3-809e-63eeafb73c3e"],
Cell[142893, 2964, 500, 9, 34, "Output",ExpressionUUID->"a6e0a0db-c711-4119-961c-aa78f7d377f7"],
Cell[143396, 2975, 127003, 2193, 257, "Output",ExpressionUUID->"2563e49f-04e2-4060-9402-17b59584bdea"]
}, Open  ]],
Cell[270414, 5171, 511, 9, 58, "Text",ExpressionUUID->"61a3aefc-3fc3-4e16-a896-ad35e95a8403"],
Cell[270928, 5182, 171, 2, 30, "Input",ExpressionUUID->"6bc315c4-fedd-4bd1-8a9e-e79580b0978b"],
Cell[CellGroupData[{
Cell[271124, 5188, 5711, 146, 409, "Input",ExpressionUUID->"ab5b5e4b-a11f-46f8-8b80-5ef76cef6610"],
Cell[276838, 5336, 93032, 1636, 256, "Output",ExpressionUUID->"7e9bcc71-5cd4-4935-b272-cead30fcfee0"],
Cell[369873, 6974, 517, 11, 34, "Output",ExpressionUUID->"3af02675-57f6-4e86-a0b4-9ff9c0834236"],
Cell[370393, 6987, 516, 11, 34, "Output",ExpressionUUID->"fc07b7d4-f1d5-4cdf-84f9-b562b55b0dcd"],
Cell[370912, 7000, 518, 11, 34, "Output",ExpressionUUID->"54992ab4-11bc-4a5c-bec2-ce55cfc3076f"],
Cell[371433, 7013, 518, 11, 34, "Output",ExpressionUUID->"22e4816c-77b7-4cff-8193-9f2360b44250"],
Cell[371954, 7026, 519, 11, 34, "Output",ExpressionUUID->"947a2e7a-7e62-4bd2-8874-694c66597823"],
Cell[372476, 7039, 515, 11, 34, "Output",ExpressionUUID->"616c05fe-9b81-4fe5-840b-0ff75fe2d20a"]
}, Open  ]],
Cell[373006, 7053, 509, 9, 81, "Text",ExpressionUUID->"cba53069-edac-40dc-9fd3-f01c71c39ffa"],
Cell[CellGroupData[{
Cell[373540, 7066, 4434, 108, 262, "Input",ExpressionUUID->"b69d6360-8128-47fc-be0d-1f3bb905e385"],
Cell[CellGroupData[{
Cell[377999, 7178, 499, 11, 24, "Print",ExpressionUUID->"1d32bfda-452c-448f-a8ca-dd17d2639a2d"],
Cell[378501, 7191, 500, 11, 24, "Print",ExpressionUUID->"f56088bf-2529-4da0-b4b5-13d86754c60a"],
Cell[379004, 7204, 497, 11, 24, "Print",ExpressionUUID->"cf3bfe5a-ae53-4e09-814f-4d3616d76dcc"],
Cell[379504, 7217, 499, 11, 24, "Print",ExpressionUUID->"63c3e592-3134-4be2-b629-9717d05315e4"],
Cell[380006, 7230, 500, 11, 24, "Print",ExpressionUUID->"08564c31-c197-461c-a83d-aa4c00df742b"],
Cell[380509, 7243, 502, 11, 24, "Print",ExpressionUUID->"bc74b370-fc63-4f42-bcc1-9a378d890ff8"],
Cell[381014, 7256, 497, 11, 24, "Print",ExpressionUUID->"a6b22330-7bfb-47a8-a077-6042797d5058"],
Cell[381514, 7269, 497, 11, 24, "Print",ExpressionUUID->"2c59e846-d7bb-457b-8f9a-5cb4a291dc9e"],
Cell[382014, 7282, 500, 11, 24, "Print",ExpressionUUID->"be4de85e-4998-416c-9964-c84bf093f05f"],
Cell[382517, 7295, 499, 11, 24, "Print",ExpressionUUID->"078e3b0e-013d-420f-9bca-6e0d9477773d"],
Cell[383019, 7308, 496, 11, 24, "Print",ExpressionUUID->"43b52e62-aa9d-4916-9d6e-f479c24f0955"],
Cell[383518, 7321, 497, 11, 24, "Print",ExpressionUUID->"6e79c320-1754-4d00-bbab-a6a307ad3ccb"],
Cell[384018, 7334, 500, 11, 24, "Print",ExpressionUUID->"43708ed7-5bbd-41b4-8eca-7d109c7124c6"],
Cell[384521, 7347, 500, 11, 24, "Print",ExpressionUUID->"40e7aa54-5121-474c-a8b3-3a899e9576bf"],
Cell[385024, 7360, 500, 11, 24, "Print",ExpressionUUID->"6452de0f-fb94-4905-bb72-286b06f47fb1"]
}, Open  ]],
Cell[385539, 7374, 529, 12, 24, "Message",ExpressionUUID->"e6f9e8f1-0ab8-4221-b428-fb2a0841cdc3"],
Cell[CellGroupData[{
Cell[386093, 7390, 502, 11, 24, "Print",ExpressionUUID->"67863512-fb10-48fc-8b1c-d9a12ca854dd"],
Cell[386598, 7403, 497, 11, 24, "Print",ExpressionUUID->"f550ecda-c6b1-4b70-93e3-427935ed3d08"],
Cell[387098, 7416, 500, 11, 24, "Print",ExpressionUUID->"878cf4a2-21e4-404b-a1f4-55243214e21f"],
Cell[387601, 7429, 497, 11, 24, "Print",ExpressionUUID->"adabc19b-9f5e-49bd-aa54-38bf65d02ecf"]
}, Open  ]],
Cell[388113, 7443, 530, 12, 24, "Message",ExpressionUUID->"6e1a8d6a-dcbc-4a4c-baa1-951c04bce6ed"],
Cell[388646, 7457, 500, 11, 24, "Print",ExpressionUUID->"067727b1-cb84-439e-90b6-ff98ed4afd9e"],
Cell[389149, 7470, 531, 12, 24, "Message",ExpressionUUID->"bb6713dd-8c1b-441a-901a-e51485e39962"],
Cell[389683, 7484, 525, 11, 24, "Message",ExpressionUUID->"e1dfcd16-2eb2-47ed-afc0-7ddca37c7eb3"],
Cell[CellGroupData[{
Cell[390233, 7499, 497, 11, 24, "Print",ExpressionUUID->"c316e761-b4b8-48b6-835d-5281caddfdbd"],
Cell[390733, 7512, 497, 11, 24, "Print",ExpressionUUID->"416ff9af-b20d-42d1-b1ac-52621ff78a1b"],
Cell[391233, 7525, 502, 11, 24, "Print",ExpressionUUID->"2f7d0cf3-dd04-4598-a69a-60c66b98f60d"],
Cell[391738, 7538, 497, 11, 24, "Print",ExpressionUUID->"84c6855c-b915-4df0-9679-ca363a8c6e15"],
Cell[392238, 7551, 500, 11, 24, "Print",ExpressionUUID->"267ce95f-9ec9-4e1b-8810-ff40a7ecda54"],
Cell[392741, 7564, 495, 11, 24, "Print",ExpressionUUID->"632c9532-c0e4-485e-82aa-ddf42c9a5d80"]
}, Open  ]]
}, Open  ]],
Cell[393263, 7579, 342, 7, 35, "Text",ExpressionUUID->"ec104cdd-b07c-4c54-b5b4-0d987db553e3"],
Cell[CellGroupData[{
Cell[393630, 7590, 5552, 126, 283, "Input",ExpressionUUID->"34b68904-024d-44a9-b968-cc141e034737"],
Cell[399185, 7718, 731, 15, 24, "Message",ExpressionUUID->"521612a3-6958-41e7-8683-e5f00c1ace77"],
Cell[399919, 7735, 732, 15, 24, "Message",ExpressionUUID->"4952c59c-5980-479e-8e10-46dbc2736895"],
Cell[400654, 7752, 730, 15, 24, "Message",ExpressionUUID->"f25ad057-3d44-411f-8ad8-0ded192a177b"],
Cell[401387, 7769, 726, 14, 24, "Message",ExpressionUUID->"06b164ab-6e06-4df9-a01a-ea8d6c0f0cc7"],
Cell[402116, 7785, 394, 9, 24, "Print",ExpressionUUID->"c7e89915-d4ac-450f-8f1f-b4b6488a7579"]
}, Open  ]],
Cell[402525, 7797, 430, 8, 58, "Text",ExpressionUUID->"db505c45-1cdb-43d3-baae-6bf32c67faf4"],
Cell[CellGroupData[{
Cell[402980, 7809, 1917, 49, 94, "Input",ExpressionUUID->"9a983970-ac0b-4c7c-a2a6-65e27c8606a4"],
Cell[404900, 7860, 316, 6, 34, "Output",ExpressionUUID->"94590370-a627-4713-bcd1-97c98e9bae46"]
}, Open  ]]
}
]
*)

